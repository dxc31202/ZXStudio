using System;
using System.IO;
using System.Collections.Generic;
using System.Drawing;
using System.Diagnostics;
using System.Windows.Forms;
using System.Runtime.InteropServices;
using System.Threading.Tasks;
namespace ZXStudio
{
    public partial class Z80 : Panel, IMemory, IDisposable
    {
        public void ExecuteFrame(int framelength)
        {
            int x;
            int y;
            int cy;
            int b7;
            sbyte disp;
            while (TotalCycles < framelength)
            {
                // Pass control to the Virtual function.
                switch (PC)
                {
                    // For Hard Reset
                    case 0x0000:
                        Reset(true);
                        break;
                    // For Soft Reset
                    case 0x11b7:
                        Reset(false);
                        break;
                    // For ResetComplete.
                    case 0x12a0:
                        ResetComplete();
                        break;
                }
                // Pass control to the Virtual function BeforeExecute.
                BeforeExecute();
                PreExecutePC = PC;
                // Keep Running total of Cycles up to date
                PreExecuteCycles = TotalCycles;
                Opcode = FetchOpcode();
                Decoder:
                switch (Opcode)
                {
                    #region Decoder
                    case 0x00:
                        // Opcode:    NOP
                        // TStates:   4
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        // MCycles2:  pc:4
                        // Operation: No Operation
                        break;
                    case 0x01:
                        // Opcode:    LD BC,$nn
                        // Attributes:Word, Direct
                        // TStates:   10
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        //            M1, 3 T States - Operand Data Read of Low Byte
                        //            M2, 3 T States - Operand Data Read of High Byte
                        // MCycles2:  pc:4,pc+1:3,pc+2:3
                        // Operation: BC = NN
                        BC = (PeekByte(PC++) + (PeekByte(PC++) << 8));
                        break;
                    case 0x02:
                        // Opcode:    LD (BC),A
                        // TStates:   7
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        //            M1, 3 T States - Memory Read
                        // MCycles2:  pc:4,bc:3
                        // MemPtr:    MEMPTR_low = (rp + 1) & #FF,  MEMPTR_hi = A, Note for *BM1: MEMPTR_low = (rp + 1) & #FF,  MEMPTR_hi = 0
                        // Operation: [BC] = A
                        PokeByte(BC, A);
                        WZ = (A << 8) | ((BC + 1) & 0xff);
                        break;
                    case 0x03:
                        // Opcode:    INC BC
                        // TStates:   6
                        // MCycles:   M0, 6 T States - Op Code Fetch
                        // MCycles2:  pc:6
                        // Operation: BC = BC+1
                        AddCycles(IR, 2);
                        BC++;
                        break;
                    case 0x04:
                        // Opcode:    INC B
                        // TStates:   4
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        // MCycles2:  pc:4
                        // Flags:     SZ5H3VN-
                        // Operation: B = B+1
                        x = (B + 1) & 0xff;
                        fs = x & FS;
                        fz = (x & 0xff) == 0 ? FZ : 0;
                        f5 = x & F5;
                        fh = ((B & 0x0f) + 1) & 0x10;
                        f3 = x & F3;
                        fp = (B == 0x7f) ? FV : 0;
                        fn = 0;
                        B = x;
                        break;
                    case 0x05:
                        // Opcode:    DEC B
                        // TStates:   4
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        // MCycles2:  pc:4
                        // Flags:     SZ5H3VN-
                        // Operation: B = B-1
                        x = (B - 1) & 0xff;
                        fs = x & FS;
                        fz = (x & 0xff) == 0 ? FZ : 0;
                        f5 = x & F5;
                        fh = (((B & 0x0f) - 1) & 0x10) != 0 ? FH : 0;
                        f3 = x & F3;
                        fp = (B == 0x80) ? FV : 0;
                        fn = FN;
                        B = x;
                        break;
                    case 0x06:
                        // Opcode:    LD B,$b
                        // Attributes:Byte, Direct
                        // TStates:   7
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        //            M1, 3 T States - Operand Data Read
                        // MCycles2:  pc:4,pc+1:3
                        // Operation: B = N
                        B = PeekByte(PC);
                        PC++;
                        break;
                    case 0x07:
                        // Opcode:    RLCA
                        // TStates:   4
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        // MCycles2:  pc:4
                        // Flags:     --503-0C
                        // Operation: A = {A}<<
                        fc = (A & 0x80) >> 7;
                        A = (((A << 1) & 0xfE) | fc) & 0xff;
                        f5 = A & F5;
                        fh = 0;
                        f3 = A & F3;
                        fn = 0;
                        break;
                    case 0x08:
                        // Opcode:    EX AF,AF'
                        // TStates:   4
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        // MCycles2:  pc:4
                        // Flags:     ********
                        //            * As preserved in exchange
                        // Operation: AF<->AF'
                        x = AF;
                        AF = AF_;
                        AF_ = x;
                        break;
                    case 0x09:
                        // Opcode:    ADD HL,BC
                        // TStates:   11
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        //            M1, 4 T States - Internal CPU Operation
                        //            M2, 3 T States - Internal CPU Operation
                        // MCycles2:  pc:11
                        // Flags:     --***-0C
                        //            * F5 H F3 from higher bytes addition
                        // MemPtr:    MEMPTR = rp1_before_operation + 1
                        // Operation: HL = HL+BC
                        AddCycles(IR, 4);
                        AddCycles(IR, 3);
                        WZ = HL + 1;
                        x = HL + BC;
                        f5 = (x >> 8) & F5;
                        fh = (((HL & 0xfff) + (BC & 0xfff)) & 0x1000) != 0 ? FH : 0;
                        f3 = (x >> 8) & F3;
                        fn = 0;
                        fc = (x & 0x10000) != 0 ? FC : 0;
                        HL = x;
                        break;
                    case 0x0A:
                        // Opcode:    LD A,(BC) 
                        // TStates:   7
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        //            M1, 3 T States - Memory Write
                        // MCycles2:  pc:4,bc:3
                        // MemPtr:    MEMPTR = rp + 1
                        // Operation: A = [BC]
                        A = PeekByte(BC);
                        WZ = (BC + 1) & 0xffff;
                        break;
                    case 0x0B:
                        // Opcode:    DEC BC
                        // TStates:   6
                        // MCycles:   M0, 6 T States - Op Code Fetch
                        // MCycles2:  pc:6
                        // Operation: BC = BC-1
                        AddCycles(IR, 2);
                        BC--;
                        break;
                    case 0x0C:
                        // Opcode:    INC C
                        // TStates:   4
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        // MCycles2:  pc:4
                        // Flags:     SZ5H3VN-
                        // Operation: C = C+1
                        x = (C + 1) & 0xff;
                        fs = x & FS;
                        fz = (x & 0xff) == 0 ? FZ : 0;
                        f5 = x & F5;
                        fh = ((C & 0x0f) + 1) & 0x10;
                        f3 = x & F3;
                        fp = (C == 0x7f) ? FV : 0;
                        fn = 0;
                        C = x;
                        break;
                    case 0x0D:
                        // Opcode:    DEC C
                        // TStates:   4
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        // MCycles2:  pc:4
                        // Flags:     SZ5H3VN-
                        // Operation: C = C-1
                        x = (C - 1) & 0xff;
                        fs = x & FS;
                        fz = (x & 0xff) == 0 ? FZ : 0;
                        f5 = x & F5;
                        fh = (((C & 0x0f) - 1) & 0x10) != 0 ? FH : 0;
                        f3 = x & F3;
                        fp = (C == 0x80) ? FV : 0;
                        fn = FN;
                        C = x;
                        break;
                    case 0x0E:
                        // Opcode:    LD C,$b
                        // Attributes:Byte, Direct
                        // TStates:   7
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        //            M1, 3 T States - Operand Data Read
                        // MCycles2:  pc:4,pc+1:3
                        // Operation: C = N
                        C = PeekByte(PC);
                        PC++;
                        break;
                    case 0x0F:
                        // Opcode:    RRCA
                        // TStates:   4
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        // MCycles2:  pc:4
                        // Flags:     --503-0C
                        // Operation: A = >>{A}
                        cy = A & FC;
                        A = ((A >> 1) & 0x7f) | (cy << 7);
                        f5 = A & F5;
                        fh = 0;
                        f3 = A & F3;
                        fn = 0;
                        fc = cy;
                        break;
                    case 0x10:
                        // Opcode:    DJNZ $d
                        // Attributes:Branch, Conditional
                        // TStates:   8 / 13
                        // MCycles:   M0, 5 T States - Op Code Fetch
                        //            M1, 3 T States - Operand Data Read
                        //            If Condition
                        //            M2, 5 T States - Internal CPU Operation
                        // MCycles2:  pc:5,pc+1:3,[pc+1:1 x 5]
                        // MemPtr:    MEMPTR = addr
                        // Operation: B = B-1, if B ! =  0 then PC+ = n
                        AddCycles(IR, 1);
                        disp = (sbyte)PeekByte(PC);
                        B--;
                        if (B != 0)
                        {
                            AddCycles(PC, 5);
                            PC += disp;
                            WZ = PC + 1;
                        }
                        PC++;
                        // Pass control to the Virtual function Djnz
                        Djnz(Opcode, PreExecutePC);

                        break;
                    case 0x11:
                        // Opcode:    LD DE,$nn
                        // Attributes:Word, Direct
                        // TStates:   10
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        //            M1, 3 T States - Operand Data Read of Low Byte
                        //            M2, 3 T States - Operand Data Read of High Byte
                        // MCycles2:  pc:4,pc+1:3,pc+2:3
                        // Operation: DE = NN
                        DE = (PeekByte(PC++) + (PeekByte(PC++) << 8));
                        break;
                    case 0x12:
                        // Opcode:    LD (DE),A
                        // TStates:   7
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        //            M1, 3 T States - Memory Read
                        // MCycles2:  pc:4,de:3
                        // MemPtr:    MEMPTR_low = (rp + 1) & #FF,  MEMPTR_hi = A, Note for *BM1: MEMPTR_low = (rp + 1) & #FF,  MEMPTR_hi = 0
                        // Operation: [DE] = A
                        PokeByte(DE, A);
                        WZ = (A << 8) | ((DE + 1) & 0xff);
                        break;
                    case 0x13:
                        // Opcode:    INC DE
                        // TStates:   6
                        // MCycles:   M0, 6 T States - Op Code Fetch
                        // MCycles2:  pc:6
                        // Operation: DE = DE+1
                        AddCycles(IR, 2);
                        DE++;
                        break;
                    case 0x14:
                        // Opcode:    INC D
                        // TStates:   4
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        // MCycles2:  pc:4
                        // Flags:     SZ5H3VN-
                        // Operation: D = D+1
                        x = (D + 1) & 0xff;
                        fs = x & FS;
                        fz = (x & 0xff) == 0 ? FZ : 0;
                        f5 = x & F5;
                        fh = ((D & 0x0f) + 1) & 0x10;
                        f3 = x & F3;
                        fp = (D == 0x7f) ? FV : 0;
                        fn = 0;
                        D = x;
                        break;
                    case 0x15:
                        // Opcode:    DEC D
                        // TStates:   4
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        // MCycles2:  pc:4
                        // Flags:     SZ5H3VN-
                        // Operation: D = D-1
                        x = (D - 1) & 0xff;
                        fs = x & FS;
                        fz = (x & 0xff) == 0 ? FZ : 0;
                        f5 = x & F5;
                        fh = (((D & 0x0f) - 1) & 0x10) != 0 ? FH : 0;
                        f3 = x & F3;
                        fp = (D == 0x80) ? FV : 0;
                        fn = FN;
                        D = x;
                        break;
                    case 0x16:
                        // Opcode:    LD D,$b
                        // Attributes:Byte, Direct
                        // TStates:   7
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        //            M1, 3 T States - Operand Data Read
                        // MCycles2:  pc:4,pc+1:3
                        // Operation: D = N
                        D = PeekByte(PC);
                        PC++;
                        break;
                    case 0x17:
                        // Opcode:    RLA
                        // TStates:   4
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        // MCycles2:  pc:4
                        // Flags:     --503-0C
                        // Operation: A = {CY,A}<<CY
                        cy = (A & 0x80) >> 7;
                        A = (((A << 1) & 0xfe) | fc) & 0xff;
                        f5 = A & F5;
                        fh = 0;
                        f3 = A & F3;
                        fn = 0;
                        fc = cy;
                        break;
                    case 0x18:
                        // Opcode:    JR $d
                        // Attributes:Branch, Terminal
                        // TStates:   12
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        //            M1, 3 T States - Operand Data Read
                        //            M2, 5 T States - Internal CPU Operation
                        // MCycles2:  pc:4,pc+1:3,[pc+1:1 x 5]
                        // MemPtr:    MEMPTR = addr
                        // Operation: PC = PC+n
                        disp = (sbyte)PeekByte(PC);
                        AddCycles(PC, 5);
                        PC += disp;
                        PC++;
                        WZ = PC;
                        // Pass control to the Virtual function JumpRelative
                        JumpRelative(Opcode, PreExecutePC);

                        break;
                    case 0x19:
                        // Opcode:    ADD HL,DE
                        // TStates:   11
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        //            M1, 4 T States - Internal CPU Operation
                        //            M2, 3 T States - Internal CPU Operation
                        // MCycles2:  pc:11
                        // Flags:     --***-0C
                        //            * F5 H F3 from higher bytes addition
                        // MemPtr:    MEMPTR = rp1_before_operation + 1
                        // Operation: HL = HL+DE
                        AddCycles(IR, 4);
                        AddCycles(IR, 3);
                        WZ = HL + 1;
                        x = HL + DE;
                        f5 = (x >> 8) & F5;
                        fh = (((HL & 0xfff) + (DE & 0xfff)) & 0x1000) != 0 ? FH : 0;
                        f3 = (x >> 8) & F3;
                        fn = 0;
                        fc = (x & 0x10000) != 0 ? FC : 0;
                        HL = x;
                        break;
                    case 0x1A:
                        // Opcode:    LD A,(DE) 
                        // TStates:   7
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        //            M1, 3 T States - Memory Write
                        // MCycles2:  pc:4,de:3
                        // MemPtr:    MEMPTR = rp + 1
                        // Operation: A = [DE]
                        A = PeekByte(DE);
                        WZ = (DE + 1) & 0xffff;
                        break;
                    case 0x1B:
                        // Opcode:    DEC DE
                        // TStates:   6
                        // MCycles:   M0, 6 T States - Op Code Fetch
                        // MCycles2:  pc:6
                        // Operation: DE = DE-1
                        AddCycles(IR, 2);
                        DE--;
                        break;
                    case 0x1C:
                        // Opcode:    INC E
                        // TStates:   4
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        // MCycles2:  pc:4
                        // Flags:     SZ5H3VN-
                        // Operation: E = E+1
                        x = (E + 1) & 0xff;
                        fs = x & FS;
                        fz = (x & 0xff) == 0 ? FZ : 0;
                        f5 = x & F5;
                        fh = ((E & 0x0f) + 1) & 0x10;
                        f3 = x & F3;
                        fp = (E == 0x7f) ? FV : 0;
                        fn = 0;
                        E = x;
                        break;
                    case 0x1D:
                        // Opcode:    DEC E
                        // TStates:   4
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        // MCycles2:  pc:4
                        // Flags:     SZ5H3VN-
                        // Operation: E = E-1
                        x = (E - 1) & 0xff;
                        fs = x & FS;
                        fz = (x & 0xff) == 0 ? FZ : 0;
                        f5 = x & F5;
                        fh = (((E & 0x0f) - 1) & 0x10) != 0 ? FH : 0;
                        f3 = x & F3;
                        fp = (E == 0x80) ? FV : 0;
                        fn = FN;
                        E = x;
                        break;
                    case 0x1E:
                        // Opcode:    LD E,$b
                        // Attributes:Byte, Direct
                        // TStates:   7
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        //            M1, 3 T States - Operand Data Read
                        // MCycles2:  pc:4,pc+1:3
                        // Operation: E = N
                        E = PeekByte(PC);
                        PC++;
                        break;
                    case 0x1F:
                        // Opcode:    RRA
                        // TStates:   4
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        // MCycles2:  pc:4
                        // Flags:     --503-0C
                        // Operation: A = CY>>{CY,A}
                        cy = A & FC;
                        A = ((A >> 1) & 0x7f) | (fc << 7);
                        f5 = A & F5;
                        fh = 0;
                        f3 = A & F3;
                        fn = 0;
                        fc = cy;
                        break;
                    case 0x20:
                        // Opcode:    JR NZ,$d
                        // Attributes:Branch, Conditional
                        // TStates:   7 / 12
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        //            M1, 3 T States - Operand Data Read
                        //            If Condition
                        //            M2, 5 T States - Internal CPU Operation
                        // MCycles2:  pc:4,pc+1:3,[pc+1:1 x 5]
                        // MemPtr:    MEMPTR = addr
                        // Operation: If !Z then PC = PC+n
                        disp = (sbyte)PeekByte(PC);
                        if (fz == 0)
                        {
                            AddCycles(PC, 5);
                            PC += disp;
                            WZ = PC + 1;
                        }
                        PC++;
                        // Pass control to the Virtual function JumpRelative
                        JumpRelative(Opcode, PreExecutePC);

                        break;
                    case 0x21:
                        // Opcode:    LD HL,$nn
                        // Attributes:Word, Direct
                        // TStates:   10
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        //            M1, 3 T States - Operand Data Read of Low Byte
                        //            M2, 3 T States - Operand Data Read of High Byte
                        // MCycles2:  pc:4,pc+1:3,pc+2:3
                        // Operation: HL = NN
                        HL = (PeekByte(PC++) + (PeekByte(PC++) << 8));
                        break;
                    case 0x22:
                        // Opcode:    LD ($nn),HL
                        // Attributes:Indirect, Word
                        // TStates:   16
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        //            M1, 3 T States - Operand Data Read of Low Byte
                        //            M2, 3 T States - Operand Data Read of High Byte
                        //            M3, 3 T States - Memory Write of Low Byte
                        //            M4, 3 T States - Memory Write of High Byte
                        // MCycles2:  pc:4,pc+1:3,pc+2:3,nn:3,nn+1:3
                        // MemPtr:    MEMPTR = addr + 1
                        // Operation: [NN] = L, (NN+1) = H
                        WZ = (PeekByte(PC++) + (PeekByte(PC++) << 8));
                        PokeByte(WZ++, HL & 0xff);
                        PokeByte(WZ, HL >> 8);
                        break;
                    case 0x23:
                        // Opcode:    INC HL
                        // TStates:   6
                        // MCycles:   M0, 6 T States - Op Code Fetch
                        // MCycles2:  pc:6
                        // Operation: HL = HL+1
                        AddCycles(IR, 2);
                        HL++;
                        break;
                    case 0x24:
                        // Opcode:    INC H
                        // TStates:   4
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        // MCycles2:  pc:4
                        // Flags:     SZ5H3VN-
                        // Operation: H = H+1
                        x = (H + 1) & 0xff;
                        fs = x & FS;
                        fz = (x & 0xff) == 0 ? FZ : 0;
                        f5 = x & F5;
                        fh = ((H & 0x0f) + 1) & 0x10;
                        f3 = x & F3;
                        fp = (H == 0x7f) ? FV : 0;
                        fn = 0;
                        H = x;
                        break;
                    case 0x25:
                        // Opcode:    DEC H
                        // TStates:   4
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        // MCycles2:  pc:4
                        // Flags:     SZ5H3VN-
                        // Operation: H = H-1
                        x = (H - 1) & 0xff;
                        fs = x & FS;
                        fz = (x & 0xff) == 0 ? FZ : 0;
                        f5 = x & F5;
                        fh = (((H & 0x0f) - 1) & 0x10) != 0 ? FH : 0;
                        f3 = x & F3;
                        fp = (H == 0x80) ? FV : 0;
                        fn = FN;
                        H = x;
                        break;
                    case 0x26:
                        // Opcode:    LD H,$b
                        // Attributes:Byte, Direct
                        // TStates:   7
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        //            M1, 3 T States - Operand Data Read
                        // MCycles2:  pc:4,pc+1:3
                        // Operation: H = N
                        H = PeekByte(PC);
                        PC++;
                        break;
                    case 0x27:
                        // Opcode:    DAA
                        // TStates:   4
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        // MCycles2:  pc:4
                        // Flags:     SZ5*3P-*
                        //            * H from internal correction
                        //            * C for cascade BCD
                        // Operation: A = adjust result to BCD-format
                        x = A;
                        y = 0;
                        cy = fc;
                        if ((fh == FH) || ((x & 0x0f) > 0x09)) y |= 6;
                        if (((cy == FC) || (x > 0x9f)) || ((x > 0x8f) && ((x & 0x0f) > 9))) y |= 0x60;
                        if (x > 0x99) cy = FC;
                        if (fn == FN) SUB(y);
                        else ADD(y);
                        fc = cy;
                        fp = Parity[A];
                        break;
                    case 0x28:
                        // Opcode:    JR Z,$d
                        // Attributes:Branch, Conditional
                        // TStates:   7 / 12
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        //            M1, 3 T States - Operand Data Read
                        //            If Condition
                        //            M2, 5 T States - Internal CPU Operation
                        // MCycles2:  pc:4,pc+1:3,[pc+1:1 x 5]
                        // MemPtr:    MEMPTR = addr
                        // Operation: If Z then PC = PC+n
                        disp = (sbyte)PeekByte(PC);
                        if (fz != 0)
                        {
                            AddCycles(PC, 5);
                            PC += disp;
                            WZ = PC + 1;
                        }
                        PC++;
                        // Pass control to the Virtual function JumpRelative
                        JumpRelative(Opcode, PreExecutePC);

                        break;
                    case 0x29:
                        // Opcode:    ADD HL,HL
                        // TStates:   11
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        //            M1, 4 T States - Internal CPU Operation
                        //            M2, 3 T States - Internal CPU Operation
                        // MCycles2:  pc:11
                        // Flags:     --***-0C
                        //            * F5 H F3 from higher bytes addition
                        // MemPtr:    MEMPTR = rp1_before_operation + 1
                        // Operation: HL = HL+HL
                        AddCycles(IR, 4);
                        AddCycles(IR, 3);
                        WZ = HL + 1;
                        x = HL + HL;
                        f5 = (x >> 8) & F5;
                        fh = (((HL & 0xfff) + (HL & 0xfff)) & 0x1000) != 0 ? FH : 0;
                        f3 = (x >> 8) & F3;
                        fn = 0;
                        fc = (x & 0x10000) != 0 ? FC : 0;
                        HL = x;
                        break;
                    case 0x2A:
                        // Opcode:    LD HL,($nn) 
                        // Attributes:Indirect, Word
                        // TStates:   16
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        //            M1, 3 T States - Operand Data Read of Low Byte
                        //            M2, 3 T States - Operand Data Read of High Byte
                        //            M3, 3 T States - Memory Read of Low Byte
                        //            M4, 3 T States - Memory Read of High Byte
                        // MCycles2:  pc:4,pc+1:3,pc+2:3,nn:3,nn+1:3
                        // MemPtr:    MEMPTR = addr + 1
                        // Operation: L = [NN],H = [NN+1]
                        WZ = (PeekByte(PC++) + (PeekByte(PC++) << 8));
                        HL = (PeekByte(WZ++) + (PeekByte(WZ) << 8));
                        break;
                    case 0x2B:
                        // Opcode:    DEC HL
                        // TStates:   6
                        // MCycles:   M0, 6 T States - Op Code Fetch
                        // MCycles2:  pc:6
                        // Operation: HL = HL-1
                        AddCycles(IR, 2);
                        HL--;
                        break;
                    case 0x2C:
                        // Opcode:    INC L
                        // TStates:   4
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        // MCycles2:  pc:4
                        // Flags:     SZ5H3VN-
                        // Operation: L = L+1
                        x = (L + 1) & 0xff;
                        fs = x & FS;
                        fz = (x & 0xff) == 0 ? FZ : 0;
                        f5 = x & F5;
                        fh = ((L & 0x0f) + 1) & 0x10;
                        f3 = x & F3;
                        fp = (L == 0x7f) ? FV : 0;
                        fn = 0;
                        L = x;
                        break;
                    case 0x2D:
                        // Opcode:    DEC L
                        // TStates:   4
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        // MCycles2:  pc:4
                        // Flags:     SZ5H3VN-
                        // Operation: L = L-1
                        x = (L - 1) & 0xff;
                        fs = x & FS;
                        fz = (x & 0xff) == 0 ? FZ : 0;
                        f5 = x & F5;
                        fh = (((L & 0x0f) - 1) & 0x10) != 0 ? FH : 0;
                        f3 = x & F3;
                        fp = (L == 0x80) ? FV : 0;
                        fn = FN;
                        L = x;
                        break;
                    case 0x2E:
                        // Opcode:    LD L,$b
                        // Attributes:Byte, Direct
                        // TStates:   7
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        //            M1, 3 T States - Operand Data Read
                        // MCycles2:  pc:4,pc+1:3
                        // Operation: L = N
                        L = PeekByte(PC);
                        PC++;
                        break;
                    case 0x2F:
                        // Opcode:    CPL
                        // TStates:   4
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        // MCycles2:  pc:4
                        // Flags:     --*1*-1-
                        //            * F5 and F3 from A register
                        // Operation: A = ~A
                        A = A ^ 0xff;
                        f5 = A & F5;
                        f3 = A & F3;
                        fh = FH;
                        fn = FN;
                        break;
                    case 0x30:
                        // Opcode:    JR NC,$d
                        // Attributes:Branch, Conditional
                        // TStates:   7 / 12
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        //            M1, 3 T States - Operand Data Read
                        //            If Condition
                        //            M2, 5 T States - Internal CPU Operation
                        // MCycles2:  pc:4,pc+1:3,[pc+1:1 x 5]
                        // MemPtr:    MEMPTR = addr
                        // Operation: If !CY then PC = PC+n
                        disp = (sbyte)PeekByte(PC);
                        if (fc == 0)
                        {
                            AddCycles(PC, 5);
                            PC += disp;
                            WZ = PC + 1;
                        }
                        PC++;
                        // Pass control to the Virtual function JumpRelative
                        JumpRelative(Opcode, PreExecutePC);

                        break;
                    case 0x31:
                        // Opcode:    LD SP,$nn
                        // Attributes:Word, Direct
                        // TStates:   10
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        //            M1, 3 T States - Operand Data Read of Low Byte
                        //            M2, 3 T States - Operand Data Read of High Byte
                        // MCycles2:  pc:4,pc+1:3,pc+2:3
                        // Operation: SP = NN
                        SP = (PeekByte(PC++) + (PeekByte(PC++) << 8));
                        break;
                    case 0x32:
                        // Opcode:    LD ($nn),A
                        // Attributes:Indirect, Word
                        // TStates:   13
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        //            M1, 3 T States - Operand Data Read of Low Byte
                        //            M2, 3 T States - Operand Data Read of High Byte
                        // MCycles2:  pc:4,pc+1:3,pc+2:3,nn:3
                        // MemPtr:    MEMPTR_low = (addr + 1) & #FF,  MEMPTR_hi = A, Note for *BM1: MEMPTR_low = (addr + 1) & #FF,  MEMPTR_hi = 0
                        // Operation: [NN] = A
                        x = (PeekByte(PC++) + (PeekByte(PC++) << 8));
                        PokeByte(x, A);
                        WZ = (A << 8) | ((x + 1) & 0xff);
                        break;
                    case 0x33:
                        // Opcode:    INC SP
                        // TStates:   6
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        // MCycles2:  pc:6
                        // Operation: SP = SP+1
                        AddCycles(IR, 2);
                        SP++;
                        break;
                    case 0x34:
                        // Opcode:    INC (HL) 
                        // TStates:   11
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        // MCycles2:  pc:4,hl:4,hl(write):3
                        // Flags:     SZ5H3VN-
                        // Operation: [HL] = [HL]+1
                        y = PeekByte(HL);
                        x = (y + 1) & 0xff;
                        fs = x & FS;
                        fz = (x & 0xff) == 0 ? FZ : 0;
                        f5 = x & F5;
                        fh = ((y & 0x0f) + 1) & 0x10;
                        f3 = x & F3;
                        fp = (y == 0x7f) ? FV : 0;
                        fn = 0;
                        PokeByte(HL, x);
                        AddCycles(HL, 1);
                        break;
                    case 0x35:
                        // Opcode:    DEC (HL) 
                        // TStates:   11
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        // MCycles2:  pc:4,hl:4,hl(write):3
                        // Flags:     SZ5H3VN-
                        // Operation: [HL] = [HL]-1
                        y = PeekByte(HL);
                        x = (y - 1) & 0xff;
                        fs = x & FS;
                        fz = (x & 0xff) == 0 ? FZ : 0;
                        f5 = x & F5;
                        fh = (((y & 0x0f) - 1) & 0x10) != 0 ? FH : 0;
                        f3 = x & F3;
                        fp = (y == 0x80) ? FV : 0;
                        fn = FN;
                        PokeByte(HL, x);
                        AddCycles(HL, 1);
                        break;
                    case 0x36:
                        // Opcode:    LD (HL),$b
                        // Attributes:Byte, Direct
                        // TStates:   10
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        //            M1, 3 T States - Operand Data Read
                        //            M2, 3 T States - Memory Write
                        // MCycles2:  pc:4,pc+1:3,hl:3
                        // Operation: [HL] = N
                        PokeByte(HL, PeekByte(PC++));
                        break;
                    case 0x37:
                        // Opcode:    SCF
                        // TStates:   4
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        // MCycles2:  pc:4
                        // Flags:     --*0*-01
                        //            * F5 and F3 from A register
                        // Operation: CY = 1
                        f5 = A & F5;
                        fh = 0;
                        f3 = A & F3;
                        fn = 0;
                        fc = FC;
                        break;
                    case 0x38:
                        // Opcode:    JR C,$d
                        // Attributes:Branch, Conditional
                        // TStates:   7 / 12
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        //            M1, 3 T States - Operand Data Read
                        //            If Condition
                        //            M2, 5 T States - Internal CPU Operation
                        // MCycles2:  pc:4,pc+1:3,[pc+1:1 x 5]
                        // MemPtr:    MEMPTR = addr
                        // Operation: If CY then PC = PC+n
                        disp = (sbyte)PeekByte(PC);
                        if (fc != 0)
                        {
                            AddCycles(PC, 5);
                            PC += disp;
                            WZ = PC + 1;
                        }
                        PC++;
                        // Pass control to the Virtual function JumpRelative
                        JumpRelative(Opcode, PreExecutePC);

                        break;
                    case 0x39:
                        // Opcode:    ADD HL,SP
                        // TStates:   11
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        //            M1, 4 T States - Internal CPU Operation
                        //            M2, 3 T States - Internal CPU Operation
                        // MCycles2:  pc:11
                        // Flags:     --***-0C
                        //            * F5 H F3 from higher bytes addition
                        // MemPtr:    MEMPTR = rp1_before_operation + 1
                        // Operation: HL = HL+SP
                        AddCycles(IR, 4);
                        AddCycles(IR, 3);
                        WZ = HL + 1;
                        x = HL + SP;
                        f5 = (x >> 8) & F5;
                        fh = (((HL & 0xfff) + (SP & 0xfff)) & 0x1000) != 0 ? FH : 0;
                        f3 = (x >> 8) & F3;
                        fn = 0;
                        fc = (x & 0x10000) != 0 ? FC : 0;
                        HL = x;
                        break;
                    case 0x3A:
                        // Opcode:    LD A,($nn) 
                        // Attributes:Indirect, Word
                        // TStates:   13
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        //            M1, 3 T States - Operand Data Read of Low Byte
                        //            M2, 3 T States - Operand Data Read of High Byte
                        // MCycles2:  pc:4,pc+1:3,pc+2:3,nn:3
                        // MemPtr:    MEMPTR = addr + 1
                        // Operation: A = [NN]
                        WZ = (PeekByte(PC++) + (PeekByte(PC++) << 8));
                        A = PeekByte(WZ++);
                        break;
                    case 0x3B:
                        // Opcode:    DEC SP
                        // TStates:   6
                        // MCycles:   M0, 6 T States - Op Code Fetch
                        // MCycles2:  pc:6
                        // Operation: SP = SP-1
                        AddCycles(IR, 2);
                        SP--;
                        break;
                    case 0x3C:
                        // Opcode:    INC A
                        // TStates:   4
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        // MCycles2:  pc:4
                        // Flags:     SZ5H3VN-
                        // Operation: A = A+1
                        x = (A + 1) & 0xff;
                        fs = x & FS;
                        fz = (x & 0xff) == 0 ? FZ : 0;
                        f5 = x & F5;
                        fh = ((A & 0x0f) + 1) & 0x10;
                        f3 = x & F3;
                        fp = (A == 0x7f) ? FV : 0;
                        fn = 0;
                        A = x;
                        break;
                    case 0x3D:
                        // Opcode:    DEC A
                        // TStates:   4
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        // MCycles2:  pc:4
                        // Flags:     SZ5H3VN-
                        // Operation: A = A-1
                        x = (A - 1) & 0xff;
                        fs = x & FS;
                        fz = (x & 0xff) == 0 ? FZ : 0;
                        f5 = x & F5;
                        fh = (((A & 0x0f) - 1) & 0x10) != 0 ? FH : 0;
                        f3 = x & F3;
                        fp = (A == 0x80) ? FV : 0;
                        fn = FN;
                        A = x;
                        break;
                    case 0x3E:
                        // Opcode:    LD A,$b
                        // Attributes:Byte, Direct
                        // TStates:   7
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        //            M1, 3 T States - Operand Data Read
                        // MCycles2:  pc:4,pc+1:3
                        // Operation: A = N
                        A = PeekByte(PC);
                        PC++;
                        break;
                    case 0x3F:
                        // Opcode:    CCF
                        // TStates:   4
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        // MCycles2:  pc:4
                        // Flags:     --***-0*
                        //            * C=1-C
                        //            * H as old C
                        //            * F5 and F3 from A register
                        // Operation: CY = ~CY
                        f5 = A & F5;
                        fh = fc << 4;
                        f3 = A & F3;
                        fn = 0;
                        fc = fc == FC ? 0 : FC;
                        break;
                    case 0x40:
                        // Opcode:    LD B,B
                        // TStates:   4
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        // MCycles2:  pc:4
                        // Operation: B = B
                        break;
                    case 0x41:
                        // Opcode:    LD B,C
                        // TStates:   4
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        // MCycles2:  pc:4
                        // Operation: B = C
                        b = c;
                        break;
                    case 0x42:
                        // Opcode:    LD B,D
                        // TStates:   4
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        // MCycles2:  pc:4
                        // Operation: B = D
                        b = d;
                        break;
                    case 0x43:
                        // Opcode:    LD B,E
                        // TStates:   4
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        // MCycles2:  pc:4
                        // Operation: B = E
                        b = e;
                        break;
                    case 0x44:
                        // Opcode:    LD B,H
                        // TStates:   4
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        // MCycles2:  pc:4
                        // Operation: B = H
                        b = h;
                        break;
                    case 0x45:
                        // Opcode:    LD B,L
                        // TStates:   4
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        // MCycles2:  pc:4
                        // Operation: B = L
                        b = l;
                        break;
                    case 0x46:
                        // Opcode:    LD B,(HL) 
                        // TStates:   7
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        //            M1, 3 T States - Memory Read
                        // MCycles2:  pc:4,hl:3
                        // Operation: B = (HL)
                        b = PeekByte(HL);
                        break;
                    case 0x47:
                        // Opcode:    LD B,A
                        // TStates:   4
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        // MCycles2:  pc:4
                        // Operation: B = A
                        b = a;
                        break;
                    case 0x48:
                        // Opcode:    LD C,B
                        // TStates:   4
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        // MCycles2:  pc:4
                        // Operation: C = B
                        c = b;
                        break;
                    case 0x49:
                        // Opcode:    LD C,C
                        // TStates:   4
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        // MCycles2:  pc:4
                        // Operation: C = C
                        break;
                    case 0x4A:
                        // Opcode:    LD C,D
                        // TStates:   4
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        // MCycles2:  pc:4
                        // Operation: C = D
                        c = d;
                        break;
                    case 0x4B:
                        // Opcode:    LD C,E
                        // TStates:   4
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        // MCycles2:  pc:4
                        // Operation: C = E
                        c = e;
                        break;
                    case 0x4C:
                        // Opcode:    LD C,H
                        // TStates:   4
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        // MCycles2:  pc:4
                        // Operation: C = H
                        c = h;
                        break;
                    case 0x4D:
                        // Opcode:    LD C,L
                        // TStates:   4
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        // MCycles2:  pc:4
                        // Operation: C = L
                        c = l;
                        break;
                    case 0x4E:
                        // Opcode:    LD C,(HL) 
                        // TStates:   7
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        //            M1, 3 T States - Memory Read
                        // MCycles2:  pc:4,hl:3
                        // Operation: C = (HL)
                        c = PeekByte(HL);
                        break;
                    case 0x4F:
                        // Opcode:    LD C,A
                        // TStates:   4
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        // MCycles2:  pc:4
                        // Operation: C = A
                        c = a;
                        break;
                    case 0x50:
                        // Opcode:    LD D,B
                        // TStates:   4
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        // MCycles2:  pc:4
                        // Operation: D = B
                        d = b;
                        break;
                    case 0x51:
                        // Opcode:    LD D,C
                        // TStates:   4
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        // MCycles2:  pc:4
                        // Operation: D = C
                        d = c;
                        break;
                    case 0x52:
                        // Opcode:    LD D,D
                        // TStates:   4
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        // MCycles2:  pc:4
                        // Operation: D = D
                        break;
                    case 0x53:
                        // Opcode:    LD D,E
                        // TStates:   4
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        // MCycles2:  pc:4
                        // Operation: D = E
                        d = e;
                        break;
                    case 0x54:
                        // Opcode:    LD D,H
                        // TStates:   4
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        // MCycles2:  pc:4
                        // Operation: D = H
                        d = h;
                        break;
                    case 0x55:
                        // Opcode:    LD D,L
                        // TStates:   4
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        // MCycles2:  pc:4
                        // Operation: D = L
                        d = l;
                        break;
                    case 0x56:
                        // Opcode:    LD D,(HL) 
                        // TStates:   7
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        //            M1, 3 T States - Memory Read
                        // MCycles2:  pc:4,hl:3
                        // Operation: D = (HL)
                        d = PeekByte(HL);
                        break;
                    case 0x57:
                        // Opcode:    LD D,A
                        // TStates:   4
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        // MCycles2:  pc:4
                        // Operation: D = A
                        d = a;
                        break;
                    case 0x58:
                        // Opcode:    LD E,B
                        // TStates:   4
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        // MCycles2:  pc:4
                        // Operation: E = B
                        e = b;
                        break;
                    case 0x59:
                        // Opcode:    LD E,C
                        // TStates:   4
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        // MCycles2:  pc:4
                        // Operation: E = C
                        e = c;
                        break;
                    case 0x5A:
                        // Opcode:    LD E,D
                        // TStates:   4
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        // MCycles2:  pc:4
                        // Operation: E = D
                        e = d;
                        break;
                    case 0x5B:
                        // Opcode:    LD E,E
                        // TStates:   4
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        // MCycles2:  pc:4
                        // Operation: E = E
                        break;
                    case 0x5C:
                        // Opcode:    LD E,H
                        // TStates:   4
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        // MCycles2:  pc:4
                        // Operation: E = H
                        e = h;
                        break;
                    case 0x5D:
                        // Opcode:    LD E,L
                        // TStates:   4
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        // MCycles2:  pc:4
                        // Operation: E = L
                        e = l;
                        break;
                    case 0x5E:
                        // Opcode:    LD E,(HL) 
                        // TStates:   7
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        //            M1, 3 T States - Memory Read
                        // MCycles2:  pc:4,hl:3
                        // Operation: E = (HL)
                        e = PeekByte(HL);
                        break;
                    case 0x5F:
                        // Opcode:    LD E,A
                        // TStates:   4
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        // MCycles2:  pc:4
                        // Operation: E = A
                        e = a;
                        break;
                    case 0x60:
                        // Opcode:    LD H,B
                        // TStates:   4
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        // MCycles2:  pc:4
                        // Operation: H = B
                        h = b;
                        break;
                    case 0x61:
                        // Opcode:    LD H,C
                        // TStates:   4
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        // MCycles2:  pc:4
                        // Operation: H = C
                        h = c;
                        break;
                    case 0x62:
                        // Opcode:    LD H,D
                        // TStates:   4
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        // MCycles2:  pc:4
                        // Operation: H = D
                        h = d;
                        break;
                    case 0x63:
                        // Opcode:    LD H,E
                        // TStates:   4
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        // MCycles2:  pc:4
                        // Operation: H = E
                        h = e;
                        break;
                    case 0x64:
                        // Opcode:    LD H,H
                        // TStates:   4
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        // MCycles2:  pc:4
                        // Operation: H = H
                        break;
                    case 0x65:
                        // Opcode:    LD H,L
                        // TStates:   4
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        // MCycles2:  pc:4
                        // Operation: H = L
                        h = l;
                        break;
                    case 0x66:
                        // Opcode:    LD H,(HL) 
                        // TStates:   7
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        //            M1, 3 T States - Memory Read
                        // MCycles2:  pc:4,hl:3
                        // Operation: H = (HL)
                        h = PeekByte(HL);
                        break;
                    case 0x67:
                        // Opcode:    LD H,A
                        // TStates:   4
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        // MCycles2:  pc:4
                        // Operation: H = A
                        h = a;
                        break;
                    case 0x68:
                        // Opcode:    LD L,B
                        // TStates:   4
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        // MCycles2:  pc:4
                        // Operation: L = B
                        l = b;
                        break;
                    case 0x69:
                        // Opcode:    LD L,C
                        // TStates:   4
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        // MCycles2:  pc:4
                        // Operation: L = C
                        l = c;
                        break;
                    case 0x6A:
                        // Opcode:    LD L,D
                        // TStates:   4
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        // MCycles2:  pc:4
                        // Operation: L = D
                        l = d;
                        break;
                    case 0x6B:
                        // Opcode:    LD L,E
                        // TStates:   4
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        // MCycles2:  pc:4
                        // Operation: L = E
                        l = e;
                        break;
                    case 0x6C:
                        // Opcode:    LD L,H
                        // TStates:   4
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        // MCycles2:  pc:4
                        // Operation: L = H
                        l = h;
                        break;
                    case 0x6D:
                        // Opcode:    LD L,L
                        // TStates:   4
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        // MCycles2:  pc:4
                        // Operation: L = L
                        break;
                    case 0x6E:
                        // Opcode:    LD L,(HL) 
                        // TStates:   7
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        //            M1, 3 T States - Memory Read
                        // MCycles2:  pc:4,hl:3
                        // Operation: L = (HL)
                        l = PeekByte(HL);
                        break;
                    case 0x6F:
                        // Opcode:    LD L,A
                        // TStates:   4
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        // MCycles2:  pc:4
                        // Operation: L = A
                        l = a;
                        break;
                    case 0x70:
                        // Opcode:    LD (HL),B
                        // TStates:   7
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        //            M1, 3 T States - Memory Write
                        // MCycles2:  pc:4,hl:3
                        // Operation: (HL)  = B
                        PokeByte(HL, B);
                        break;
                    case 0x71:
                        // Opcode:    LD (HL),C
                        // TStates:   7
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        //            M1, 3 T States - Memory Write
                        // MCycles2:  pc:4,hl:3
                        // Operation: (HL)  = C
                        PokeByte(HL, C);
                        break;
                    case 0x72:
                        // Opcode:    LD (HL),D
                        // TStates:   7
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        //            M1, 3 T States - Memory Write
                        // MCycles2:  pc:4,hl:3
                        // Operation: (HL)  = D
                        PokeByte(HL, D);
                        break;
                    case 0x73:
                        // Opcode:    LD (HL),E
                        // TStates:   7
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        //            M1, 3 T States - Memory Write
                        // MCycles2:  pc:4,hl:3
                        // Operation: (HL)  = E
                        PokeByte(HL, E);
                        break;
                    case 0x74:
                        // Opcode:    LD (HL),H
                        // TStates:   7
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        //            M1, 3 T States - Memory Write
                        // MCycles2:  pc:4,hl:3
                        // Operation: (HL)  = H
                        PokeByte(HL, H);
                        break;
                    case 0x75:
                        // Opcode:    LD (HL),L
                        // TStates:   7
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        //            M1, 3 T States - Memory Write
                        // MCycles2:  pc:4,hl:3
                        // Operation: (HL)  = L
                        PokeByte(HL, L);
                        break;
                    case 0x76:
                        // Opcode:    HALT
                        // TStates:   4
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        // MCycles2:  pc:4
                        // Operation: repeat NOP until interrupt
                        HaltCycle = true;
                        PC--;
                        break;
                    case 0x77:
                        // Opcode:    LD (HL),A
                        // TStates:   7
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        //            M1, 3 T States - Memory Write
                        // MCycles2:  pc:4,hl:3
                        // Operation: [HL] = A
                        PokeByte(HL, A);
                        break;
                    case 0x78:
                        // Opcode:    LD A,B
                        // TStates:   4
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        // MCycles2:  pc:4
                        // Operation: A = B
                        a = b;
                        break;
                    case 0x79:
                        // Opcode:    LD A,C
                        // TStates:   4
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        // MCycles2:  pc:4
                        // Operation: A = C
                        a = c;
                        break;
                    case 0x7A:
                        // Opcode:    LD A,D
                        // TStates:   4
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        // MCycles2:  pc:4
                        // Operation: A = D
                        a = d;
                        break;
                    case 0x7B:
                        // Opcode:    LD A,E
                        // TStates:   4
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        // MCycles2:  pc:4
                        // Operation: A = E
                        a = e;
                        break;
                    case 0x7C:
                        // Opcode:    LD A,H
                        // TStates:   4
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        // MCycles2:  pc:4
                        // Operation: A = H
                        a = h;
                        break;
                    case 0x7D:
                        // Opcode:    LD A,L
                        // TStates:   4
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        // MCycles2:  pc:4
                        // Operation: A = L
                        a = l;
                        break;
                    case 0x7E:
                        // Opcode:    LD A,(HL) 
                        // TStates:   7
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        //            M1, 3 T States - Memory Read
                        // MCycles2:  pc:4,hl:3
                        // Operation: A = (HL)
                        A = PeekByte(HL);
                        break;
                    case 0x7F:
                        // Opcode:    LD A,A
                        // TStates:   4
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        // MCycles2:  pc:4
                        // Operation: A = A
                        break;
                    case 0x80:
                        // Opcode:    ADD A,B
                        // TStates:   4
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        // MCycles2:  pc:4
                        // Flags:     SZ5H3VNC
                        // Operation: A = A + B
                        x = (A + B) & 0xff;
                        fs = x & FS;
                        fz = (x & 0xff) == 0 ? FZ : 0;
                        f5 = x & F5;
                        fh = ((((A & 0x0f) + (B & 0x0f))) & 0x10);
                        f3 = x & F3;
                        fp = (((A ^ ~B) & (A ^ x)) & 0x80) != 0 ? FV : 0;
                        fn = 0;
                        fc = (A + B) > 0xff ? FC : 0;
                        A = x;
                        break;
                    case 0x81:
                        // Opcode:    ADD A,C
                        // TStates:   4
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        // MCycles2:  pc:4
                        // Flags:     SZ5H3VNC
                        // Operation: A = A + C
                        x = (A + C) & 0xff;
                        fs = x & FS;
                        fz = (x & 0xff) == 0 ? FZ : 0;
                        f5 = x & F5;
                        fh = ((((A & 0x0f) + (C & 0x0f))) & 0x10);
                        f3 = x & F3;
                        fp = (((A ^ ~C) & (A ^ x)) & 0x80) != 0 ? FV : 0;
                        fn = 0;
                        fc = (A + C) > 0xff ? FC : 0;
                        A = x;
                        break;
                    case 0x82:
                        // Opcode:    ADD A,D
                        // TStates:   4
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        // MCycles2:  pc:4
                        // Flags:     SZ5H3VNC
                        // Operation: A = A + D
                        x = (A + D) & 0xff;
                        fs = x & FS;
                        fz = (x & 0xff) == 0 ? FZ : 0;
                        f5 = x & F5;
                        fh = ((((A & 0x0f) + (D & 0x0f))) & 0x10);
                        f3 = x & F3;
                        fp = (((A ^ ~D) & (A ^ x)) & 0x80) != 0 ? FV : 0;
                        fn = 0;
                        fc = (A + D) > 0xff ? FC : 0;
                        A = x;
                        break;
                    case 0x83:
                        // Opcode:    ADD A,E
                        // TStates:   4
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        // MCycles2:  pc:4
                        // Flags:     SZ5H3VNC
                        // Operation: A = A + E
                        x = (A + E) & 0xff;
                        fs = x & FS;
                        fz = (x & 0xff) == 0 ? FZ : 0;
                        f5 = x & F5;
                        fh = ((((A & 0x0f) + (E & 0x0f))) & 0x10);
                        f3 = x & F3;
                        fp = (((A ^ ~E) & (A ^ x)) & 0x80) != 0 ? FV : 0;
                        fn = 0;
                        fc = (A + E) > 0xff ? FC : 0;
                        A = x;
                        break;
                    case 0x84:
                        // Opcode:    ADD A,H
                        // TStates:   4
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        // MCycles2:  pc:4
                        // Flags:     SZ5H3VNC
                        // Operation: A = A + H
                        x = (A + H) & 0xff;
                        fs = x & FS;
                        fz = (x & 0xff) == 0 ? FZ : 0;
                        f5 = x & F5;
                        fh = ((((A & 0x0f) + (H & 0x0f))) & 0x10);
                        f3 = x & F3;
                        fp = (((A ^ ~H) & (A ^ x)) & 0x80) != 0 ? FV : 0;
                        fn = 0;
                        fc = (A + H) > 0xff ? FC : 0;
                        A = x;
                        break;
                    case 0x85:
                        // Opcode:    ADD A,L
                        // TStates:   4
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        // MCycles2:  pc:4
                        // Flags:     SZ5H3VNC
                        // Operation: A = A + L
                        x = (A + L) & 0xff;
                        fs = x & FS;
                        fz = (x & 0xff) == 0 ? FZ : 0;
                        f5 = x & F5;
                        fh = ((((A & 0x0f) + (L & 0x0f))) & 0x10);
                        f3 = x & F3;
                        fp = (((A ^ ~L) & (A ^ x)) & 0x80) != 0 ? FV : 0;
                        fn = 0;
                        fc = (A + L) > 0xff ? FC : 0;
                        A = x;
                        break;
                    case 0x86:
                        // Opcode:    ADD A,(HL) 
                        // TStates:   7
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        //            M1, 3 T States - Memory Read
                        // MCycles2:  pc:4,hl:3
                        // Flags:     SZ5H3VNC
                        // Operation: A = A + (HL)
                        y = PeekByte(HL);
                        x = (A + y) & 0xff;
                        fs = x & FS;
                        fz = (x & 0xff) == 0 ? FZ : 0;
                        f5 = x & F5;
                        fh = ((((A & 0x0f) + (y & 0x0f))) & 0x10);
                        f3 = x & F3;
                        fp = (((A ^ ~y) & (A ^ x)) & 0x80) != 0 ? FV : 0;
                        fn = 0;
                        fc = (A + y) > 0xff ? FC : 0;
                        A = x;
                        break;
                    case 0x87:
                        // Opcode:    ADD A,A
                        // TStates:   4
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        // MCycles2:  pc:4
                        // Flags:     SZ5H3VNC
                        // Operation: A = A + A
                        x = (A + A) & 0xff;
                        fs = x & FS;
                        fz = (x & 0xff) == 0 ? FZ : 0;
                        f5 = x & F5;
                        fh = ((((A & 0x0f) + (A & 0x0f))) & 0x10);
                        f3 = x & F3;
                        fp = (((A ^ ~A) & (A ^ x)) & 0x80) != 0 ? FV : 0;
                        fn = 0;
                        fc = (A + A) > 0xff ? FC : 0;
                        A = x;
                        break;
                    case 0x88:
                        // Opcode:    ADC A,B
                        // TStates:   4
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        // MCycles2:  pc:4
                        // Flags:     SZ5H3VNC
                        // Operation: A = A + CY + B
                        x = (A + B + fc) & 0xff;
                        fs = x & FS;
                        fz = (x & 0xff) == 0 ? FZ : 0;
                        f5 = x & F5;
                        fh = ((((A & 0x0f) + (B & 0x0f)) + fc) & 0x10);
                        f3 = x & F3;
                        fp = (((A ^ ~B) & (A ^ x)) & 0x80) != 0 ? FV : 0;
                        fn = 0;
                        fc = (A + B + fc) > 0xff ? FC : 0;
                        A = x;
                        break;
                    case 0x89:
                        // Opcode:    ADC A,C
                        // TStates:   4
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        // MCycles2:  pc:4
                        // Flags:     SZ5H3VNC
                        // Operation: A = A + CY + C
                        x = (A + C + fc) & 0xff;
                        fs = x & FS;
                        fz = (x & 0xff) == 0 ? FZ : 0;
                        f5 = x & F5;
                        fh = ((((A & 0x0f) + (C & 0x0f)) + fc) & 0x10);
                        f3 = x & F3;
                        fp = (((A ^ ~C) & (A ^ x)) & 0x80) != 0 ? FV : 0;
                        fn = 0;
                        fc = (A + C + fc) > 0xff ? FC : 0;
                        A = x;
                        break;
                    case 0x8A:
                        // Opcode:    ADC A,D
                        // TStates:   4
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        // MCycles2:  pc:4
                        // Flags:     SZ5H3VNC
                        // Operation: A = A + CY + D
                        x = (A + D + fc) & 0xff;
                        fs = x & FS;
                        fz = (x & 0xff) == 0 ? FZ : 0;
                        f5 = x & F5;
                        fh = ((((A & 0x0f) + (D & 0x0f)) + fc) & 0x10);
                        f3 = x & F3;
                        fp = (((A ^ ~D) & (A ^ x)) & 0x80) != 0 ? FV : 0;
                        fn = 0;
                        fc = (A + D + fc) > 0xff ? FC : 0;
                        A = x;
                        break;
                    case 0x8B:
                        // Opcode:    ADC A,E
                        // TStates:   4
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        // MCycles2:  pc:4
                        // Flags:     SZ5H3VNC
                        // Operation: A = A + CY + E
                        x = (A + E + fc) & 0xff;
                        fs = x & FS;
                        fz = (x & 0xff) == 0 ? FZ : 0;
                        f5 = x & F5;
                        fh = ((((A & 0x0f) + (E & 0x0f)) + fc) & 0x10);
                        f3 = x & F3;
                        fp = (((A ^ ~E) & (A ^ x)) & 0x80) != 0 ? FV : 0;
                        fn = 0;
                        fc = (A + E + fc) > 0xff ? FC : 0;
                        A = x;
                        break;
                    case 0x8C:
                        // Opcode:    ADC A,H
                        // TStates:   4
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        // MCycles2:  pc:4
                        // Flags:     SZ5H3VNC
                        // Operation: A = A + CY + H
                        x = (A + H + fc) & 0xff;
                        fs = x & FS;
                        fz = (x & 0xff) == 0 ? FZ : 0;
                        f5 = x & F5;
                        fh = ((((A & 0x0f) + (H & 0x0f)) + fc) & 0x10);
                        f3 = x & F3;
                        fp = (((A ^ ~H) & (A ^ x)) & 0x80) != 0 ? FV : 0;
                        fn = 0;
                        fc = (A + H + fc) > 0xff ? FC : 0;
                        A = x;
                        break;
                    case 0x8D:
                        // Opcode:    ADC A,L
                        // TStates:   4
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        // MCycles2:  pc:4
                        // Flags:     SZ5H3VNC
                        // Operation: A = A + CY + L
                        x = (A + L + fc) & 0xff;
                        fs = x & FS;
                        fz = (x & 0xff) == 0 ? FZ : 0;
                        f5 = x & F5;
                        fh = ((((A & 0x0f) + (L & 0x0f)) + fc) & 0x10);
                        f3 = x & F3;
                        fp = (((A ^ ~L) & (A ^ x)) & 0x80) != 0 ? FV : 0;
                        fn = 0;
                        fc = (A + L + fc) > 0xff ? FC : 0;
                        A = x;
                        break;
                    case 0x8E:
                        // Opcode:    ADC A,(HL) 
                        // TStates:   7
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        //            M1, 3 T States - Memory Read
                        // MCycles2:  pc:4,hl:3
                        // Flags:     SZ5H3VNC
                        // Operation: A = A + CY + (HL)
                        y = PeekByte(HL);
                        x = (A + y + fc) & 0xff;
                        fs = x & FS;
                        fz = (x & 0xff) == 0 ? FZ : 0;
                        f5 = x & F5;
                        fh = ((((A & 0x0f) + (y & 0x0f)) + fc) & 0x10);
                        f3 = x & F3;
                        fp = (((A ^ ~y) & (A ^ x)) & 0x80) != 0 ? FV : 0;
                        fn = 0;
                        fc = (A + y + fc) > 0xff ? FC : 0;
                        A = x;
                        break;
                    case 0x8F:
                        // Opcode:    ADC A,A
                        // TStates:   4
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        // MCycles2:  pc:4
                        // Flags:     SZ5H3VNC
                        // Operation: A = A + CY + A
                        x = (A + A + fc) & 0xff;
                        fs = x & FS;
                        fz = (x & 0xff) == 0 ? FZ : 0;
                        f5 = x & F5;
                        fh = ((((A & 0x0f) + (A & 0x0f)) + fc) & 0x10);
                        f3 = x & F3;
                        fp = (((A ^ ~A) & (A ^ x)) & 0x80) != 0 ? FV : 0;
                        fn = 0;
                        fc = (A + A + fc) > 0xff ? FC : 0;
                        A = x;
                        break;
                    case 0x90:
                        // Opcode:    SUB B
                        // TStates:   4
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        // MCycles2:  pc:4
                        // Flags:     SZ5H3VNC
                        // Operation: A = A - B
                        x = (A - B) & 0xff;
                        fs = x & FS;
                        fz = (x & 0xff) == 0 ? FZ : 0;
                        f5 = x & F5;
                        fh = (((A & 0x0f) - (B & 0x0f)) & 0x10) != 0 ? FH : 0;
                        f3 = x & F3;
                        fp = (((A ^ B) & (A ^ x)) & 0x80) != 0 ? FV : 0;
                        fn = FN;
                        fc = ((A - B) & 0x100) != 0 ? FC : 0;
                        A = x;
                        break;
                    case 0x91:
                        // Opcode:    SUB C
                        // TStates:   4
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        // MCycles2:  pc:4
                        // Flags:     SZ5H3VNC
                        // Operation: A = A - C
                        x = (A - C) & 0xff;
                        fs = x & FS;
                        fz = (x & 0xff) == 0 ? FZ : 0;
                        f5 = x & F5;
                        fh = (((A & 0x0f) - (C & 0x0f)) & 0x10) != 0 ? FH : 0;
                        f3 = x & F3;
                        fp = (((A ^ C) & (A ^ x)) & 0x80) != 0 ? FV : 0;
                        fn = FN;
                        fc = ((A - C) & 0x100) != 0 ? FC : 0;
                        A = x;
                        break;
                    case 0x92:
                        // Opcode:    SUB D
                        // TStates:   4
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        // MCycles2:  pc:4
                        // Flags:     SZ5H3VNC
                        // Operation: A = A - D
                        x = (A - D) & 0xff;
                        fs = x & FS;
                        fz = (x & 0xff) == 0 ? FZ : 0;
                        f5 = x & F5;
                        fh = (((A & 0x0f) - (D & 0x0f)) & 0x10) != 0 ? FH : 0;
                        f3 = x & F3;
                        fp = (((A ^ D) & (A ^ x)) & 0x80) != 0 ? FV : 0;
                        fn = FN;
                        fc = ((A - D) & 0x100) != 0 ? FC : 0;
                        A = x;
                        break;
                    case 0x93:
                        // Opcode:    SUB E
                        // TStates:   4
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        // MCycles2:  pc:4
                        // Flags:     SZ5H3VNC
                        // Operation: A = A - E
                        x = (A - E) & 0xff;
                        fs = x & FS;
                        fz = (x & 0xff) == 0 ? FZ : 0;
                        f5 = x & F5;
                        fh = (((A & 0x0f) - (E & 0x0f)) & 0x10) != 0 ? FH : 0;
                        f3 = x & F3;
                        fp = (((A ^ E) & (A ^ x)) & 0x80) != 0 ? FV : 0;
                        fn = FN;
                        fc = ((A - E) & 0x100) != 0 ? FC : 0;
                        A = x;
                        break;
                    case 0x94:
                        // Opcode:    SUB H
                        // TStates:   4
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        // MCycles2:  pc:4
                        // Flags:     SZ5H3VNC
                        // Operation: A = A - H
                        x = (A - H) & 0xff;
                        fs = x & FS;
                        fz = (x & 0xff) == 0 ? FZ : 0;
                        f5 = x & F5;
                        fh = (((A & 0x0f) - (H & 0x0f)) & 0x10) != 0 ? FH : 0;
                        f3 = x & F3;
                        fp = (((A ^ H) & (A ^ x)) & 0x80) != 0 ? FV : 0;
                        fn = FN;
                        fc = ((A - H) & 0x100) != 0 ? FC : 0;
                        A = x;
                        break;
                    case 0x95:
                        // Opcode:    SUB L
                        // TStates:   4
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        // MCycles2:  pc:4
                        // Flags:     SZ5H3VNC
                        // Operation: A = A - L
                        x = (A - L) & 0xff;
                        fs = x & FS;
                        fz = (x & 0xff) == 0 ? FZ : 0;
                        f5 = x & F5;
                        fh = (((A & 0x0f) - (L & 0x0f)) & 0x10) != 0 ? FH : 0;
                        f3 = x & F3;
                        fp = (((A ^ L) & (A ^ x)) & 0x80) != 0 ? FV : 0;
                        fn = FN;
                        fc = ((A - L) & 0x100) != 0 ? FC : 0;
                        A = x;
                        break;
                    case 0x96:
                        // Opcode:    SUB (HL) 
                        // TStates:   7
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        //            M1, 3 T States - Memory Read
                        // MCycles2:  pc:4,hl:3
                        // Flags:     SZ5H3VNC
                        // Operation: A = A - (HL)
                        y = PeekByte(HL);
                        x = (A - y) & 0xff;
                        fs = x & FS;
                        fz = (x & 0xff) == 0 ? FZ : 0;
                        f5 = x & F5;
                        fh = (((A & 0x0f) - (y & 0x0f)) & 0x10) != 0 ? FH : 0;
                        f3 = x & F3;
                        fp = (((A ^ y) & (A ^ x)) & 0x80) != 0 ? FV : 0;
                        fn = FN;
                        fc = ((A - y) & 0x100) != 0 ? FC : 0;
                        A = x;
                        break;
                    case 0x97:
                        // Opcode:    SUB A
                        // TStates:   4
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        // MCycles2:  pc:4
                        // Flags:     SZ5H3VNC
                        // Operation: A = A - A
                        x = (A - A) & 0xff;
                        fs = x & FS;
                        fz = (x & 0xff) == 0 ? FZ : 0;
                        f5 = x & F5;
                        fh = (((A & 0x0f) - (A & 0x0f)) & 0x10) != 0 ? FH : 0;
                        f3 = x & F3;
                        fp = (((A ^ A) & (A ^ x)) & 0x80) != 0 ? FV : 0;
                        fn = FN;
                        fc = ((A - A) & 0x100) != 0 ? FC : 0;
                        A = x;
                        break;
                    case 0x98:
                        // Opcode:    SBC A,B
                        // TStates:   4
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        // MCycles2:  pc:4
                        // Flags:     SZ5H3VNC
                        // Operation: A = A - B - CY
                        x = (A - B - fc) & 0xff;
                        fs = x & FS;
                        fz = (x & 0xff) == 0 ? FZ : 0;
                        f5 = x & F5;
                        fh = (((A & 0x0f) - (B & 0x0f) - fc) & 0x10) != 0 ? FH : 0;
                        f3 = x & F3;
                        fp = (((A ^ B) & (A ^ x)) & 0x80) != 0 ? FV : 0;
                        fn = FN;
                        fc = ((A - B - fc) & 0x100) != 0 ? FC : 0;
                        A = x;
                        break;
                    case 0x99:
                        // Opcode:    SBC A,C
                        // TStates:   4
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        // MCycles2:  pc:4
                        // Flags:     SZ5H3VNC
                        // Operation: A = A - C - CY
                        x = (A - C - fc) & 0xff;
                        fs = x & FS;
                        fz = (x & 0xff) == 0 ? FZ : 0;
                        f5 = x & F5;
                        fh = (((A & 0x0f) - (C & 0x0f) - fc) & 0x10) != 0 ? FH : 0;
                        f3 = x & F3;
                        fp = (((A ^ C) & (A ^ x)) & 0x80) != 0 ? FV : 0;
                        fn = FN;
                        fc = ((A - C - fc) & 0x100) != 0 ? FC : 0;
                        A = x;
                        break;
                    case 0x9A:
                        // Opcode:    SBC A,D
                        // TStates:   4
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        // MCycles2:  pc:4
                        // Flags:     SZ5H3VNC
                        // Operation: A = A - D - CY
                        x = (A - D - fc) & 0xff;
                        fs = x & FS;
                        fz = (x & 0xff) == 0 ? FZ : 0;
                        f5 = x & F5;
                        fh = (((A & 0x0f) - (D & 0x0f) - fc) & 0x10) != 0 ? FH : 0;
                        f3 = x & F3;
                        fp = (((A ^ D) & (A ^ x)) & 0x80) != 0 ? FV : 0;
                        fn = FN;
                        fc = ((A - D - fc) & 0x100) != 0 ? FC : 0;
                        A = x;
                        break;
                    case 0x9B:
                        // Opcode:    SBC A,E
                        // TStates:   4
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        // MCycles2:  pc:4
                        // Flags:     SZ5H3VNC
                        // Operation: A = A - E - CY
                        x = (A - E - fc) & 0xff;
                        fs = x & FS;
                        fz = (x & 0xff) == 0 ? FZ : 0;
                        f5 = x & F5;
                        fh = (((A & 0x0f) - (E & 0x0f) - fc) & 0x10) != 0 ? FH : 0;
                        f3 = x & F3;
                        fp = (((A ^ E) & (A ^ x)) & 0x80) != 0 ? FV : 0;
                        fn = FN;
                        fc = ((A - E - fc) & 0x100) != 0 ? FC : 0;
                        A = x;
                        break;
                    case 0x9C:
                        // Opcode:    SBC A,H
                        // TStates:   4
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        // MCycles2:  pc:4
                        // Flags:     SZ5H3VNC
                        // Operation: A = A - H - CY
                        x = (A - H - fc) & 0xff;
                        fs = x & FS;
                        fz = (x & 0xff) == 0 ? FZ : 0;
                        f5 = x & F5;
                        fh = (((A & 0x0f) - (H & 0x0f) - fc) & 0x10) != 0 ? FH : 0;
                        f3 = x & F3;
                        fp = (((A ^ H) & (A ^ x)) & 0x80) != 0 ? FV : 0;
                        fn = FN;
                        fc = ((A - H - fc) & 0x100) != 0 ? FC : 0;
                        A = x;
                        break;
                    case 0x9D:
                        // Opcode:    SBC A,L
                        // TStates:   4
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        // MCycles2:  pc:4
                        // Flags:     SZ5H3VNC
                        // Operation: A = A - L - CY
                        x = (A - L - fc) & 0xff;
                        fs = x & FS;
                        fz = (x & 0xff) == 0 ? FZ : 0;
                        f5 = x & F5;
                        fh = (((A & 0x0f) - (L & 0x0f) - fc) & 0x10) != 0 ? FH : 0;
                        f3 = x & F3;
                        fp = (((A ^ L) & (A ^ x)) & 0x80) != 0 ? FV : 0;
                        fn = FN;
                        fc = ((A - L - fc) & 0x100) != 0 ? FC : 0;
                        A = x;
                        break;
                    case 0x9E:
                        // Opcode:    SBC A,(HL) 
                        // TStates:   7
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        //            M1, 3 T States - Memory Read
                        // MCycles2:  pc:4,hl:3
                        // Flags:     SZ5H3VNC
                        // Operation: A = A - (HL)  - CY
                        y = PeekByte(HL);
                        x = (A - y - fc) & 0xff;
                        fs = x & FS;
                        fz = (x & 0xff) == 0 ? FZ : 0;
                        f5 = x & F5;
                        fh = (((A & 0x0f) - (y & 0x0f) - fc) & 0x10) != 0 ? FH : 0;
                        f3 = x & F3;
                        fp = (((A ^ y) & (A ^ x)) & 0x80) != 0 ? FV : 0;
                        fn = FN;
                        fc = ((A - y - fc) & 0x100) != 0 ? FC : 0;
                        A = x;
                        break;
                    case 0x9F:
                        // Opcode:    SBC A,A
                        // TStates:   4
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        // MCycles2:  pc:4
                        // Flags:     SZ5H3VNC
                        // Operation: A = A - A - CY
                        x = (A - A - fc) & 0xff;
                        fs = x & FS;
                        fz = (x & 0xff) == 0 ? FZ : 0;
                        f5 = x & F5;
                        fh = (((A & 0x0f) - (A & 0x0f) - fc) & 0x10) != 0 ? FH : 0;
                        f3 = x & F3;
                        fp = (((A ^ A) & (A ^ x)) & 0x80) != 0 ? FV : 0;
                        fn = FN;
                        fc = ((A - A - fc) & 0x100) != 0 ? FC : 0;
                        A = x;
                        break;
                    case 0xA0:
                        // Opcode:    AND B
                        // TStates:   4
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        // MCycles2:  pc:4
                        // Flags:     SZ513P03
                        // Operation: A = A & B
                        x = A & B;
                        fs = x & FS;
                        fz = (x & 0xff) == 0 ? FZ : 0;
                        f5 = x & F5;
                        fh = FH;
                        f3 = x & F3;
                        fp = Parity[x & 0xff];
                        fn = 0;
                        fc = 0;
                        A = x;
                        break;
                    case 0xA1:
                        // Opcode:    AND C
                        // TStates:   4
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        // MCycles2:  pc:4
                        // Flags:     SZ513P04
                        // Operation: A = A & C
                        x = A & C;
                        fs = x & FS;
                        fz = (x & 0xff) == 0 ? FZ : 0;
                        f5 = x & F5;
                        fh = FH;
                        f3 = x & F3;
                        fp = Parity[x & 0xff];
                        fn = 0;
                        fc = 0;
                        A = x;
                        break;
                    case 0xA2:
                        // Opcode:    AND D
                        // TStates:   4
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        // MCycles2:  pc:4
                        // Flags:     SZ513P05
                        // Operation: A = A & D
                        x = A & D;
                        fs = x & FS;
                        fz = (x & 0xff) == 0 ? FZ : 0;
                        f5 = x & F5;
                        fh = FH;
                        f3 = x & F3;
                        fp = Parity[x & 0xff];
                        fn = 0;
                        fc = 0;
                        A = x;
                        break;
                    case 0xA3:
                        // Opcode:    AND E
                        // TStates:   4
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        // MCycles2:  pc:4
                        // Flags:     SZ513P06
                        // Operation: A = A & E
                        x = A & E;
                        fs = x & FS;
                        fz = (x & 0xff) == 0 ? FZ : 0;
                        f5 = x & F5;
                        fh = FH;
                        f3 = x & F3;
                        fp = Parity[x & 0xff];
                        fn = 0;
                        fc = 0;
                        A = x;
                        break;
                    case 0xA4:
                        // Opcode:    AND H
                        // TStates:   4
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        // MCycles2:  pc:4
                        // Flags:     SZ513P07
                        // Operation: A = A & H
                        x = A & H;
                        fs = x & FS;
                        fz = (x & 0xff) == 0 ? FZ : 0;
                        f5 = x & F5;
                        fh = FH;
                        f3 = x & F3;
                        fp = Parity[x & 0xff];
                        fn = 0;
                        fc = 0;
                        A = x;
                        break;
                    case 0xA5:
                        // Opcode:    AND L
                        // TStates:   4
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        // MCycles2:  pc:4
                        // Flags:     SZ513P08
                        // Operation: A = A & L
                        x = A & L;
                        fs = x & FS;
                        fz = (x & 0xff) == 0 ? FZ : 0;
                        f5 = x & F5;
                        fh = FH;
                        f3 = x & F3;
                        fp = Parity[x & 0xff];
                        fn = 0;
                        fc = 0;
                        A = x;
                        break;
                    case 0xA6:
                        // Opcode:    AND (HL) 
                        // TStates:   7
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        //            M1, 3 T States - Memory Read
                        // MCycles2:  pc:4,hl:3
                        // Flags:     SZ513P01
                        // Operation: A = A & (HL)
                        x = A & PeekByte(HL);
                        fs = x & FS;
                        fz = (x & 0xff) == 0 ? FZ : 0;
                        f5 = x & F5;
                        fh = FH;
                        f3 = x & F3;
                        fp = Parity[x & 0xff];
                        fn = 0;
                        fc = 0;
                        A = x;
                        break;
                    case 0xA7:
                        // Opcode:    AND A
                        // TStates:   4
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        // MCycles2:  pc:4
                        // Flags:     SZ513P02
                        // Operation: A = A & A
                        x = A & A;
                        fs = x & FS;
                        fz = (x & 0xff) == 0 ? FZ : 0;
                        f5 = x & F5;
                        fh = FH;
                        f3 = x & F3;
                        fp = Parity[x & 0xff];
                        fn = 0;
                        fc = 0;
                        A = x;
                        break;
                    case 0xA8:
                        // Opcode:    XOR B
                        // TStates:   4
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        // MCycles2:  pc:4
                        // Flags:     SZ503P03
                        // Operation: A = A ^ B
                        x = (A ^ B) & 0xff;
                        fs = x & FS;
                        fz = (x & 0xff) == 0 ? FZ : 0;
                        f5 = x & F5;
                        fh = 0;
                        f3 = x & F3;
                        fp = Parity[x & 0xff];
                        fn = 0;
                        fc = 0;
                        A = x & 0xff;
                        break;
                    case 0xA9:
                        // Opcode:    XOR C
                        // TStates:   4
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        // MCycles2:  pc:4
                        // Flags:     SZ503P04
                        // Operation: A = A ^ C
                        x = (A ^ C) & 0xff;
                        fs = x & FS;
                        fz = (x & 0xff) == 0 ? FZ : 0;
                        f5 = x & F5;
                        fh = 0;
                        f3 = x & F3;
                        fp = Parity[x & 0xff];
                        fn = 0;
                        fc = 0;
                        A = x & 0xff;
                        break;
                    case 0xAA:
                        // Opcode:    XOR D
                        // TStates:   4
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        // MCycles2:  pc:4
                        // Flags:     SZ503P05
                        // Operation: A = A ^ D
                        x = (A ^ D) & 0xff;
                        fs = x & FS;
                        fz = (x & 0xff) == 0 ? FZ : 0;
                        f5 = x & F5;
                        fh = 0;
                        f3 = x & F3;
                        fp = Parity[x & 0xff];
                        fn = 0;
                        fc = 0;
                        A = x & 0xff;
                        break;
                    case 0xAB:
                        // Opcode:    XOR E
                        // TStates:   4
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        // MCycles2:  pc:4
                        // Flags:     SZ503P06
                        // Operation: A = A ^ E
                        x = (A ^ E) & 0xff;
                        fs = x & FS;
                        fz = (x & 0xff) == 0 ? FZ : 0;
                        f5 = x & F5;
                        fh = 0;
                        f3 = x & F3;
                        fp = Parity[x & 0xff];
                        fn = 0;
                        fc = 0;
                        A = x & 0xff;
                        break;
                    case 0xAC:
                        // Opcode:    XOR H
                        // TStates:   4
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        // MCycles2:  pc:4
                        // Flags:     SZ503P07
                        // Operation: A = A ^ H
                        x = (A ^ H) & 0xff;
                        fs = x & FS;
                        fz = (x & 0xff) == 0 ? FZ : 0;
                        f5 = x & F5;
                        fh = 0;
                        f3 = x & F3;
                        fp = Parity[x & 0xff];
                        fn = 0;
                        fc = 0;
                        A = x & 0xff;
                        break;
                    case 0xAD:
                        // Opcode:    XOR L
                        // TStates:   4
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        // MCycles2:  pc:4
                        // Flags:     SZ503P08
                        // Operation: A = A ^ L
                        x = (A ^ L) & 0xff;
                        fs = x & FS;
                        fz = (x & 0xff) == 0 ? FZ : 0;
                        f5 = x & F5;
                        fh = 0;
                        f3 = x & F3;
                        fp = Parity[x & 0xff];
                        fn = 0;
                        fc = 0;
                        A = x & 0xff;
                        break;
                    case 0xAE:
                        // Opcode:    XOR (HL) 
                        // TStates:   7
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        //            M1, 3 T States - Memory Read
                        // MCycles2:  pc:4,hl:3
                        // Flags:     SZ503P01
                        // Operation: A = A ^ (HL)
                        x = (A ^ PeekByte(HL)) & 0xff;
                        fs = x & FS;
                        fz = (x & 0xff) == 0 ? FZ : 0;
                        f5 = x & F5;
                        fh = 0;
                        f3 = x & F3;
                        fp = Parity[x & 0xff];
                        fn = 0;
                        fc = 0;
                        A = x & 0xff;
                        break;
                    case 0xAF:
                        // Opcode:    XOR A
                        // TStates:   4
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        // MCycles2:  pc:4
                        // Flags:     SZ503P02
                        // Operation: A = A ^ A
                        x = (A ^ A) & 0xff;
                        fs = x & FS;
                        fz = (x & 0xff) == 0 ? FZ : 0;
                        f5 = x & F5;
                        fh = 0;
                        f3 = x & F3;
                        fp = Parity[x & 0xff];
                        fn = 0;
                        fc = 0;
                        A = x & 0xff;
                        break;
                    case 0xB0:
                        // Opcode:    OR B
                        // TStates:   4
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        // MCycles2:  pc:4
                        // Flags:     SZ503P03
                        // Operation: A = A v B
                        x = (A | B) & 0xff;
                        fs = x & FS;
                        fz = (x & 0xff) == 0 ? FZ : 0;
                        f5 = x & F5;
                        fh = 0;
                        f3 = x & F3;
                        fp = Parity[x & 0xff];
                        fn = 0;
                        fc = 0;
                        A = x & 0xff;
                        break;
                    case 0xB1:
                        // Opcode:    OR C
                        // TStates:   4
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        // MCycles2:  pc:4
                        // Flags:     SZ503P04
                        // Operation: A = A v C
                        x = (A | C) & 0xff;
                        fs = x & FS;
                        fz = (x & 0xff) == 0 ? FZ : 0;
                        f5 = x & F5;
                        fh = 0;
                        f3 = x & F3;
                        fp = Parity[x & 0xff];
                        fn = 0;
                        fc = 0;
                        A = x & 0xff;
                        break;
                    case 0xB2:
                        // Opcode:    OR D
                        // TStates:   4
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        // MCycles2:  pc:4
                        // Flags:     SZ503P05
                        // Operation: A = A v D
                        x = (A | D) & 0xff;
                        fs = x & FS;
                        fz = (x & 0xff) == 0 ? FZ : 0;
                        f5 = x & F5;
                        fh = 0;
                        f3 = x & F3;
                        fp = Parity[x & 0xff];
                        fn = 0;
                        fc = 0;
                        A = x & 0xff;
                        break;
                    case 0xB3:
                        // Opcode:    OR E
                        // TStates:   4
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        // MCycles2:  pc:4
                        // Flags:     SZ503P06
                        // Operation: A = A v E
                        x = (A | E) & 0xff;
                        fs = x & FS;
                        fz = (x & 0xff) == 0 ? FZ : 0;
                        f5 = x & F5;
                        fh = 0;
                        f3 = x & F3;
                        fp = Parity[x & 0xff];
                        fn = 0;
                        fc = 0;
                        A = x & 0xff;
                        break;
                    case 0xB4:
                        // Opcode:    OR H
                        // TStates:   4
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        // MCycles2:  pc:4
                        // Flags:     SZ503P07
                        // Operation: A = A v H
                        x = (A | H) & 0xff;
                        fs = x & FS;
                        fz = (x & 0xff) == 0 ? FZ : 0;
                        f5 = x & F5;
                        fh = 0;
                        f3 = x & F3;
                        fp = Parity[x & 0xff];
                        fn = 0;
                        fc = 0;
                        A = x & 0xff;
                        break;
                    case 0xB5:
                        // Opcode:    OR L
                        // TStates:   4
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        // MCycles2:  pc:4
                        // Flags:     SZ503P08
                        // Operation: A = A v L
                        x = (A | L) & 0xff;
                        fs = x & FS;
                        fz = (x & 0xff) == 0 ? FZ : 0;
                        f5 = x & F5;
                        fh = 0;
                        f3 = x & F3;
                        fp = Parity[x & 0xff];
                        fn = 0;
                        fc = 0;
                        A = x & 0xff;
                        break;
                    case 0xB6:
                        // Opcode:    OR (HL) 
                        // TStates:   7
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        //            M1, 3 T States - Memory Read
                        // MCycles2:  pc:4,hl:3
                        // Flags:     SZ503P01
                        // Operation: A = A v (HL)
                        x = (A | PeekByte(HL)) & 0xff;
                        fs = x & FS;
                        fz = (x & 0xff) == 0 ? FZ : 0;
                        f5 = x & F5;
                        fh = 0;
                        f3 = x & F3;
                        fp = Parity[x & 0xff];
                        fn = 0;
                        fc = 0;
                        A = x & 0xff;
                        break;
                    case 0xB7:
                        // Opcode:    OR A
                        // TStates:   4
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        // MCycles2:  pc:4
                        // Flags:     SZ503P02
                        // Operation: A = A v A
                        x = (A | A) & 0xff;
                        fs = x & FS;
                        fz = (x & 0xff) == 0 ? FZ : 0;
                        f5 = x & F5;
                        fh = 0;
                        f3 = x & F3;
                        fp = Parity[x & 0xff];
                        fn = 0;
                        fc = 0;
                        A = x & 0xff;
                        break;
                    case 0xB8:
                        // Opcode:    CP B
                        // TStates:   4
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        // MCycles2:  pc:4
                        // Flags:     SZ*H*VNC
                        //            * CP is just SUB with the result thrown away
                        //            * F5 and F3 are copied from the operand not the result
                        // Operation: =  A - B
                        x = (A - B) & 0xff;
                        fs = x & FS;
                        fz = (x & 0xff) == 0 ? FZ : 0;
                        f5 = B & F5;
                        fh = (((A & 0x0f) - (B & 0x0f)) & 0x10) != 0 ? FH : 0;
                        f3 = B & F3;
                        fp = (((A ^ B) & (A ^ x)) & 0x80) != 0 ? FV : 0;
                        fn = FN;
                        fc = ((A - B) & 0x100) != 0 ? FC : 0;
                        break;
                    case 0xB9:
                        // Opcode:    CP C
                        // TStates:   4
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        // MCycles2:  pc:4
                        // Flags:     SZ*H*VNC
                        //            * CP is just SUB with the result thrown away
                        //            * F5 and F3 are copied from the operand not the result
                        // Operation: =  A - C
                        x = (A - C) & 0xff;
                        fs = x & FS;
                        fz = (x & 0xff) == 0 ? FZ : 0;
                        f5 = C & F5;
                        fh = (((A & 0x0f) - (C & 0x0f)) & 0x10) != 0 ? FH : 0;
                        f3 = C & F3;
                        fp = (((A ^ C) & (A ^ x)) & 0x80) != 0 ? FV : 0;
                        fn = FN;
                        fc = ((A - C) & 0x100) != 0 ? FC : 0;
                        break;
                    case 0xBA:
                        // Opcode:    CP D
                        // TStates:   4
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        // MCycles2:  pc:4
                        // Flags:     SZ*H*VNC
                        //            * CP is just SUB with the result thrown away
                        //            * F5 and F3 are copied from the operand not the result
                        // Operation: =  A - D
                        x = (A - D) & 0xff;
                        fs = x & FS;
                        fz = (x & 0xff) == 0 ? FZ : 0;
                        f5 = D & F5;
                        fh = (((A & 0x0f) - (D & 0x0f)) & 0x10) != 0 ? FH : 0;
                        f3 = D & F3;
                        fp = (((A ^ D) & (A ^ x)) & 0x80) != 0 ? FV : 0;
                        fn = FN;
                        fc = ((A - D) & 0x100) != 0 ? FC : 0;
                        break;
                    case 0xBB:
                        // Opcode:    CP E
                        // TStates:   4
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        // MCycles2:  pc:4
                        // Flags:     SZ*H*VNC
                        //            * CP is just SUB with the result thrown away
                        //            * F5 and F3 are copied from the operand not the result
                        // Operation: =  A - E
                        x = (A - E) & 0xff;
                        fs = x & FS;
                        fz = (x & 0xff) == 0 ? FZ : 0;
                        f5 = E & F5;
                        fh = (((A & 0x0f) - (E & 0x0f)) & 0x10) != 0 ? FH : 0;
                        f3 = E & F3;
                        fp = (((A ^ E) & (A ^ x)) & 0x80) != 0 ? FV : 0;
                        fn = FN;
                        fc = ((A - E) & 0x100) != 0 ? FC : 0;
                        break;
                    case 0xBC:
                        // Opcode:    CP H
                        // TStates:   4
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        // MCycles2:  pc:4
                        // Flags:     SZ*H*VNC
                        //            * CP is just SUB with the result thrown away
                        //            * F5 and F3 are copied from the operand not the result
                        // Operation: =  A - H
                        x = (A - H) & 0xff;
                        fs = x & FS;
                        fz = (x & 0xff) == 0 ? FZ : 0;
                        f5 = H & F5;
                        fh = (((A & 0x0f) - (H & 0x0f)) & 0x10) != 0 ? FH : 0;
                        f3 = H & F3;
                        fp = (((A ^ H) & (A ^ x)) & 0x80) != 0 ? FV : 0;
                        fn = FN;
                        fc = ((A - H) & 0x100) != 0 ? FC : 0;
                        break;
                    case 0xBD:
                        // Opcode:    CP L
                        // TStates:   4
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        // MCycles2:  pc:4
                        // Flags:     SZ*H*VNC
                        //            * CP is just SUB with the result thrown away
                        //            * F5 and F3 are copied from the operand not the result
                        // Operation: =  A - L
                        x = (A - L) & 0xff;
                        fs = x & FS;
                        fz = (x & 0xff) == 0 ? FZ : 0;
                        f5 = L & F5;
                        fh = (((A & 0x0f) - (L & 0x0f)) & 0x10) != 0 ? FH : 0;
                        f3 = L & F3;
                        fp = (((A ^ L) & (A ^ x)) & 0x80) != 0 ? FV : 0;
                        fn = FN;
                        fc = ((A - L) & 0x100) != 0 ? FC : 0;
                        break;
                    case 0xBE:
                        // Opcode:    CP (HL) 
                        // TStates:   7
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        //            M1, 3 T States - Memory Read
                        // MCycles2:  pc:4,hl:3
                        // Flags:     SZ*H*VNC
                        //            * CP is just SUB with the result thrown away
                        //            * F5 and F3 are copied from the operand not the result
                        // Operation: =  A - (HL)
                        y = PeekByte(HL);
                        x = (A - y) & 0xff;
                        fs = x & FS;
                        fz = (x & 0xff) == 0 ? FZ : 0;
                        f5 = y & F5;
                        fh = (((A & 0x0f) - (y & 0x0f)) & 0x10) != 0 ? FH : 0;
                        f3 = y & F3;
                        fp = (((A ^ y) & (A ^ x)) & 0x80) != 0 ? FV : 0;
                        fn = FN;
                        fc = ((A - y) & 0x100) != 0 ? FC : 0;
                        break;
                    case 0xBF:
                        // Opcode:    CP A
                        // TStates:   4
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        // MCycles2:  pc:4
                        // Flags:     SZ*H*VNC
                        //            * CP is just SUB with the result thrown away
                        //            * F5 and F3 are copied from the operand not the result
                        // Operation: =  A - A
                        x = (A - A) & 0xff;
                        fs = x & FS;
                        fz = (x & 0xff) == 0 ? FZ : 0;
                        f5 = A & F5;
                        fh = (((A & 0x0f) - (A & 0x0f)) & 0x10) != 0 ? FH : 0;
                        f3 = A & F3;
                        fp = (((A ^ A) & (A ^ x)) & 0x80) != 0 ? FV : 0;
                        fn = FN;
                        fc = ((A - A) & 0x100) != 0 ? FC : 0;
                        if (PC == 0x56B) CheckLoading();
                        break;
                    case 0xC0:
                        // Opcode:    RET NZ
                        // Attributes:Conditional, Return
                        // TStates:   5 / 11
                        // MCycles:   M0, 5 T States - Op Code Fetch
                        //            If Condition
                        //            M1, 3 T States - Stack Read of Low Byte
                        //            M2, 3 T States - Stack Read of High Byte
                        // MCycles2:  pc:5,[sp:3,sp+1:3]
                        // MemPtr:    MEMPTR = addr
                        // Operation: If !Z then PC = [SP,SP+1],SP+ = 2
                        AddCycles(IR, 1);
                        if (fz == 0)
                        {
                            WZ = (PeekByte(SP++) + (PeekByte(SP++) << 8));
                            PC = WZ;
                            // Pass control to the Virtual function Return
                            Return(Opcode, PreExecutePC);
                        }
                        break;
                    case 0xC1:
                        // Opcode:    POP BC
                        // TStates:   10
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        //            M1, 3 T States - Stack Read of High Byte
                        //            M2, 3 T States - Stack Read of Low Byte
                        // MCycles2:  pc:4,sp:3,sp+1:3
                        // Operation: C = [SP],SP+,B = [SP],SP+
                        BC = (PeekByte(SP++) + (PeekByte(SP++) << 8));
                        break;
                    case 0xC2:
                        // Opcode:    JP NZ,$aa
                        // Attributes:Branch, Conditional
                        // TStates:   10
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        //            M1, 3 T States - Operand Data Read of Low Byte
                        //            M2, 3 T States - Operand Data Read of High Byte
                        // MCycles2:  pc:4,pc+1:3,pc+2:3
                        // MemPtr:    MEMPTR = addr (independantly on condition satisfied or not)
                        // Operation: If !Z then PC = NN
                        WZ = (PeekByte(PC++) + (PeekByte(PC++) << 8));
                        if (fz == 0)
                        {
                            PC = WZ;
                            // Pass control to the Virtual function Jump
                            Jump(Opcode, PreExecutePC);
                        }
                        break;
                    case 0xC3:
                        // Opcode:    JP $aa
                        // Attributes:Branch, Terminal
                        // TStates:   10
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        //            M1, 3 T States - Operand Data Read of Low Byte
                        //            M2, 3 T States - Operand Data Read of High Byte
                        // MCycles2:  pc:4,pc+1:3,pc+2:3
                        // MemPtr:    MEMPTR = addr
                        // Operation: PC = NN
                        WZ = (PeekByte(PC++) + (PeekByte(PC++) << 8));
                        PC = WZ;
                        // Pass control to the Virtual function Jump
                        Jump(Opcode, PreExecutePC);

                        break;
                    case 0xC4:
                        // Opcode:    CALL NZ,$aa
                        // Attributes:Branch, Call, Conditional
                        // TStates:   10 / 17
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        //            M1, 3 T States - Operand Data Read of Low Byte
                        //            M2, 4 T States - Operand Data Read of High Byte
                        //            If Condition
                        //            SP--
                        //            M3, 3 T States - Stack Write of High Byte
                        //            SP--
                        //            M4, 3 T States - Stack Write of Low byte
                        // MCycles2:  pc:4,pc+1:3,pc+2:3,[pc+2:1,sp-1:3,sp-2:3]
                        // MemPtr:    MEMPTR = addr (independantly on condition satisfied or not)
                        // Operation: If !Z then [SP- = 2] = PC,PC = NN
                        WZ = (PeekByte(PC++) + (PeekByte(PC++) << 8));
                        if (fz == 0)
                        {
                            AddCycles(PC + 1, 1);
                            // Pass control to the Virtual function Call
                            Call(Opcode, PC);
                            PokeByte(--SP, PC >> 8);
                            PokeByte(--SP, PC & 0xff);
                            PC = WZ;
                        }
                        break;
                    case 0xC5:
                        // Opcode:    PUSH BC
                        // TStates:   11
                        // MCycles:   M0, 5 T States - Op Code Fetch
                        //            M1, 3 T States - Stack Write of High Byte
                        //            M2, 3 T States - Stack Write of Low byte
                        // MCycles2:  pc:5,sp-1:3,sp-2:3
                        // Operation: -SP,[SP] = B,-SP,[SP] = C
                        {
                            AddCycles(IR, 1);
                            PokeByte(--SP, BC >> 8);
                            PokeByte(--SP, BC & 0xff);
                        }
                        break;
                    case 0xC6:
                        // Opcode:    ADD A,$b
                        // Attributes:Byte, Direct
                        // TStates:   7
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        //            M1, 3 T States - Operand Data Read
                        // MCycles2:  pc:4,pc+1:3
                        // Flags:     SZ5H3VNC
                        // Operation: A = A+N
                        y = PeekByte(PC++);
                        x = (A + y) & 0xff;
                        fs = x & FS;
                        fz = (x & 0xff) == 0 ? FZ : 0;
                        f5 = x & F5;
                        fh = ((((A & 0x0f) + (y & 0x0f))) & 0x10);
                        f3 = x & F3;
                        fp = (((A ^ ~y) & (A ^ x)) & 0x80) != 0 ? FV : 0;
                        fn = 0;
                        fc = (A + y) > 0xff ? FC : 0;
                        A = x;
                        break;
                    case 0xC7:
                        // Opcode:    RST 00H
                        // Attributes:Restart
                        // TStates:   11
                        // MCycles:   M0, 5 T States - Op Code Fetch
                        //            M1, 3 T States - Stack Write of High Byte
                        //            M2, 3 T States - Stack Write of Low byte
                        // MCycles2:  pc:5,sp-1:3,sp-2:3
                        // MemPtr:    MEMPTR = addr
                        // Operation: -SP,-SP,[SP+1,SP] = PC,PC = 00
                        WZ = 0x00;
                        AddCycles(IR, 1);
                        // Pass control to the Virtual function Restart
                        Restart(Opcode, PC);
                        PokeByte(--SP, PC >> 8);
                        PokeByte(--SP, PC & 0xff);
                        PC = WZ;
                        break;
                    case 0xC8:
                        // Opcode:    RET Z
                        // Attributes:Conditional, Return
                        // TStates:   5 / 11
                        // MCycles:   M0, 5 T States - Op Code Fetch
                        //            If Condition
                        //            M1, 3 T States - Stack Read of Low Byte
                        //            M2, 3 T States - Stack Read of High Byte
                        // MCycles2:  pc:5,[sp:3,sp+1:3]
                        // MemPtr:    MEMPTR = addr
                        // Operation: If Z then PC = [SP,SP+1],SP+ = 2
                        AddCycles(IR, 1);
                        if (fz != 0)
                        {
                            WZ = (PeekByte(SP++) + (PeekByte(SP++) << 8));
                            PC = WZ;
                            // Pass control to the Virtual function Return
                            Return(Opcode, PreExecutePC);
                        }
                        break;
                    case 0xC9:
                        // Opcode:    RET
                        // Attributes:Return, Terminal
                        // TStates:   10
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        //            M1, 3 T States - Stack Read of Low Byte
                        //            M2, 3 T States - Stack Read of High Byte
                        // MCycles2:  pc:4,sp:3,sp+1:3
                        // MemPtr:    MEMPTR = addr
                        // Operation: PC = [SP,SP+1],SP+,SP+
                        WZ = (PeekByte(SP++) + (PeekByte(SP++) << 8));
                        PC = WZ;
                        // Pass control to the Virtual function Return
                        Return(Opcode, PreExecutePC);
                        break;
                    case 0xCA:
                        // Opcode:    JP Z,$aa
                        // Attributes:Branch, Conditional
                        // TStates:   10
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        //            M1, 3 T States - Operand Data Read of Low Byte
                        //            M2, 3 T States - Operand Data Read of High Byte
                        // MCycles2:  pc:4,pc+1:3,pc+2:3
                        // MemPtr:    MEMPTR = addr (independantly on condition satisfied or not)
                        // Operation: If Z then PC = NN
                        WZ = (PeekByte(PC++) + (PeekByte(PC++) << 8));
                        if (fz != 0)
                        {
                            PC = WZ;
                            // Pass control to the Virtual function Jump
                            Jump(Opcode, PreExecutePC);
                        }
                        break;
                    #region  AfterCB
                    case 0xCB:
                        {
                            Opcode = FetchOpcode();
                            switch (Opcode)
                            {
                                case 0x00:
                                    // Opcode:    RLC B
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Flags:     SZ503P0C
                                    // Operation: B = {B}<<
                                    fc = (B & 0x80) >> 7;
                                    B = (((B << 1) & 0xfE) | fc) & 0xff;
                                    fs = B & FS;
                                    fz = (B == 0) ? FZ : 0;
                                    fp = Parity[B];
                                    f5 = B & F5;
                                    fh = 0;
                                    f3 = B & F3;
                                    fn = 0;
                                    break;
                                case 0x01:
                                    // Opcode:    RLC C
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Flags:     SZ503P0C
                                    // Operation: C = {C}<<
                                    fc = (C & 0x80) >> 7;
                                    C = (((C << 1) & 0xfE) | fc) & 0xff;
                                    fs = C & FS;
                                    fz = (C == 0) ? FZ : 0;
                                    fp = Parity[C];
                                    f5 = C & F5;
                                    fh = 0;
                                    f3 = C & F3;
                                    fn = 0;
                                    break;
                                case 0x02:
                                    // Opcode:    RLC D
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Flags:     SZ503P0C
                                    // Operation: D = {D}<<
                                    fc = (D & 0x80) >> 7;
                                    D = (((D << 1) & 0xfE) | fc) & 0xff;
                                    fs = D & FS;
                                    fz = (D == 0) ? FZ : 0;
                                    fp = Parity[D];
                                    f5 = D & F5;
                                    fh = 0;
                                    f3 = D & F3;
                                    fn = 0;
                                    break;
                                case 0x03:
                                    // Opcode:    RLC E
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Flags:     SZ503P0C
                                    // Operation: E = {E}<<
                                    fc = (E & 0x80) >> 7;
                                    E = (((E << 1) & 0xfE) | fc) & 0xff;
                                    fs = E & FS;
                                    fz = (E == 0) ? FZ : 0;
                                    fp = Parity[E];
                                    f5 = E & F5;
                                    fh = 0;
                                    f3 = E & F3;
                                    fn = 0;
                                    break;
                                case 0x04:
                                    // Opcode:    RLC H
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Flags:     SZ503P0C
                                    // Operation: H = {H}<<
                                    fc = (H & 0x80) >> 7;
                                    H = (((H << 1) & 0xfE) | fc) & 0xff;
                                    fs = H & FS;
                                    fz = (H == 0) ? FZ : 0;
                                    fp = Parity[H];
                                    f5 = H & F5;
                                    fh = 0;
                                    f3 = H & F3;
                                    fn = 0;
                                    break;
                                case 0x05:
                                    // Opcode:    RLC L
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Flags:     SZ503P0C
                                    // Operation: L = {L}<<
                                    fc = (L & 0x80) >> 7;
                                    L = (((L << 1) & 0xfE) | fc) & 0xff;
                                    fs = L & FS;
                                    fz = (L == 0) ? FZ : 0;
                                    fp = Parity[L];
                                    f5 = L & F5;
                                    fh = 0;
                                    f3 = L & F3;
                                    fn = 0;
                                    break;
                                case 0x06:
                                    // Opcode:    RLC (HL) 
                                    // TStates:   15
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    //            M2, 3 T States - Operand Data Read
                                    //            M3, 3 T States - Memory Write
                                    // MCycles2:  pc:4,pc+1:4,hl:3,hl:1,hl(write):3
                                    // Flags:     SZ503P0C
                                    // Operation: [HL] = {[HL]}<<
                                    y = PeekByte(HL);
                                    AddCycles(HL, 1);
                                    fc = (y & 0x80) >> 7;
                                    y = (((y << 1) & 0xfE) | fc) & 0xff;
                                    fs = y & FS;
                                    fz = (y == 0) ? FZ : 0;
                                    fp = Parity[y];
                                    f5 = y & F5;
                                    fh = 0;
                                    f3 = y & F3;
                                    fn = 0;
                                    PokeByte(HL, y);
                                    break;
                                case 0x07:
                                    // Opcode:    RLC A
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Flags:     SZ503P0C
                                    // Operation: A = {A}<<
                                    fc = (A & 0x80) >> 7;
                                    A = (((A << 1) & 0xfE) | fc) & 0xff;
                                    fs = A & FS;
                                    fz = (A == 0) ? FZ : 0;
                                    fp = Parity[A];
                                    f5 = A & F5;
                                    fh = 0;
                                    f3 = A & F3;
                                    fn = 0;
                                    break;
                                case 0x08:
                                    // Opcode:    RRC B
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Flags:     SZ503P0C
                                    // Operation: B = >>{B}
                                    cy = B & FC;
                                    B = ((B >> 1) & 0x7f) | (cy << 7);
                                    fs = B & FS;
                                    fz = (B == 0) ? FZ : 0;
                                    fp = Parity[B];
                                    f5 = B & F5;
                                    fh = 0;
                                    f3 = B & F3;
                                    fn = 0;
                                    fc = cy;
                                    break;
                                case 0x09:
                                    // Opcode:    RRC C
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Flags:     SZ503P0C
                                    // Operation: C = >>{C}
                                    cy = C & FC;
                                    C = ((C >> 1) & 0x7f) | (cy << 7);
                                    fs = C & FS;
                                    fz = (C == 0) ? FZ : 0;
                                    fp = Parity[C];
                                    f5 = C & F5;
                                    fh = 0;
                                    f3 = C & F3;
                                    fn = 0;
                                    fc = cy;
                                    break;
                                case 0x0A:
                                    // Opcode:    RRC D
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Flags:     SZ503P0C
                                    // Operation: D = >>{D}
                                    cy = D & FC;
                                    D = ((D >> 1) & 0x7f) | (cy << 7);
                                    fs = D & FS;
                                    fz = (D == 0) ? FZ : 0;
                                    fp = Parity[D];
                                    f5 = D & F5;
                                    fh = 0;
                                    f3 = D & F3;
                                    fn = 0;
                                    fc = cy;
                                    break;
                                case 0x0B:
                                    // Opcode:    RRC E
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Flags:     SZ503P0C
                                    // Operation: E = >>{E}
                                    cy = E & FC;
                                    E = ((E >> 1) & 0x7f) | (cy << 7);
                                    fs = E & FS;
                                    fz = (E == 0) ? FZ : 0;
                                    fp = Parity[E];
                                    f5 = E & F5;
                                    fh = 0;
                                    f3 = E & F3;
                                    fn = 0;
                                    fc = cy;
                                    break;
                                case 0x0C:
                                    // Opcode:    RRC H
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Flags:     SZ503P0C
                                    // Operation: H = >>{H}
                                    cy = H & FC;
                                    H = ((H >> 1) & 0x7f) | (cy << 7);
                                    fs = H & FS;
                                    fz = (H == 0) ? FZ : 0;
                                    fp = Parity[H];
                                    f5 = H & F5;
                                    fh = 0;
                                    f3 = H & F3;
                                    fn = 0;
                                    fc = cy;
                                    break;
                                case 0x0D:
                                    // Opcode:    RRC L
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Flags:     SZ503P0C
                                    // Operation: L = >>{L}
                                    cy = L & FC;
                                    L = ((L >> 1) & 0x7f) | (cy << 7);
                                    fs = L & FS;
                                    fz = (L == 0) ? FZ : 0;
                                    fp = Parity[L];
                                    f5 = L & F5;
                                    fh = 0;
                                    f3 = L & F3;
                                    fn = 0;
                                    fc = cy;
                                    break;
                                case 0x0E:
                                    // Opcode:    RRC (HL) 
                                    // TStates:   15
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    //            M2, 3 T States - Operand Data Read
                                    //            M3, 3 T States - Memory Write
                                    // MCycles2:  pc:4,pc+1:4,hl:3,hl:1,hl(write):3
                                    // Flags:     SZ503P0C
                                    // Operation: [HL] = >>{[HL]}
                                    y = PeekByte(HL);
                                    AddCycles(HL, 1);
                                    cy = y & FC;
                                    y = ((y >> 1) & 0x7f) | (cy << 7);
                                    fs = y & FS;
                                    fz = (y == 0) ? FZ : 0;
                                    fp = Parity[y];
                                    f5 = y & F5;
                                    fh = 0;
                                    f3 = y & F3;
                                    fn = 0;
                                    fc = cy;
                                    PokeByte(HL, y);
                                    break;
                                case 0x0F:
                                    // Opcode:    RRC A
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Flags:     SZ503P0C
                                    // Operation: A = >>{A}
                                    cy = A & FC;
                                    A = ((A >> 1) & 0x7f) | (cy << 7);
                                    fs = A & FS;
                                    fz = (A == 0) ? FZ : 0;
                                    fp = Parity[A];
                                    f5 = A & F5;
                                    fh = 0;
                                    f3 = A & F3;
                                    fn = 0;
                                    fc = cy;
                                    break;
                                case 0x10:
                                    // Opcode:    RL B
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Flags:     SZ503P0C
                                    // Operation: B = {CY,B}<<CY
                                    cy = (B & 0x80) >> 7;
                                    x = (((B << 1) & 0xfe) | fc) & 0xff;
                                    fs = x & FS;
                                    fz = (x == 0) ? FZ : 0;
                                    fp = Parity[x];
                                    f5 = x & F5;
                                    fh = 0;
                                    f3 = x & F3;
                                    fn = 0;
                                    fc = cy;
                                    B = x;
                                    break;
                                case 0x11:
                                    // Opcode:    RL C
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Flags:     SZ503P0C
                                    // Operation: C = {CY,C}<<CY
                                    cy = (C & 0x80) >> 7;
                                    x = (((C << 1) & 0xfe) | fc) & 0xff;
                                    fs = x & FS;
                                    fz = (x == 0) ? FZ : 0;
                                    fp = Parity[x];
                                    f5 = x & F5;
                                    fh = 0;
                                    f3 = x & F3;
                                    fn = 0;
                                    fc = cy;
                                    C = x;
                                    break;
                                case 0x12:
                                    // Opcode:    RL D
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Flags:     SZ503P0C
                                    // Operation: D = {CY,D}<<CY
                                    cy = (D & 0x80) >> 7;
                                    x = (((D << 1) & 0xfe) | fc) & 0xff;
                                    fs = x & FS;
                                    fz = (x == 0) ? FZ : 0;
                                    fp = Parity[x];
                                    f5 = x & F5;
                                    fh = 0;
                                    f3 = x & F3;
                                    fn = 0;
                                    fc = cy;
                                    D = x;
                                    break;
                                case 0x13:
                                    // Opcode:    RL E
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Flags:     SZ503P0C
                                    // Operation: E = {CY,E}<<CY
                                    cy = (E & 0x80) >> 7;
                                    x = (((E << 1) & 0xfe) | fc) & 0xff;
                                    fs = x & FS;
                                    fz = (x == 0) ? FZ : 0;
                                    fp = Parity[x];
                                    f5 = x & F5;
                                    fh = 0;
                                    f3 = x & F3;
                                    fn = 0;
                                    fc = cy;
                                    E = x;
                                    break;
                                case 0x14:
                                    // Opcode:    RL H
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Flags:     SZ503P0C
                                    // Operation: H = {CY,H}<<CY
                                    cy = (H & 0x80) >> 7;
                                    x = (((H << 1) & 0xfe) | fc) & 0xff;
                                    fs = x & FS;
                                    fz = (x == 0) ? FZ : 0;
                                    fp = Parity[x];
                                    f5 = x & F5;
                                    fh = 0;
                                    f3 = x & F3;
                                    fn = 0;
                                    fc = cy;
                                    H = x;
                                    break;
                                case 0x15:
                                    // Opcode:    RL L
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Flags:     SZ503P0C
                                    // Operation: L = {CY,L}<<CY
                                    cy = (L & 0x80) >> 7;
                                    x = (((L << 1) & 0xfe) | fc) & 0xff;
                                    fs = x & FS;
                                    fz = (x == 0) ? FZ : 0;
                                    fp = Parity[x];
                                    f5 = x & F5;
                                    fh = 0;
                                    f3 = x & F3;
                                    fn = 0;
                                    fc = cy;
                                    L = x;
                                    break;
                                case 0x16:
                                    // Opcode:    RL (HL) 
                                    // TStates:   15
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    //            M2, 3 T States - Operand Data Read
                                    //            M3, 3 T States - Memory Write
                                    // MCycles2:  pc:4,pc+1:4,hl:3,hl:1,hl(write):3
                                    // Flags:     SZ503P0C
                                    // Operation: [HL] = {CY,[HL]}<<CY
                                    y = PeekByte(HL);
                                    AddCycles(HL, 1);
                                    cy = (y & 0x80) >> 7;
                                    x = (((y << 1) & 0xfe) | fc) & 0xff;
                                    fs = x & FS;
                                    fz = (x == 0) ? FZ : 0;
                                    fp = Parity[x];
                                    f5 = x & F5;
                                    fh = 0;
                                    f3 = x & F3;
                                    fn = 0;
                                    fc = cy;
                                    PokeByte(HL, x);
                                    break;
                                case 0x17:
                                    // Opcode:    RL A
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Flags:     SZ503P0C
                                    // Operation: A = {CY,A}<<CY
                                    cy = (A & 0x80) >> 7;
                                    x = (((A << 1) & 0xfe) | fc) & 0xff;
                                    fs = x & FS;
                                    fz = (x == 0) ? FZ : 0;
                                    fp = Parity[x];
                                    f5 = x & F5;
                                    fh = 0;
                                    f3 = x & F3;
                                    fn = 0;
                                    fc = cy;
                                    A = x;
                                    break;
                                case 0x18:
                                    // Opcode:    RR B
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Flags:     SZ503P0C
                                    // Operation: B = CY>>{CY,B}
                                    cy = B & FC;
                                    B = ((B >> 1) & 0x7f) | (fc << 7);
                                    fs = B & FS;
                                    fz = (B == 0) ? FZ : 0;
                                    fp = Parity[B];
                                    f5 = B & F5;
                                    fh = 0;
                                    f3 = B & F3;
                                    fn = 0;
                                    fc = cy;
                                    break;
                                case 0x19:
                                    // Opcode:    RR C
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Flags:     SZ503P0C
                                    // Operation: C = CY>>{CY,C}
                                    cy = C & FC;
                                    C = ((C >> 1) & 0x7f) | (fc << 7);
                                    fs = C & FS;
                                    fz = (C == 0) ? FZ : 0;
                                    fp = Parity[C];
                                    f5 = C & F5;
                                    fh = 0;
                                    f3 = C & F3;
                                    fn = 0;
                                    fc = cy;
                                    break;
                                case 0x1A:
                                    // Opcode:    RR D
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Flags:     SZ503P0C
                                    // Operation: D = CY>>{CY,D}
                                    cy = D & FC;
                                    D = ((D >> 1) & 0x7f) | (fc << 7);
                                    fs = D & FS;
                                    fz = (D == 0) ? FZ : 0;
                                    fp = Parity[D];
                                    f5 = D & F5;
                                    fh = 0;
                                    f3 = D & F3;
                                    fn = 0;
                                    fc = cy;
                                    break;
                                case 0x1B:
                                    // Opcode:    RR E
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Flags:     SZ503P0C
                                    // Operation: E = CY>>{CY,E}
                                    cy = E & FC;
                                    E = ((E >> 1) & 0x7f) | (fc << 7);
                                    fs = E & FS;
                                    fz = (E == 0) ? FZ : 0;
                                    fp = Parity[E];
                                    f5 = E & F5;
                                    fh = 0;
                                    f3 = E & F3;
                                    fn = 0;
                                    fc = cy;
                                    break;
                                case 0x1C:
                                    // Opcode:    RR H
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Flags:     SZ503P0C
                                    // Operation: H = CY>>{CY,H}
                                    cy = H & FC;
                                    H = ((H >> 1) & 0x7f) | (fc << 7);
                                    fs = H & FS;
                                    fz = (H == 0) ? FZ : 0;
                                    fp = Parity[H];
                                    f5 = H & F5;
                                    fh = 0;
                                    f3 = H & F3;
                                    fn = 0;
                                    fc = cy;
                                    break;
                                case 0x1D:
                                    // Opcode:    RR L
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Flags:     SZ503P0C
                                    // Operation: L = CY>>{CY,L}
                                    cy = L & FC;
                                    L = ((L >> 1) & 0x7f) | (fc << 7);
                                    fs = L & FS;
                                    fz = (L == 0) ? FZ : 0;
                                    fp = Parity[L];
                                    f5 = L & F5;
                                    fh = 0;
                                    f3 = L & F3;
                                    fn = 0;
                                    fc = cy;
                                    break;
                                case 0x1E:
                                    // Opcode:    RR (HL) 
                                    // TStates:   15
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    //            M2, 3 T States - Operand Data Read
                                    //            M3, 3 T States - Memory Write
                                    // MCycles2:  pc:4,pc+1:4,hl:3,hl:1,hl(write):3
                                    // Flags:     SZ503P0C
                                    // Operation: [HL] = CY>>{CY,[HL]}
                                    y = PeekByte(HL);
                                    AddCycles(HL, 1);
                                    cy = y & FC;
                                    y = ((y >> 1) & 0x7f) | (fc << 7);
                                    fs = y & FS;
                                    fz = (y == 0) ? FZ : 0;
                                    fp = Parity[y];
                                    f5 = y & F5;
                                    fh = 0;
                                    f3 = y & F3;
                                    fn = 0;
                                    fc = cy;
                                    PokeByte(HL, y);
                                    break;
                                case 0x1F:
                                    // Opcode:    RR A
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Flags:     SZ503P0C
                                    // Operation: A = CY>>{CY,A}
                                    cy = A & FC;
                                    A = ((A >> 1) & 0x7f) | (fc << 7);
                                    fs = A & FS;
                                    fz = (A == 0) ? FZ : 0;
                                    fp = Parity[A];
                                    f5 = A & F5;
                                    fh = 0;
                                    f3 = A & F3;
                                    fn = 0;
                                    fc = cy;
                                    break;
                                case 0x20:
                                    // Opcode:    SLA B
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Flags:     SZ503P0C
                                    // Operation: B = B*2
                                    cy = ((B & 0x80) >> 7) & 0xff;
                                    x = ((B << 1) & 0xff);
                                    fs = x & FS;
                                    fz = ((x & 0xff) == 0) ? FZ : 0;
                                    f5 = x & F5;
                                    fh = 0;
                                    f3 = x & F3;
                                    fp = Parity[x & 0xff];
                                    fn = 0;
                                    fc = cy;
                                    B = x;
                                    break;
                                case 0x21:
                                    // Opcode:    SLA C
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Flags:     SZ503P0C
                                    // Operation: C = C*2
                                    cy = ((C & 0x80) >> 7) & 0xff;
                                    x = ((C << 1) & 0xff);
                                    fs = x & FS;
                                    fz = ((x & 0xff) == 0) ? FZ : 0;
                                    f5 = x & F5;
                                    fh = 0;
                                    f3 = x & F3;
                                    fp = Parity[x & 0xff];
                                    fn = 0;
                                    fc = cy;
                                    C = x;
                                    break;
                                case 0x22:
                                    // Opcode:    SLA D
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Flags:     SZ503P0C
                                    // Operation: D = D*2
                                    cy = ((D & 0x80) >> 7) & 0xff;
                                    x = ((D << 1) & 0xff);
                                    fs = x & FS;
                                    fz = ((x & 0xff) == 0) ? FZ : 0;
                                    f5 = x & F5;
                                    fh = 0;
                                    f3 = x & F3;
                                    fp = Parity[x & 0xff];
                                    fn = 0;
                                    fc = cy;
                                    D = x;
                                    break;
                                case 0x23:
                                    // Opcode:    SLA E
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Flags:     SZ503P0C
                                    // Operation: E = E*2
                                    cy = ((E & 0x80) >> 7) & 0xff;
                                    x = ((E << 1) & 0xff);
                                    fs = x & FS;
                                    fz = ((x & 0xff) == 0) ? FZ : 0;
                                    f5 = x & F5;
                                    fh = 0;
                                    f3 = x & F3;
                                    fp = Parity[x & 0xff];
                                    fn = 0;
                                    fc = cy;
                                    E = x;
                                    break;
                                case 0x24:
                                    // Opcode:    SLA H
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Flags:     SZ503P0C
                                    // Operation: H = H*2
                                    cy = ((H & 0x80) >> 7) & 0xff;
                                    x = ((H << 1) & 0xff);
                                    fs = x & FS;
                                    fz = ((x & 0xff) == 0) ? FZ : 0;
                                    f5 = x & F5;
                                    fh = 0;
                                    f3 = x & F3;
                                    fp = Parity[x & 0xff];
                                    fn = 0;
                                    fc = cy;
                                    H = x;
                                    break;
                                case 0x25:
                                    // Opcode:    SLA L
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Flags:     SZ503P0C
                                    // Operation: L = L*2
                                    cy = ((L & 0x80) >> 7) & 0xff;
                                    x = ((L << 1) & 0xff);
                                    fs = x & FS;
                                    fz = ((x & 0xff) == 0) ? FZ : 0;
                                    f5 = x & F5;
                                    fh = 0;
                                    f3 = x & F3;
                                    fp = Parity[x & 0xff];
                                    fn = 0;
                                    fc = cy;
                                    L = x;
                                    break;
                                case 0x26:
                                    // Opcode:    SLA (HL) 
                                    // TStates:   15
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    //            M2, 3 T States - Operand Data Read
                                    //            M3, 3 T States - Memory Write
                                    // MCycles2:  pc:4,pc+1:4,hl:3,hl:1,hl(write):3
                                    // Flags:     SZ503P0C
                                    // Operation: [HL] = [HL]*2
                                    y = PeekByte(HL);
                                    AddCycles(HL, 1);
                                    cy = ((y & 0x80) >> 7) & 0xff;
                                    x = ((y << 1) & 0xff);
                                    fs = x & FS;
                                    fz = ((x & 0xff) == 0) ? FZ : 0;
                                    f5 = x & F5;
                                    fh = 0;
                                    f3 = x & F3;
                                    fp = Parity[x & 0xff];
                                    fn = 0;
                                    fc = cy;
                                    PokeByte(HL, x);
                                    break;
                                case 0x27:
                                    // Opcode:    SLA A
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Flags:     SZ503P0C
                                    // Operation: A = A*2
                                    cy = ((A & 0x80) >> 7) & 0xff;
                                    x = ((A << 1) & 0xff);
                                    fs = x & FS;
                                    fz = ((x & 0xff) == 0) ? FZ : 0;
                                    f5 = x & F5;
                                    fh = 0;
                                    f3 = x & F3;
                                    fp = Parity[x & 0xff];
                                    fn = 0;
                                    fc = cy;
                                    A = x;
                                    break;
                                case 0x28:
                                    // Opcode:    SRA B
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Flags:     SZ503P0C
                                    // Operation: B = (signed)B/2
                                    b7 = B & 0x80;
                                    cy = B & FC;
                                    x = ((B >> 1) & 0xff) | b7;
                                    fs = x & FS;
                                    fz = ((x & 0xff) == 0) ? FZ : 0;
                                    f5 = x & F5;
                                    fh = 0;
                                    f3 = x & F3;
                                    fp = Parity[x & 0xff];
                                    fn = 0;
                                    fc = cy;
                                    B = x;
                                    break;
                                case 0x29:
                                    // Opcode:    SRA C
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Flags:     SZ503P0C
                                    // Operation: C = (signed)C/2
                                    b7 = C & 0x80;
                                    cy = C & FC;
                                    x = ((C >> 1) & 0xff) | b7;
                                    fs = x & FS;
                                    fz = ((x & 0xff) == 0) ? FZ : 0;
                                    f5 = x & F5;
                                    fh = 0;
                                    f3 = x & F3;
                                    fp = Parity[x & 0xff];
                                    fn = 0;
                                    fc = cy;
                                    C = x;
                                    break;
                                case 0x2A:
                                    // Opcode:    SRA D
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Flags:     SZ503P0C
                                    // Operation: D = (signed)D/2
                                    b7 = D & 0x80;
                                    cy = D & FC;
                                    x = ((D >> 1) & 0xff) | b7;
                                    fs = x & FS;
                                    fz = ((x & 0xff) == 0) ? FZ : 0;
                                    f5 = x & F5;
                                    fh = 0;
                                    f3 = x & F3;
                                    fp = Parity[x & 0xff];
                                    fn = 0;
                                    fc = cy;
                                    D = x;
                                    break;
                                case 0x2B:
                                    // Opcode:    SRA E
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Flags:     SZ503P0C
                                    // Operation: E = (signed)E/2
                                    b7 = E & 0x80;
                                    cy = E & FC;
                                    x = ((E >> 1) & 0xff) | b7;
                                    fs = x & FS;
                                    fz = ((x & 0xff) == 0) ? FZ : 0;
                                    f5 = x & F5;
                                    fh = 0;
                                    f3 = x & F3;
                                    fp = Parity[x & 0xff];
                                    fn = 0;
                                    fc = cy;
                                    E = x;
                                    break;
                                case 0x2C:
                                    // Opcode:    SRA H
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Flags:     SZ503P0C
                                    // Operation: H = (signed)H/2
                                    b7 = H & 0x80;
                                    cy = H & FC;
                                    x = ((H >> 1) & 0xff) | b7;
                                    fs = x & FS;
                                    fz = ((x & 0xff) == 0) ? FZ : 0;
                                    f5 = x & F5;
                                    fh = 0;
                                    f3 = x & F3;
                                    fp = Parity[x & 0xff];
                                    fn = 0;
                                    fc = cy;
                                    H = x;
                                    break;
                                case 0x2D:
                                    // Opcode:    SRA L
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Flags:     SZ503P0C
                                    // Operation: L = (signed)L/2
                                    b7 = L & 0x80;
                                    cy = L & FC;
                                    x = ((L >> 1) & 0xff) | b7;
                                    fs = x & FS;
                                    fz = ((x & 0xff) == 0) ? FZ : 0;
                                    f5 = x & F5;
                                    fh = 0;
                                    f3 = x & F3;
                                    fp = Parity[x & 0xff];
                                    fn = 0;
                                    fc = cy;
                                    L = x;
                                    break;
                                case 0x2E:
                                    // Opcode:    SRA (HL) 
                                    // TStates:   15
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    //            M2, 3 T States - Operand Data Read
                                    //            M3, 3 T States - Memory Write
                                    // MCycles2:  pc:4,pc+1:4,hl:3,hl:1,hl(write):3
                                    // Flags:     SZ503P0C
                                    // Operation: [HL] = (signed)[HL]/2
                                    y = PeekByte(HL);
                                    AddCycles(HL, 1);
                                    b7 = y & 0x80;
                                    cy = y & FC;
                                    x = ((y >> 1) & 0xff) | b7;
                                    fs = x & FS;
                                    fz = ((x & 0xff) == 0) ? FZ : 0;
                                    f5 = x & F5;
                                    fh = 0;
                                    f3 = x & F3;
                                    fp = Parity[x & 0xff];
                                    fn = 0;
                                    fc = cy;
                                    PokeByte(HL, x);
                                    break;
                                case 0x2F:
                                    // Opcode:    SRA A
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Flags:     SZ503P0C
                                    // Operation: A = (signed)A/2
                                    b7 = A & 0x80;
                                    cy = A & FC;
                                    x = ((A >> 1) & 0xff) | b7;
                                    fs = x & FS;
                                    fz = ((x & 0xff) == 0) ? FZ : 0;
                                    f5 = x & F5;
                                    fh = 0;
                                    f3 = x & F3;
                                    fp = Parity[x & 0xff];
                                    fn = 0;
                                    fc = cy;
                                    A = x;
                                    break;
                                case 0x30:
                                    // Opcode:    SLL B (Undocumented)
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Flags:     SZ503P0C
                                    // Operation: B = B*2+1
                                    cy = (B & 0x80) >> 7;
                                    x = ((B << 1) & 0xff) | 1;
                                    fs = x & FS;
                                    fz = ((x & 0xff) == 0) ? FZ : 0;
                                    f5 = x & F5;
                                    fh = 0;
                                    f3 = x & F3;
                                    fp = Parity[x & 0xff];
                                    fn = 0;
                                    fc = cy;
                                    B = x;
                                    break;
                                case 0x31:
                                    // Opcode:    SLL C (Undocumented)
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Flags:     SZ503P0C
                                    // Operation: C = C*2+1
                                    cy = (C & 0x80) >> 7;
                                    x = ((C << 1) & 0xff) | 1;
                                    fs = x & FS;
                                    fz = ((x & 0xff) == 0) ? FZ : 0;
                                    f5 = x & F5;
                                    fh = 0;
                                    f3 = x & F3;
                                    fp = Parity[x & 0xff];
                                    fn = 0;
                                    fc = cy;
                                    C = x;
                                    break;
                                case 0x32:
                                    // Opcode:    SLL D (Undocumented)
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Flags:     SZ503P0C
                                    // Operation: D = D*2+1
                                    cy = (D & 0x80) >> 7;
                                    x = ((D << 1) & 0xff) | 1;
                                    fs = x & FS;
                                    fz = ((x & 0xff) == 0) ? FZ : 0;
                                    f5 = x & F5;
                                    fh = 0;
                                    f3 = x & F3;
                                    fp = Parity[x & 0xff];
                                    fn = 0;
                                    fc = cy;
                                    D = x;
                                    break;
                                case 0x33:
                                    // Opcode:    SLL E (Undocumented)
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Flags:     SZ503P0C
                                    // Operation: E = E*2+1
                                    cy = (E & 0x80) >> 7;
                                    x = ((E << 1) & 0xff) | 1;
                                    fs = x & FS;
                                    fz = ((x & 0xff) == 0) ? FZ : 0;
                                    f5 = x & F5;
                                    fh = 0;
                                    f3 = x & F3;
                                    fp = Parity[x & 0xff];
                                    fn = 0;
                                    fc = cy;
                                    E = x;
                                    break;
                                case 0x34:
                                    // Opcode:    SLL H (Undocumented)
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Flags:     SZ503P0C
                                    // Operation: H = H*2+1
                                    cy = (H & 0x80) >> 7;
                                    x = ((H << 1) & 0xff) | 1;
                                    fs = x & FS;
                                    fz = ((x & 0xff) == 0) ? FZ : 0;
                                    f5 = x & F5;
                                    fh = 0;
                                    f3 = x & F3;
                                    fp = Parity[x & 0xff];
                                    fn = 0;
                                    fc = cy;
                                    H = x;
                                    break;
                                case 0x35:
                                    // Opcode:    SLL L (Undocumented)
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Flags:     SZ503P0C
                                    // Operation: L = L*2+1
                                    cy = (L & 0x80) >> 7;
                                    x = ((L << 1) & 0xff) | 1;
                                    fs = x & FS;
                                    fz = ((x & 0xff) == 0) ? FZ : 0;
                                    f5 = x & F5;
                                    fh = 0;
                                    f3 = x & F3;
                                    fp = Parity[x & 0xff];
                                    fn = 0;
                                    fc = cy;
                                    L = x;
                                    break;
                                case 0x36:
                                    // Opcode:    SLL (HL)  (Undocumented)
                                    // TStates:   15
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    //            M2, 3 T States - Operand Data Read
                                    //            M3, 3 T States - Memory Write
                                    // MCycles2:  pc:4,pc+1:4,hl:3,hl:1,hl(write):3
                                    // Flags:     SZ503P0C
                                    // Operation: [HL] = [HL]*2+1
                                    y = PeekByte(HL);
                                    AddCycles(HL, 1);
                                    cy = (y & 0x80) >> 7;
                                    x = ((y << 1) & 0xff) | 1;
                                    fs = x & FS;
                                    fz = ((x & 0xff) == 0) ? FZ : 0;
                                    f5 = x & F5;
                                    fh = 0;
                                    f3 = x & F3;
                                    fp = Parity[x & 0xff];
                                    fn = 0;
                                    fc = cy;
                                    PokeByte(HL, x);
                                    break;
                                case 0x37:
                                    // Opcode:    SLL A (Undocumented)
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Flags:     SZ503P0C
                                    // Operation: A = A*2+1
                                    cy = (A & 0x80) >> 7;
                                    x = ((A << 1) & 0xff) | 1;
                                    fs = x & FS;
                                    fz = ((x & 0xff) == 0) ? FZ : 0;
                                    f5 = x & F5;
                                    fh = 0;
                                    f3 = x & F3;
                                    fp = Parity[x & 0xff];
                                    fn = 0;
                                    fc = cy;
                                    A = x;
                                    break;
                                case 0x38:
                                    // Opcode:    SRL B
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Flags:     SZ503P0C
                                    // Operation: B = (unsigned)B/2
                                    cy = B & FC;
                                    x = ((B >> 1) & 0xff);
                                    fs = x & FS;
                                    fz = ((x & 0xff) == 0) ? FZ : 0;
                                    f5 = x & F5;
                                    fh = 0;
                                    f3 = x & F3;
                                    fp = Parity[x & 0xff];
                                    fn = 0;
                                    fc = cy;
                                    B = x;
                                    break;
                                case 0x39:
                                    // Opcode:    SRL C
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Flags:     SZ503P0C
                                    // Operation: C = (unsigned)C/2
                                    cy = C & FC;
                                    x = ((C >> 1) & 0xff);
                                    fs = x & FS;
                                    fz = ((x & 0xff) == 0) ? FZ : 0;
                                    f5 = x & F5;
                                    fh = 0;
                                    f3 = x & F3;
                                    fp = Parity[x & 0xff];
                                    fn = 0;
                                    fc = cy;
                                    C = x;
                                    break;
                                case 0x3A:
                                    // Opcode:    SRL D
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Flags:     SZ503P0C
                                    // Operation: D = (unsigned)D/2
                                    cy = D & FC;
                                    x = ((D >> 1) & 0xff);
                                    fs = x & FS;
                                    fz = ((x & 0xff) == 0) ? FZ : 0;
                                    f5 = x & F5;
                                    fh = 0;
                                    f3 = x & F3;
                                    fp = Parity[x & 0xff];
                                    fn = 0;
                                    fc = cy;
                                    D = x;
                                    break;
                                case 0x3B:
                                    // Opcode:    SRL E
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Flags:     SZ503P0C
                                    // Operation: E = (unsigned)E/2
                                    cy = E & FC;
                                    x = ((E >> 1) & 0xff);
                                    fs = x & FS;
                                    fz = ((x & 0xff) == 0) ? FZ : 0;
                                    f5 = x & F5;
                                    fh = 0;
                                    f3 = x & F3;
                                    fp = Parity[x & 0xff];
                                    fn = 0;
                                    fc = cy;
                                    E = x;
                                    break;
                                case 0x3C:
                                    // Opcode:    SRL H
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Flags:     SZ503P0C
                                    // Operation: H = (unsigned)H/2
                                    cy = H & FC;
                                    x = ((H >> 1) & 0xff);
                                    fs = x & FS;
                                    fz = ((x & 0xff) == 0) ? FZ : 0;
                                    f5 = x & F5;
                                    fh = 0;
                                    f3 = x & F3;
                                    fp = Parity[x & 0xff];
                                    fn = 0;
                                    fc = cy;
                                    H = x;
                                    break;
                                case 0x3D:
                                    // Opcode:    SRL L
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Flags:     SZ503P0C
                                    // Operation: L = (unsigned)L/2
                                    cy = L & FC;
                                    x = ((L >> 1) & 0xff);
                                    fs = x & FS;
                                    fz = ((x & 0xff) == 0) ? FZ : 0;
                                    f5 = x & F5;
                                    fh = 0;
                                    f3 = x & F3;
                                    fp = Parity[x & 0xff];
                                    fn = 0;
                                    fc = cy;
                                    L = x;
                                    break;
                                case 0x3E:
                                    // Opcode:    SRL (HL) 
                                    // TStates:   15
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    //            M2, 3 T States - Operand Data Read
                                    //            M3, 3 T States - Memory Write
                                    // MCycles2:  pc:4,pc+1:4,hl:3,hl:1,hl(write):3
                                    // Flags:     SZ503P0C
                                    // Operation: [HL] = (unsigned)[HL]/2
                                    y = PeekByte(HL);
                                    AddCycles(HL, 1);
                                    cy = y & FC;
                                    x = ((y >> 1) & 0xff);
                                    fs = x & FS;
                                    fz = ((x & 0xff) == 0) ? FZ : 0;
                                    f5 = x & F5;
                                    fh = 0;
                                    f3 = x & F3;
                                    fp = Parity[x & 0xff];
                                    fn = 0;
                                    fc = cy;
                                    y = x;
                                    PokeByte(HL, y);
                                    break;
                                case 0x3F:
                                    // Opcode:    SRL A
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Flags:     SZ503P0C
                                    // Operation: A = (unsigned)A/2
                                    cy = A & FC;
                                    x = ((A >> 1) & 0xff);
                                    fs = x & FS;
                                    fz = ((x & 0xff) == 0) ? FZ : 0;
                                    f5 = x & F5;
                                    fh = 0;
                                    f3 = x & F3;
                                    fp = Parity[x & 0xff];
                                    fn = 0;
                                    fc = cy;
                                    A = x;
                                    break;
                                case 0x40:
                                    // Opcode:    BIT 0,B
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Flags:     *Z513*0-
                                    //            * PV as Z
                                    //            * Behaves much like r AND 2^n
                                    // Operation: B&{2^0}
                                    x = B & 0x01;
                                    fs = 0;
                                    fz = ((x == 0) ? FZ : 0);
                                    f5 = B & F5;
                                    fh = FH;
                                    f3 = B & F3;
                                    fp = ((x == 0) ? FP : 0);
                                    fn = 0;
                                    break;
                                case 0x41:
                                    // Opcode:    BIT 0,C
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Flags:     *Z513*0-
                                    //            * PV as Z
                                    //            * Behaves much like r AND 2^n
                                    // Operation: C&{2^0}
                                    x = C & 0x01;
                                    fs = 0;
                                    fz = ((x == 0) ? FZ : 0);
                                    f5 = C & F5;
                                    fh = FH;
                                    f3 = C & F3;
                                    fp = ((x == 0) ? FP : 0);
                                    fn = 0;
                                    break;
                                case 0x42:
                                    // Opcode:    BIT 0,D
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Flags:     *Z513*0-
                                    //            * PV as Z
                                    //            * Behaves much like r AND 2^n
                                    // Operation: D&{2^0}
                                    x = D & 0x01;
                                    fs = 0;
                                    fz = ((x == 0) ? FZ : 0);
                                    f5 = D & F5;
                                    fh = FH;
                                    f3 = D & F3;
                                    fp = ((x == 0) ? FP : 0);
                                    fn = 0;
                                    break;
                                case 0x43:
                                    // Opcode:    BIT 0,E
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Flags:     *Z513*0-
                                    //            * PV as Z
                                    //            * Behaves much like r AND 2^n
                                    // Operation: E&{2^0}
                                    x = E & 0x01;
                                    fs = 0;
                                    fz = ((x == 0) ? FZ : 0);
                                    f5 = E & F5;
                                    fh = FH;
                                    f3 = E & F3;
                                    fp = ((x == 0) ? FP : 0);
                                    fn = 0;
                                    break;
                                case 0x44:
                                    // Opcode:    BIT 0,H
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Flags:     *Z513*0-
                                    //            * PV as Z
                                    //            * Behaves much like r AND 2^n
                                    // Operation: H&{2^0}
                                    x = H & 0x01;
                                    fs = 0;
                                    fz = ((x == 0) ? FZ : 0);
                                    f5 = H & F5;
                                    fh = FH;
                                    f3 = H & F3;
                                    fp = ((x == 0) ? FP : 0);
                                    fn = 0;
                                    break;
                                case 0x45:
                                    // Opcode:    BIT 0,L
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Flags:     *Z513*0-
                                    //            * PV as Z
                                    //            * Behaves much like r AND 2^n
                                    // Operation: L&{2^0}
                                    x = L & 0x01;
                                    fs = 0;
                                    fz = ((x == 0) ? FZ : 0);
                                    f5 = L & F5;
                                    fh = FH;
                                    f3 = L & F3;
                                    fp = ((x == 0) ? FP : 0);
                                    fn = 0;
                                    break;
                                case 0x46:
                                    // Opcode:    BIT 0,(HL) 
                                    // TStates:   12
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    //            M2, 4 T States - Memory Read
                                    // MCycles2:  pc:4,pc+1:4,hl:3,hl:1
                                    // Flags:     *Z513*0-
                                    //            * PV as Z
                                    //            * Behaves much like r AND 2^n
                                    // Operation: [HL]&{2^0}
                                    y = PeekByte(HL);
                                    x = y & 0x01;
                                    fs = 0;
                                    fz = ((x == 0) ? FZ : 0);
                                    fh = FH;
                                    fp = ((x == 0) ? FP : 0);
                                    fn = 0;
                                    AddCycles(HL, 1);
                                    f5 = (WZ >> 8) & F5;
                                    f3 = (WZ >> 8) & F3;

                                    break;
                                case 0x47:
                                    // Opcode:    BIT 0,A
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Flags:     *Z513*0-
                                    //            * PV as Z
                                    //            * Behaves much like r AND 2^n
                                    // Operation: A&{2^0}
                                    x = A & 0x01;
                                    fs = 0;
                                    fz = ((x == 0) ? FZ : 0);
                                    f5 = A & F5;
                                    fh = FH;
                                    f3 = A & F3;
                                    fp = ((x == 0) ? FP : 0);
                                    fn = 0;
                                    break;
                                case 0x48:
                                    // Opcode:    BIT 1,B
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Flags:     *Z513*0-
                                    //            * PV as Z
                                    //            * Behaves much like r AND 2^n
                                    // Operation: B&{2^1}
                                    x = B & 0x02;
                                    fs = 0;
                                    fz = ((x == 0) ? FZ : 0);
                                    f5 = B & F5;
                                    fh = FH;
                                    f3 = B & F3;
                                    fp = ((x == 0) ? FP : 0);
                                    fn = 0;
                                    break;
                                case 0x49:
                                    // Opcode:    BIT 1,C
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Flags:     *Z513*0-
                                    //            * PV as Z
                                    //            * Behaves much like r AND 2^n
                                    // Operation: C&{2^1}
                                    x = C & 0x02;
                                    fs = 0;
                                    fz = ((x == 0) ? FZ : 0);
                                    f5 = C & F5;
                                    fh = FH;
                                    f3 = C & F3;
                                    fp = ((x == 0) ? FP : 0);
                                    fn = 0;
                                    break;
                                case 0x4A:
                                    // Opcode:    BIT 1,D
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Flags:     *Z513*0-
                                    //            * PV as Z
                                    //            * Behaves much like r AND 2^n
                                    // Operation: D&{2^1}
                                    x = D & 0x02;
                                    fs = 0;
                                    fz = ((x == 0) ? FZ : 0);
                                    f5 = D & F5;
                                    fh = FH;
                                    f3 = D & F3;
                                    fp = ((x == 0) ? FP : 0);
                                    fn = 0;
                                    break;
                                case 0x4B:
                                    // Opcode:    BIT 1,E
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Flags:     *Z513*0-
                                    //            * PV as Z
                                    //            * Behaves much like r AND 2^n
                                    // Operation: E&{2^1}
                                    x = E & 0x02;
                                    fs = 0;
                                    fz = ((x == 0) ? FZ : 0);
                                    f5 = E & F5;
                                    fh = FH;
                                    f3 = E & F3;
                                    fp = ((x == 0) ? FP : 0);
                                    fn = 0;
                                    break;
                                case 0x4C:
                                    // Opcode:    BIT 1,H
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Flags:     *Z513*0-
                                    //            * PV as Z
                                    //            * Behaves much like r AND 2^n
                                    // Operation: H&{2^1}
                                    x = H & 0x02;
                                    fs = 0;
                                    fz = ((x == 0) ? FZ : 0);
                                    f5 = H & F5;
                                    fh = FH;
                                    f3 = H & F3;
                                    fp = ((x == 0) ? FP : 0);
                                    fn = 0;
                                    break;
                                case 0x4D:
                                    // Opcode:    BIT 1,L
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Flags:     *Z513*0-
                                    //            * PV as Z
                                    //            * Behaves much like r AND 2^n
                                    // Operation: L&{2^1}
                                    x = L & 0x02;
                                    fs = 0;
                                    fz = ((x == 0) ? FZ : 0);
                                    f5 = L & F5;
                                    fh = FH;
                                    f3 = L & F3;
                                    fp = ((x == 0) ? FP : 0);
                                    fn = 0;
                                    break;
                                case 0x4E:
                                    // Opcode:    BIT 1,(HL) 
                                    // TStates:   12
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    //            M2, 4 T States - Memory Read
                                    // MCycles2:  pc:4,pc+1:4,hl:3,hl:1
                                    // Flags:     *Z513*0-
                                    //            * PV as Z
                                    //            * Behaves much like r AND 2^n
                                    // Operation: [HL]&{2^1}
                                    y = PeekByte(HL);
                                    x = y & 0x02;
                                    fs = 0;
                                    fz = ((x == 0) ? FZ : 0);
                                    fh = FH;
                                    fp = ((x == 0) ? FP : 0);
                                    fn = 0;
                                    AddCycles(HL, 1);
                                    f5 = (WZ >> 8) & F5;
                                    f3 = (WZ >> 8) & F3;

                                    break;
                                case 0x4F:
                                    // Opcode:    BIT 1,A
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Flags:     *Z513*0-
                                    //            * PV as Z
                                    //            * Behaves much like r AND 2^n
                                    // Operation: A&{2^1}
                                    x = A & 0x02;
                                    fs = 0;
                                    fz = ((x == 0) ? FZ : 0);
                                    f5 = A & F5;
                                    fh = FH;
                                    f3 = A & F3;
                                    fp = ((x == 0) ? FP : 0);
                                    fn = 0;
                                    break;
                                case 0x50:
                                    // Opcode:    BIT 2,B
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Flags:     *Z513*0-
                                    //            * PV as Z
                                    //            * Behaves much like r AND 2^n
                                    // Operation: B&{2^2}
                                    x = B & 0x04;
                                    fs = 0;
                                    fz = ((x == 0) ? FZ : 0);
                                    f5 = B & F5;
                                    fh = FH;
                                    f3 = B & F3;
                                    fp = ((x == 0) ? FP : 0);
                                    fn = 0;
                                    break;
                                case 0x51:
                                    // Opcode:    BIT 2,C
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Flags:     *Z513*0-
                                    //            * PV as Z
                                    //            * Behaves much like r AND 2^n
                                    // Operation: C&{2^2}
                                    x = C & 0x04;
                                    fs = 0;
                                    fz = ((x == 0) ? FZ : 0);
                                    f5 = C & F5;
                                    fh = FH;
                                    f3 = C & F3;
                                    fp = ((x == 0) ? FP : 0);
                                    fn = 0;
                                    break;
                                case 0x52:
                                    // Opcode:    BIT 2,D
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Flags:     *Z513*0-
                                    //            * PV as Z
                                    //            * Behaves much like r AND 2^n
                                    // Operation: D&{2^2}
                                    x = D & 0x04;
                                    fs = 0;
                                    fz = ((x == 0) ? FZ : 0);
                                    f5 = D & F5;
                                    fh = FH;
                                    f3 = D & F3;
                                    fp = ((x == 0) ? FP : 0);
                                    fn = 0;
                                    break;
                                case 0x53:
                                    // Opcode:    BIT 2,E
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Flags:     *Z513*0-
                                    //            * PV as Z
                                    //            * Behaves much like r AND 2^n
                                    // Operation: E&{2^2}
                                    x = E & 0x04;
                                    fs = 0;
                                    fz = ((x == 0) ? FZ : 0);
                                    f5 = E & F5;
                                    fh = FH;
                                    f3 = E & F3;
                                    fp = ((x == 0) ? FP : 0);
                                    fn = 0;
                                    break;
                                case 0x54:
                                    // Opcode:    BIT 2,H
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Flags:     *Z513*0-
                                    //            * PV as Z
                                    //            * Behaves much like r AND 2^n
                                    // Operation: H&{2^2}
                                    x = H & 0x04;
                                    fs = 0;
                                    fz = ((x == 0) ? FZ : 0);
                                    f5 = H & F5;
                                    fh = FH;
                                    f3 = H & F3;
                                    fp = ((x == 0) ? FP : 0);
                                    fn = 0;
                                    break;
                                case 0x55:
                                    // Opcode:    BIT 2,L
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Flags:     *Z513*0-
                                    //            * PV as Z
                                    //            * Behaves much like r AND 2^n
                                    // Operation: L&{2^2}
                                    x = L & 0x04;
                                    fs = 0;
                                    fz = ((x == 0) ? FZ : 0);
                                    f5 = L & F5;
                                    fh = FH;
                                    f3 = L & F3;
                                    fp = ((x == 0) ? FP : 0);
                                    fn = 0;
                                    break;
                                case 0x56:
                                    // Opcode:    BIT 2,(HL) 
                                    // TStates:   12
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    //            M2, 4 T States - Memory Read
                                    // MCycles2:  pc:4,pc+1:4,hl:3,hl:1
                                    // Flags:     *Z513*0-
                                    //            * PV as Z
                                    //            * Behaves much like r AND 2^n
                                    // Operation: [HL]&{2^2}
                                    y = PeekByte(HL);
                                    x = y & 0x04;
                                    fs = 0;
                                    fz = ((x == 0) ? FZ : 0);
                                    fh = FH;
                                    fp = ((x == 0) ? FP : 0);
                                    fn = 0;
                                    AddCycles(HL, 1);
                                    f5 = (WZ >> 8) & F5;
                                    f3 = (WZ >> 8) & F3;

                                    break;
                                case 0x57:
                                    // Opcode:    BIT 2,A
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Flags:     *Z513*0-
                                    //            * PV as Z
                                    //            * Behaves much like r AND 2^n
                                    // Operation: A&{2^2}
                                    x = A & 0x04;
                                    fs = 0;
                                    fz = ((x == 0) ? FZ : 0);
                                    f5 = A & F5;
                                    fh = FH;
                                    f3 = A & F3;
                                    fp = ((x == 0) ? FP : 0);
                                    fn = 0;
                                    break;
                                case 0x58:
                                    // Opcode:    BIT 3,B
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Flags:     *Z513*0-
                                    //            * PV as Z
                                    //            * Behaves much like r AND 2^n
                                    // Operation: B&{2^3}
                                    x = B & 0x08;
                                    fs = 0;
                                    fz = ((x == 0) ? FZ : 0);
                                    f5 = B & F5;
                                    fh = FH;
                                    f3 = B & F3;
                                    fp = ((x == 0) ? FP : 0);
                                    fn = 0;
                                    break;
                                case 0x59:
                                    // Opcode:    BIT 3,C
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Flags:     *Z513*0-
                                    //            * PV as Z
                                    //            * Behaves much like r AND 2^n
                                    // Operation: C&{2^3}
                                    x = C & 0x08;
                                    fs = 0;
                                    fz = ((x == 0) ? FZ : 0);
                                    f5 = C & F5;
                                    fh = FH;
                                    f3 = C & F3;
                                    fp = ((x == 0) ? FP : 0);
                                    fn = 0;
                                    break;
                                case 0x5A:
                                    // Opcode:    BIT 3,D
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Flags:     *Z513*0-
                                    //            * PV as Z
                                    //            * Behaves much like r AND 2^n
                                    // Operation: D&{2^3}
                                    x = D & 0x08;
                                    fs = 0;
                                    fz = ((x == 0) ? FZ : 0);
                                    f5 = D & F5;
                                    fh = FH;
                                    f3 = D & F3;
                                    fp = ((x == 0) ? FP : 0);
                                    fn = 0;
                                    break;
                                case 0x5B:
                                    // Opcode:    BIT 3,E
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Flags:     *Z513*0-
                                    //            * PV as Z
                                    //            * Behaves much like r AND 2^n
                                    // Operation: E&{2^3}
                                    x = E & 0x08;
                                    fs = 0;
                                    fz = ((x == 0) ? FZ : 0);
                                    f5 = E & F5;
                                    fh = FH;
                                    f3 = E & F3;
                                    fp = ((x == 0) ? FP : 0);
                                    fn = 0;
                                    break;
                                case 0x5C:
                                    // Opcode:    BIT 3,H
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Flags:     *Z513*0-
                                    //            * PV as Z
                                    //            * Behaves much like r AND 2^n
                                    // Operation: H&{2^3}
                                    x = H & 0x08;
                                    fs = 0;
                                    fz = ((x == 0) ? FZ : 0);
                                    f5 = H & F5;
                                    fh = FH;
                                    f3 = H & F3;
                                    fp = ((x == 0) ? FP : 0);
                                    fn = 0;
                                    break;
                                case 0x5D:
                                    // Opcode:    BIT 3,L
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Flags:     *Z513*0-
                                    //            * PV as Z
                                    //            * Behaves much like r AND 2^n
                                    // Operation: L&{2^3}
                                    x = L & 0x08;
                                    fs = 0;
                                    fz = ((x == 0) ? FZ : 0);
                                    f5 = L & F5;
                                    fh = FH;
                                    f3 = L & F3;
                                    fp = ((x == 0) ? FP : 0);
                                    fn = 0;
                                    break;
                                case 0x5E:
                                    // Opcode:    BIT 3,(HL) 
                                    // TStates:   12
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    //            M2, 4 T States - Memory Read
                                    // MCycles2:  pc:4,pc+1:4,hl:3,hl:1
                                    // Flags:     *Z513*0-
                                    //            * PV as Z
                                    //            * Behaves much like r AND 2^n
                                    // Operation: [HL]&{2^3}
                                    y = PeekByte(HL);
                                    x = y & 0x08;
                                    fs = 0;
                                    fz = ((x == 0) ? FZ : 0);
                                    fh = FH;
                                    fp = ((x == 0) ? FP : 0);
                                    fn = 0;
                                    AddCycles(HL, 1);
                                    f5 = (WZ >> 8) & F5;
                                    f3 = (WZ >> 8) & F3;

                                    break;
                                case 0x5F:
                                    // Opcode:    BIT 3,A
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Flags:     *Z513*0-
                                    //            * PV as Z
                                    //            * Behaves much like r AND 2^n
                                    // Operation: A&{2^3}
                                    x = A & 0x08;
                                    fs = 0;
                                    fz = ((x == 0) ? FZ : 0);
                                    f5 = A & F5;
                                    fh = FH;
                                    f3 = A & F3;
                                    fp = ((x == 0) ? FP : 0);
                                    fn = 0;
                                    break;
                                case 0x60:
                                    // Opcode:    BIT 4,B
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Flags:     *Z513*0-
                                    //            * PV as Z
                                    //            * Behaves much like r AND 2^n
                                    // Operation: B&{2^4}
                                    x = B & 0x10;
                                    fs = 0;
                                    fz = ((x == 0) ? FZ : 0);
                                    f5 = B & F5;
                                    fh = FH;
                                    f3 = B & F3;
                                    fp = ((x == 0) ? FP : 0);
                                    fn = 0;
                                    break;
                                case 0x61:
                                    // Opcode:    BIT 4,C
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Flags:     *Z513*0-
                                    //            * PV as Z
                                    //            * Behaves much like r AND 2^n
                                    // Operation: C&{2^4}
                                    x = C & 0x10;
                                    fs = 0;
                                    fz = ((x == 0) ? FZ : 0);
                                    f5 = C & F5;
                                    fh = FH;
                                    f3 = C & F3;
                                    fp = ((x == 0) ? FP : 0);
                                    fn = 0;
                                    break;
                                case 0x62:
                                    // Opcode:    BIT 4,D
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Flags:     *Z513*0-
                                    //            * PV as Z
                                    //            * Behaves much like r AND 2^n
                                    // Operation: D&{2^4}
                                    x = D & 0x10;
                                    fs = 0;
                                    fz = ((x == 0) ? FZ : 0);
                                    f5 = D & F5;
                                    fh = FH;
                                    f3 = D & F3;
                                    fp = ((x == 0) ? FP : 0);
                                    fn = 0;
                                    break;
                                case 0x63:
                                    // Opcode:    BIT 4,E
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Flags:     *Z513*0-
                                    //            * PV as Z
                                    //            * Behaves much like r AND 2^n
                                    // Operation: E&{2^4}
                                    x = E & 0x10;
                                    fs = 0;
                                    fz = ((x == 0) ? FZ : 0);
                                    f5 = E & F5;
                                    fh = FH;
                                    f3 = E & F3;
                                    fp = ((x == 0) ? FP : 0);
                                    fn = 0;
                                    break;
                                case 0x64:
                                    // Opcode:    BIT 4,H
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Flags:     *Z513*0-
                                    //            * PV as Z
                                    //            * Behaves much like r AND 2^n
                                    // Operation: H&{2^4}
                                    x = H & 0x10;
                                    fs = 0;
                                    fz = ((x == 0) ? FZ : 0);
                                    f5 = H & F5;
                                    fh = FH;
                                    f3 = H & F3;
                                    fp = ((x == 0) ? FP : 0);
                                    fn = 0;
                                    break;
                                case 0x65:
                                    // Opcode:    BIT 4,L
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Flags:     *Z513*0-
                                    //            * PV as Z
                                    //            * Behaves much like r AND 2^n
                                    // Operation: L&{2^4}
                                    x = L & 0x10;
                                    fs = 0;
                                    fz = ((x == 0) ? FZ : 0);
                                    f5 = L & F5;
                                    fh = FH;
                                    f3 = L & F3;
                                    fp = ((x == 0) ? FP : 0);
                                    fn = 0;
                                    break;
                                case 0x66:
                                    // Opcode:    BIT 4,(HL) 
                                    // TStates:   12
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    //            M2, 4 T States - Memory Read
                                    // MCycles2:  pc:4,pc+1:4,hl:3,hl:1
                                    // Flags:     *Z513*0-
                                    //            * PV as Z
                                    //            * Behaves much like r AND 2^n
                                    // Operation: [HL]&{2^4}
                                    y = PeekByte(HL);
                                    x = y & 0x10;
                                    fs = 0;
                                    fz = ((x == 0) ? FZ : 0);
                                    fh = FH;
                                    fp = ((x == 0) ? FP : 0);
                                    fn = 0;
                                    AddCycles(HL, 1);
                                    f5 = (WZ >> 8) & F5;
                                    f3 = (WZ >> 8) & F3;

                                    break;
                                case 0x67:
                                    // Opcode:    BIT 4,A
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Flags:     *Z513*0-
                                    //            * PV as Z
                                    //            * Behaves much like r AND 2^n
                                    // Operation: A&{2^4}
                                    x = A & 0x10;
                                    fs = 0;
                                    fz = ((x == 0) ? FZ : 0);
                                    f5 = A & F5;
                                    fh = FH;
                                    f3 = A & F3;
                                    fp = ((x == 0) ? FP : 0);
                                    fn = 0;
                                    break;
                                case 0x68:
                                    // Opcode:    BIT 5,B
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Flags:     *Z513*0-
                                    //            * PV as Z
                                    //            * Behaves much like r AND 2^n
                                    // Operation: B&{2^5}
                                    x = B & 0x20;
                                    fs = 0;
                                    fz = ((x == 0) ? FZ : 0);
                                    f5 = B & F5;
                                    fh = FH;
                                    f3 = B & F3;
                                    fp = ((x == 0) ? FP : 0);
                                    fn = 0;
                                    break;
                                case 0x69:
                                    // Opcode:    BIT 5,C
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Flags:     *Z513*0-
                                    //            * PV as Z
                                    //            * Behaves much like r AND 2^n
                                    // Operation: C&{2^5}
                                    x = C & 0x20;
                                    fs = 0;
                                    fz = ((x == 0) ? FZ : 0);
                                    f5 = C & F5;
                                    fh = FH;
                                    f3 = C & F3;
                                    fp = ((x == 0) ? FP : 0);
                                    fn = 0;
                                    break;
                                case 0x6A:
                                    // Opcode:    BIT 5,D
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Flags:     *Z513*0-
                                    //            * PV as Z
                                    //            * Behaves much like r AND 2^n
                                    // Operation: D&{2^5}
                                    x = D & 0x20;
                                    fs = 0;
                                    fz = ((x == 0) ? FZ : 0);
                                    f5 = D & F5;
                                    fh = FH;
                                    f3 = D & F3;
                                    fp = ((x == 0) ? FP : 0);
                                    fn = 0;
                                    break;
                                case 0x6B:
                                    // Opcode:    BIT 5,E
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Flags:     *Z513*0-
                                    //            * PV as Z
                                    //            * Behaves much like r AND 2^n
                                    // Operation: E&{2^5}
                                    x = E & 0x20;
                                    fs = 0;
                                    fz = ((x == 0) ? FZ : 0);
                                    f5 = E & F5;
                                    fh = FH;
                                    f3 = E & F3;
                                    fp = ((x == 0) ? FP : 0);
                                    fn = 0;
                                    break;
                                case 0x6C:
                                    // Opcode:    BIT 5,H
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Flags:     *Z513*0-
                                    //            * PV as Z
                                    //            * Behaves much like r AND 2^n
                                    // Operation: H&{2^5}
                                    x = H & 0x20;
                                    fs = 0;
                                    fz = ((x == 0) ? FZ : 0);
                                    f5 = H & F5;
                                    fh = FH;
                                    f3 = H & F3;
                                    fp = ((x == 0) ? FP : 0);
                                    fn = 0;
                                    break;
                                case 0x6D:
                                    // Opcode:    BIT 5,L
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Flags:     *Z513*0-
                                    //            * PV as Z
                                    //            * Behaves much like r AND 2^n
                                    // Operation: L&{2^5}
                                    x = L & 0x20;
                                    fs = 0;
                                    fz = ((x == 0) ? FZ : 0);
                                    f5 = L & F5;
                                    fh = FH;
                                    f3 = L & F3;
                                    fp = ((x == 0) ? FP : 0);
                                    fn = 0;
                                    break;
                                case 0x6E:
                                    // Opcode:    BIT 5,(HL) 
                                    // TStates:   12
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    //            M2, 4 T States - Memory Read
                                    // MCycles2:  pc:4,pc+1:4,hl:3,hl:1
                                    // Flags:     *Z513*0-
                                    //            * PV as Z
                                    //            * Behaves much like r AND 2^n
                                    // Operation: [HL]&{2^5}
                                    y = PeekByte(HL);
                                    x = y & 0x20;
                                    fs = 0;
                                    fz = ((x == 0) ? FZ : 0);
                                    fh = FH;
                                    fp = ((x == 0) ? FP : 0);
                                    fn = 0;
                                    AddCycles(HL, 1);
                                    f5 = (WZ >> 8) & F5;
                                    f3 = (WZ >> 8) & F3;

                                    break;
                                case 0x6F:
                                    // Opcode:    BIT 5,A
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Flags:     *Z513*0-
                                    //            * PV as Z
                                    //            * Behaves much like r AND 2^n
                                    // Operation: A&{2^5}
                                    x = A & 0x20;
                                    fs = 0;
                                    fz = ((x == 0) ? FZ : 0);
                                    f5 = A & F5;
                                    fh = FH;
                                    f3 = A & F3;
                                    fp = ((x == 0) ? FP : 0);
                                    fn = 0;
                                    break;
                                case 0x70:
                                    // Opcode:    BIT 6,B
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Flags:     *Z513*0-
                                    //            * PV as Z
                                    //            * Behaves much like r AND 2^n
                                    // Operation: B&{2^6}
                                    x = B & 0x40;
                                    fs = 0;
                                    fz = ((x == 0) ? FZ : 0);
                                    f5 = B & F5;
                                    fh = FH;
                                    f3 = B & F3;
                                    fp = ((x == 0) ? FP : 0);
                                    fn = 0;
                                    break;
                                case 0x71:
                                    // Opcode:    BIT 6,C
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Flags:     *Z513*0-
                                    //            * PV as Z
                                    //            * Behaves much like r AND 2^n
                                    // Operation: C&{2^6}
                                    x = C & 0x40;
                                    fs = 0;
                                    fz = ((x == 0) ? FZ : 0);
                                    f5 = C & F5;
                                    fh = FH;
                                    f3 = C & F3;
                                    fp = ((x == 0) ? FP : 0);
                                    fn = 0;
                                    break;
                                case 0x72:
                                    // Opcode:    BIT 6,D
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Flags:     *Z513*0-
                                    //            * PV as Z
                                    //            * Behaves much like r AND 2^n
                                    // Operation: D&{2^6}
                                    x = D & 0x40;
                                    fs = 0;
                                    fz = ((x == 0) ? FZ : 0);
                                    f5 = D & F5;
                                    fh = FH;
                                    f3 = D & F3;
                                    fp = ((x == 0) ? FP : 0);
                                    fn = 0;
                                    break;
                                case 0x73:
                                    // Opcode:    BIT 6,E
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Flags:     *Z513*0-
                                    //            * PV as Z
                                    //            * Behaves much like r AND 2^n
                                    // Operation: E&{2^6}
                                    x = E & 0x40;
                                    fs = 0;
                                    fz = ((x == 0) ? FZ : 0);
                                    f5 = E & F5;
                                    fh = FH;
                                    f3 = E & F3;
                                    fp = ((x == 0) ? FP : 0);
                                    fn = 0;
                                    break;
                                case 0x74:
                                    // Opcode:    BIT 6,H
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Flags:     *Z513*0-
                                    //            * PV as Z
                                    //            * Behaves much like r AND 2^n
                                    // Operation: H&{2^6}
                                    x = H & 0x40;
                                    fs = 0;
                                    fz = ((x == 0) ? FZ : 0);
                                    f5 = H & F5;
                                    fh = FH;
                                    f3 = H & F3;
                                    fp = ((x == 0) ? FP : 0);
                                    fn = 0;
                                    break;
                                case 0x75:
                                    // Opcode:    BIT 6,L
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Flags:     *Z513*0-
                                    //            * PV as Z
                                    //            * Behaves much like r AND 2^n
                                    // Operation: L&{2^6}
                                    x = L & 0x40;
                                    fs = 0;
                                    fz = ((x == 0) ? FZ : 0);
                                    f5 = L & F5;
                                    fh = FH;
                                    f3 = L & F3;
                                    fp = ((x == 0) ? FP : 0);
                                    fn = 0;
                                    break;
                                case 0x76:
                                    // Opcode:    BIT 6,(HL) 
                                    // TStates:   12
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    //            M2, 4 T States - Memory Read
                                    // MCycles2:  pc:4,pc+1:4,hl:3,hl:1
                                    // Flags:     *Z513*0-
                                    //            * PV as Z
                                    //            * Behaves much like r AND 2^n
                                    // Operation: [HL]&{2^6}
                                    y = PeekByte(HL);
                                    x = y & 0x40;
                                    fs = 0;
                                    fz = ((x == 0) ? FZ : 0);
                                    fh = FH;
                                    fp = ((x == 0) ? FP : 0);
                                    fn = 0;
                                    AddCycles(HL, 1);
                                    f5 = (WZ >> 8) & F5;
                                    f3 = (WZ >> 8) & F3;

                                    break;
                                case 0x77:
                                    // Opcode:    BIT 6,A
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Flags:     *Z513*0-
                                    //            * PV as Z
                                    //            * Behaves much like r AND 2^n
                                    // Operation: A&{2^6}
                                    x = A & 0x40;
                                    fs = 0;
                                    fz = ((x == 0) ? FZ : 0);
                                    f5 = A & F5;
                                    fh = FH;
                                    f3 = A & F3;
                                    fp = ((x == 0) ? FP : 0);
                                    fn = 0;
                                    break;
                                case 0x78:
                                    // Opcode:    BIT 7,B
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Flags:     *Z513*0-
                                    //            * PV as Z
                                    //            * S = bit 7 of B
                                    //            * Behaves much like r AND 2^n
                                    // Operation: B&{2^7}
                                    x = B & 0x80;
                                    fs = (x == 0 ? 0 : FS);
                                    fz = ((x == 0) ? FZ : 0);
                                    f5 = B & F5;
                                    fh = FH;
                                    f3 = B & F3;
                                    fp = ((x == 0) ? FP : 0);
                                    fn = 0;
                                    break;
                                case 0x79:
                                    // Opcode:    BIT 7,C
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Flags:     *Z513*0-
                                    //            * PV as Z
                                    //            * S = bit 7 of C
                                    //            * Behaves much like r AND 2^n
                                    // Operation: C&{2^7}
                                    x = C & 0x80;
                                    fs = (x == 0 ? 0 : FS);
                                    fz = ((x == 0) ? FZ : 0);
                                    f5 = C & F5;
                                    fh = FH;
                                    f3 = C & F3;
                                    fp = ((x == 0) ? FP : 0);
                                    fn = 0;
                                    break;
                                case 0x7A:
                                    // Opcode:    BIT 7,D
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Flags:     *Z513*0-
                                    //            * PV as Z
                                    //            * S = bit 7 of D
                                    //            * Behaves much like r AND 2^n
                                    // Operation: D&{2^7}
                                    x = D & 0x80;
                                    fs = (x == 0 ? 0 : FS);
                                    fz = ((x == 0) ? FZ : 0);
                                    f5 = D & F5;
                                    fh = FH;
                                    f3 = D & F3;
                                    fp = ((x == 0) ? FP : 0);
                                    fn = 0;
                                    break;
                                case 0x7B:
                                    // Opcode:    BIT 7,E
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Flags:     *Z513*0-
                                    //            * PV as Z
                                    //            * S = bit 7 of E
                                    //            * Behaves much like r AND 2^n
                                    // Operation: E&{2^7}
                                    x = E & 0x80;
                                    fs = (x == 0 ? 0 : FS);
                                    fz = ((x == 0) ? FZ : 0);
                                    f5 = E & F5;
                                    fh = FH;
                                    f3 = E & F3;
                                    fp = ((x == 0) ? FP : 0);
                                    fn = 0;
                                    break;
                                case 0x7C:
                                    // Opcode:    BIT 7,H
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Flags:     *Z513*0-
                                    //            * PV as Z
                                    //            * S = bit 7 of H
                                    //            * Behaves much like r AND 2^n
                                    // Operation: H&{2^7}
                                    x = H & 0x80;
                                    fs = (x == 0 ? 0 : FS);
                                    fz = ((x == 0) ? FZ : 0);
                                    f5 = H & F5;
                                    fh = FH;
                                    f3 = H & F3;
                                    fp = ((x == 0) ? FP : 0);
                                    fn = 0;
                                    break;
                                case 0x7D:
                                    // Opcode:    BIT 7,L
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Flags:     *Z513*0-
                                    //            * PV as Z
                                    //            * S = bit 7 of L
                                    //            * Behaves much like r AND 2^n
                                    // Operation: L&{2^7}
                                    x = L & 0x80;
                                    fs = (x == 0 ? 0 : FS);
                                    fz = ((x == 0) ? FZ : 0);
                                    f5 = L & F5;
                                    fh = FH;
                                    f3 = L & F3;
                                    fp = ((x == 0) ? FP : 0);
                                    fn = 0;
                                    break;
                                case 0x7E:
                                    // Opcode:    BIT 7,(HL) 
                                    // TStates:   12
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    //            M2, 4 T States - Memory Read
                                    // MCycles2:  pc:4,pc+1:4,hl:3,hl:1
                                    // Flags:     *Z513*0-
                                    //            * PV as Z
                                    //            * S = bit 7 of (HL)
                                    //            * Behaves much like r AND 2^n
                                    // Operation: [HL]&{2^7}
                                    y = PeekByte(HL);
                                    x = y & 0x80;
                                    fs = (x == 0 ? 0 : FS);
                                    fz = ((x == 0) ? FZ : 0);
                                    fh = FH;
                                    fp = ((x == 0) ? FP : 0);
                                    fn = 0;
                                    AddCycles(HL, 1);
                                    f5 = (WZ >> 8) & F5;
                                    f3 = (WZ >> 8) & F3;

                                    break;
                                case 0x7F:
                                    // Opcode:    BIT 7,A
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Flags:     *Z513*0-
                                    //            * PV as Z
                                    //            * S = bit 7 of A
                                    //            * Behaves much like r AND 2^n
                                    // Operation: A&{2^7}
                                    x = A & 0x80;
                                    fs = (x == 0 ? 0 : FS);
                                    fz = ((x == 0) ? FZ : 0);
                                    f5 = A & F5;
                                    fh = FH;
                                    f3 = A & F3;
                                    fp = ((x == 0) ? FP : 0);
                                    fn = 0;
                                    break;
                                case 0x80:
                                    // Opcode:    RES 0,B
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Operation: B = B&{~2^0}
                                    B &= 0xFE;
                                    break;
                                case 0x81:
                                    // Opcode:    RES 0,C
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Operation: C = C&{~2^0}
                                    C &= 0xFE;
                                    break;
                                case 0x82:
                                    // Opcode:    RES 0,D
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Operation: D = D&{~2^0}
                                    D &= 0xFE;
                                    break;
                                case 0x83:
                                    // Opcode:    RES 0,E
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Operation: E = E&{~2^0}
                                    E &= 0xFE;
                                    break;
                                case 0x84:
                                    // Opcode:    RES 0,H
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Operation: H = H&{~2^0}
                                    H &= 0xFE;
                                    break;
                                case 0x85:
                                    // Opcode:    RES 0,L
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Operation: L = L&{~2^0}
                                    L &= 0xFE;
                                    break;
                                case 0x86:
                                    // Opcode:    RES 0,(HL) 
                                    // TStates:   15
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    //            M2, 4 T States - Memory Read
                                    //            M3, 3 T States - Memory Write
                                    // MCycles2:  pc:4,pc+1:4,hl:3,hl:1,hl(write):3
                                    // Operation: [HL] = [HL]&{~2^0}
                                    x = PeekByte(HL);
                                    AddCycles(HL, 1);
                                    x &= 0xFE;
                                    PokeByte(HL, x);
                                    break;
                                case 0x87:
                                    // Opcode:    RES 0,A
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Operation: A = A&{~2^0}
                                    A &= 0xFE;
                                    break;
                                case 0x88:
                                    // Opcode:    RES 1,B
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Operation: B = B&{~2^1}
                                    B &= 0xFD;
                                    break;
                                case 0x89:
                                    // Opcode:    RES 1,C
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Operation: C = C&{~2^1}
                                    C &= 0xFD;
                                    break;
                                case 0x8A:
                                    // Opcode:    RES 1,D
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Operation: D = D&{~2^1}
                                    D &= 0xFD;
                                    break;
                                case 0x8B:
                                    // Opcode:    RES 1,E
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Operation: E = E&{~2^1}
                                    E &= 0xFD;
                                    break;
                                case 0x8C:
                                    // Opcode:    RES 1,H
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Operation: H = H&{~2^1}
                                    H &= 0xFD;
                                    break;
                                case 0x8D:
                                    // Opcode:    RES 1,L
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Operation: L = L&{~2^1}
                                    L &= 0xFD;
                                    break;
                                case 0x8E:
                                    // Opcode:    RES 1,(HL) 
                                    // TStates:   15
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    //            M2, 4 T States - Memory Read
                                    //            M3, 3 T States - Memory Write
                                    // MCycles2:  pc:4,pc+1:4,hl:3,hl:1,hl(write):3
                                    // Operation: [HL] = [HL]&{~2^1}
                                    x = PeekByte(HL);
                                    AddCycles(HL, 1);
                                    x &= 0xFD;
                                    PokeByte(HL, x);
                                    break;
                                case 0x8F:
                                    // Opcode:    RES 1,A
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Operation: A = A&{~2^1}
                                    A &= 0xFD;
                                    break;
                                case 0x90:
                                    // Opcode:    RES 2,B
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Operation: B = B&{~2^2}
                                    B &= 0xFB;
                                    break;
                                case 0x91:
                                    // Opcode:    RES 2,C
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Operation: C = C&{~2^2}
                                    C &= 0xFB;
                                    break;
                                case 0x92:
                                    // Opcode:    RES 2,D
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Operation: D = D&{~2^2}
                                    D &= 0xFB;
                                    break;
                                case 0x93:
                                    // Opcode:    RES 2,E
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Operation: E = E&{~2^2}
                                    E &= 0xFB;
                                    break;
                                case 0x94:
                                    // Opcode:    RES 2,H
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Operation: H = H&{~2^2}
                                    H &= 0xFB;
                                    break;
                                case 0x95:
                                    // Opcode:    RES 2,L
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Operation: L = L&{~2^2}
                                    L &= 0xFB;
                                    break;
                                case 0x96:
                                    // Opcode:    RES 2,(HL) 
                                    // TStates:   15
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    //            M2, 4 T States - Memory Read
                                    //            M3, 3 T States - Memory Write
                                    // MCycles2:  pc:4,pc+1:4,hl:3,hl:1,hl(write):3
                                    // Operation: [HL] = [HL]&{~2^2}
                                    x = PeekByte(HL);
                                    AddCycles(HL, 1);
                                    x &= 0xFB;
                                    PokeByte(HL, x);
                                    break;
                                case 0x97:
                                    // Opcode:    RES 2,A
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Operation: A = A&{~2^2}
                                    A &= 0xFB;
                                    break;
                                case 0x98:
                                    // Opcode:    RES 3,B
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Operation: B = B&{~2^3}
                                    B &= 0xF7;
                                    break;
                                case 0x99:
                                    // Opcode:    RES 3,C
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Operation: C = C&{~2^3}
                                    C &= 0xF7;
                                    break;
                                case 0x9A:
                                    // Opcode:    RES 3,D
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Operation: D = D&{~2^3}
                                    D &= 0xF7;
                                    break;
                                case 0x9B:
                                    // Opcode:    RES 3,E
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Operation: E = E&{~2^3}
                                    E &= 0xF7;
                                    break;
                                case 0x9C:
                                    // Opcode:    RES 3,H
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Operation: H = H&{~2^3}
                                    H &= 0xF7;
                                    break;
                                case 0x9D:
                                    // Opcode:    RES 3,L
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Operation: L = L&{~2^3}
                                    L &= 0xF7;
                                    break;
                                case 0x9E:
                                    // Opcode:    RES 3,(HL) 
                                    // TStates:   15
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    //            M2, 4 T States - Memory Read
                                    //            M3, 3 T States - Memory Write
                                    // MCycles2:  pc:4,pc+1:4,hl:3,hl:1,hl(write):3
                                    // Operation: [HL] = [HL]&{~2^3}
                                    x = PeekByte(HL);
                                    AddCycles(HL, 1);
                                    x &= 0xF7;
                                    PokeByte(HL, x);
                                    break;
                                case 0x9F:
                                    // Opcode:    RES 3,A
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Operation: A = A&{~2^3}
                                    A &= 0xF7;
                                    break;
                                case 0xA0:
                                    // Opcode:    RES 4,B
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Operation: B = B&{~2^4}
                                    B &= 0xEF;
                                    break;
                                case 0xA1:
                                    // Opcode:    RES 4,C
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Operation: C = C&{~2^4}
                                    C &= 0xEF;
                                    break;
                                case 0xA2:
                                    // Opcode:    RES 4,D
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Operation: D = D&{~2^4}
                                    D &= 0xEF;
                                    break;
                                case 0xA3:
                                    // Opcode:    RES 4,E
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Operation: E = E&{~2^4}
                                    E &= 0xEF;
                                    break;
                                case 0xA4:
                                    // Opcode:    RES 4,H
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Operation: H = H&{~2^4}
                                    H &= 0xEF;
                                    break;
                                case 0xA5:
                                    // Opcode:    RES 4,L
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Operation: L = L&{~2^4}
                                    L &= 0xEF;
                                    break;
                                case 0xA6:
                                    // Opcode:    RES 4,(HL) 
                                    // TStates:   15
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    //            M2, 4 T States - Memory Read
                                    //            M3, 3 T States - Memory Write
                                    // MCycles2:  pc:4,pc+1:4,hl:3,hl:1,hl(write):3
                                    // Operation: [HL] = [HL]&{~2^4}
                                    x = PeekByte(HL);
                                    AddCycles(HL, 1);
                                    x &= 0xEF;
                                    PokeByte(HL, x);
                                    break;
                                case 0xA7:
                                    // Opcode:    RES 4,A
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Operation: A = A&{~2^4}
                                    A &= 0xEF;
                                    break;
                                case 0xA8:
                                    // Opcode:    RES 5,B
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Operation: B = B&{~2^5}
                                    B &= 0xDF;
                                    break;
                                case 0xA9:
                                    // Opcode:    RES 5,C
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Operation: C = C&{~2^5}
                                    C &= 0xDF;
                                    break;
                                case 0xAA:
                                    // Opcode:    RES 5,D
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Operation: D = D&{~2^5}
                                    D &= 0xDF;
                                    break;
                                case 0xAB:
                                    // Opcode:    RES 5,E
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Operation: E = E&{~2^5}
                                    E &= 0xDF;
                                    break;
                                case 0xAC:
                                    // Opcode:    RES 5,H
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Operation: H = H&{~2^5}
                                    H &= 0xDF;
                                    break;
                                case 0xAD:
                                    // Opcode:    RES 5,L
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Operation: L = L&{~2^5}
                                    L &= 0xDF;
                                    break;
                                case 0xAE:
                                    // Opcode:    RES 5,(HL) 
                                    // TStates:   15
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    //            M2, 4 T States - Memory Read
                                    //            M3, 3 T States - Memory Write
                                    // MCycles2:  pc:4,pc+1:4,hl:3,hl:1,hl(write):3
                                    // Operation: [HL] = [HL]&{~2^5}
                                    x = PeekByte(HL);
                                    AddCycles(HL, 1);
                                    x &= 0xDF;
                                    PokeByte(HL, x);
                                    break;
                                case 0xAF:
                                    // Opcode:    RES 5,A
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Operation: A = A&{~2^5}
                                    A &= 0xDF;
                                    break;
                                case 0xB0:
                                    // Opcode:    RES 6,B
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Operation: B = B&{~2^6}
                                    B &= 0xBF;
                                    break;
                                case 0xB1:
                                    // Opcode:    RES 6,C
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Operation: C = C&{~2^6}
                                    C &= 0xBF;
                                    break;
                                case 0xB2:
                                    // Opcode:    RES 6,D
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Operation: D = D&{~2^6}
                                    D &= 0xBF;
                                    break;
                                case 0xB3:
                                    // Opcode:    RES 6,E
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Operation: E = E&{~2^6}
                                    E &= 0xBF;
                                    break;
                                case 0xB4:
                                    // Opcode:    RES 6,H
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Operation: H = H&{~2^6}
                                    H &= 0xBF;
                                    break;
                                case 0xB5:
                                    // Opcode:    RES 6,L
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Operation: L = L&{~2^6}
                                    L &= 0xBF;
                                    break;
                                case 0xB6:
                                    // Opcode:    RES 6,(HL) 
                                    // TStates:   15
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    //            M2, 4 T States - Memory Read
                                    //            M3, 3 T States - Memory Write
                                    // MCycles2:  pc:4,pc+1:4,hl:3,hl:1,hl(write):3
                                    // Operation: [HL] = [HL]&{~2^6}
                                    x = PeekByte(HL);
                                    AddCycles(HL, 1);
                                    x &= 0xBF;
                                    PokeByte(HL, x);
                                    break;
                                case 0xB7:
                                    // Opcode:    RES 6,A
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Operation: A = A&{~2^6}
                                    A &= 0xBF;
                                    break;
                                case 0xB8:
                                    // Opcode:    RES 7,B
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Operation: B = B&{~2^7}
                                    B &= 0x7F;
                                    break;
                                case 0xB9:
                                    // Opcode:    RES 7,C
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Operation: C = C&{~2^7}
                                    C &= 0x7F;
                                    break;
                                case 0xBA:
                                    // Opcode:    RES 7,D
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Operation: D = D&{~2^7}
                                    D &= 0x7F;
                                    break;
                                case 0xBB:
                                    // Opcode:    RES 7,E
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Operation: E = E&{~2^7}
                                    E &= 0x7F;
                                    break;
                                case 0xBC:
                                    // Opcode:    RES 7,H
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Operation: H = H&{~2^7}
                                    H &= 0x7F;
                                    break;
                                case 0xBD:
                                    // Opcode:    RES 7,L
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Operation: L = L&{~2^7}
                                    L &= 0x7F;
                                    break;
                                case 0xBE:
                                    // Opcode:    RES 7,(HL) 
                                    // TStates:   15
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    //            M2, 4 T States - Memory Read
                                    //            M3, 3 T States - Memory Write
                                    // MCycles2:  pc:4,pc+1:4,hl:3,hl:1,hl(write):3
                                    // Operation: [HL] = [HL]&{~2^7}
                                    x = PeekByte(HL);
                                    AddCycles(HL, 1);
                                    x &= 0x7F;
                                    PokeByte(HL, x);
                                    break;
                                case 0xBF:
                                    // Opcode:    RES 7,A
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Operation: A = A&{~2^7}
                                    A &= 0x7F;
                                    break;
                                case 0xC0:
                                    // Opcode:    SET 0,B
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Operation: B = Bv{2^0}
                                    B |= 0x01;
                                    break;
                                case 0xC1:
                                    // Opcode:    SET 0,C
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Operation: C = Cv{2^0}
                                    C |= 0x01;
                                    break;
                                case 0xC2:
                                    // Opcode:    SET 0,D
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Operation: D = Dv{2^0}
                                    D |= 0x01;
                                    break;
                                case 0xC3:
                                    // Opcode:    SET 0,E
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Operation: E = Ev{2^0}
                                    E |= 0x01;
                                    break;
                                case 0xC4:
                                    // Opcode:    SET 0,H
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Operation: H = Hv{2^0}
                                    H |= 0x01;
                                    break;
                                case 0xC5:
                                    // Opcode:    SET 0,L
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Operation: L = Lv{2^0}
                                    L |= 0x01;
                                    break;
                                case 0xC6:
                                    // Opcode:    SET 0,(HL) 
                                    // TStates:   15
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    //            M2, 4 T States - Memory Read
                                    //            M3, 3 T States - Memory Write
                                    // MCycles2:  pc:4,pc+1:4,hl:3,hl:1,hl(write):3
                                    // Operation: [HL] = [HL]v{2^0}
                                    x = PeekByte(HL);
                                    AddCycles(HL, 1);
                                    x |= 0x01;
                                    PokeByte(HL, x);
                                    break;
                                case 0xC7:
                                    // Opcode:    SET 0,A
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Operation: A = Av{2^0}
                                    A |= 0x01;
                                    break;
                                case 0xC8:
                                    // Opcode:    SET 1,B
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Operation: B = Bv{2^1}
                                    B |= 0x02;
                                    break;
                                case 0xC9:
                                    // Opcode:    SET 1,C
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Operation: C = Cv{2^1}
                                    C |= 0x02;
                                    break;
                                case 0xCA:
                                    // Opcode:    SET 1,D
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Operation: D = Dv{2^1}
                                    D |= 0x02;
                                    break;
                                case 0xCB:
                                    // Opcode:    SET 1,E
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Operation: E = Ev{2^1}
                                    E |= 0x02;
                                    break;
                                case 0xCC:
                                    // Opcode:    SET 1,H
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Operation: H = Hv{2^1}
                                    H |= 0x02;
                                    break;
                                case 0xCD:
                                    // Opcode:    SET 1,L
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Operation: L = Lv{2^1}
                                    L |= 0x02;
                                    break;
                                case 0xCE:
                                    // Opcode:    SET 1,(HL) 
                                    // TStates:   15
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    //            M2, 4 T States - Memory Read
                                    //            M3, 3 T States - Memory Write
                                    // MCycles2:  pc:4,pc+1:4,hl:3,hl:1,hl(write):3
                                    // Operation: [HL] = [HL]v{2^1}
                                    x = PeekByte(HL);
                                    AddCycles(HL, 1);
                                    x |= 0x02;
                                    PokeByte(HL, x);
                                    break;
                                case 0xCF:
                                    // Opcode:    SET 1,A
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Operation: A = Av{2^1}
                                    A |= 0x02;
                                    break;
                                case 0xD0:
                                    // Opcode:    SET 2,B
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Operation: B = Bv{2^2}
                                    B |= 0x04;
                                    break;
                                case 0xD1:
                                    // Opcode:    SET 2,C
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Operation: C = Cv{2^2}
                                    C |= 0x04;
                                    break;
                                case 0xD2:
                                    // Opcode:    SET 2,D
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Operation: D = Dv{2^2}
                                    D |= 0x04;
                                    break;
                                case 0xD3:
                                    // Opcode:    SET 2,E
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Operation: E = Ev{2^2}
                                    E |= 0x04;
                                    break;
                                case 0xD4:
                                    // Opcode:    SET 2,H
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Operation: H = Hv{2^2}
                                    H |= 0x04;
                                    break;
                                case 0xD5:
                                    // Opcode:    SET 2,L
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Operation: L = Lv{2^2}
                                    L |= 0x04;
                                    break;
                                case 0xD6:
                                    // Opcode:    SET 2,(HL) 
                                    // TStates:   15
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    //            M2, 4 T States - Memory Read
                                    //            M3, 3 T States - Memory Write
                                    // MCycles2:  pc:4,pc+1:4,hl:3,hl:1,hl(write):3
                                    // Operation: [HL] = [HL]v{2^2}
                                    x = PeekByte(HL);
                                    AddCycles(HL, 1);
                                    x |= 0x04;
                                    PokeByte(HL, x);
                                    break;
                                case 0xD7:
                                    // Opcode:    SET 2,A
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Operation: A = Av{2^2}
                                    A |= 0x04;
                                    break;
                                case 0xD8:
                                    // Opcode:    SET 3,B
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Operation: B = Bv{2^3}
                                    B |= 0x08;
                                    break;
                                case 0xD9:
                                    // Opcode:    SET 3,C
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Operation: C = Cv{2^3}
                                    C |= 0x08;
                                    break;
                                case 0xDA:
                                    // Opcode:    SET 3,D
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Operation: D = Dv{2^3}
                                    D |= 0x08;
                                    break;
                                case 0xDB:
                                    // Opcode:    SET 3,E
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Operation: E = Ev{2^3}
                                    E |= 0x08;
                                    break;
                                case 0xDC:
                                    // Opcode:    SET 3,H
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Operation: H = Hv{2^3}
                                    H |= 0x08;
                                    break;
                                case 0xDD:
                                    // Opcode:    SET 3,L
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Operation: L = Lv{2^3}
                                    L |= 0x08;
                                    break;
                                case 0xDE:
                                    // Opcode:    SET 3,(HL) 
                                    // TStates:   15
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    //            M2, 4 T States - Memory Read
                                    //            M3, 3 T States - Memory Write
                                    // MCycles2:  pc:4,pc+1:4,hl:3,hl:1,hl(write):3
                                    // Operation: [HL] = [HL]v{2^3}
                                    x = PeekByte(HL);
                                    AddCycles(HL, 1);
                                    x |= 0x08;
                                    PokeByte(HL, x);
                                    break;
                                case 0xDF:
                                    // Opcode:    SET 3,A
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Operation: A = Av{2^3}
                                    A |= 0x08;
                                    break;
                                case 0xE0:
                                    // Opcode:    SET 4,B
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Operation: B = Bv{2^4}
                                    B |= 0x10;
                                    break;
                                case 0xE1:
                                    // Opcode:    SET 4,C
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Operation: C = Cv{2^4}
                                    C |= 0x10;
                                    break;
                                case 0xE2:
                                    // Opcode:    SET 4,D
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Operation: D = Dv{2^4}
                                    D |= 0x10;
                                    break;
                                case 0xE3:
                                    // Opcode:    SET 4,E
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Operation: E = Ev{2^4}
                                    E |= 0x10;
                                    break;
                                case 0xE4:
                                    // Opcode:    SET 4,H
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Operation: H = Hv{2^4}
                                    H |= 0x10;
                                    break;
                                case 0xE5:
                                    // Opcode:    SET 4,L
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Operation: L = Lv{2^4}
                                    L |= 0x10;
                                    break;
                                case 0xE6:
                                    // Opcode:    SET 4,(HL) 
                                    // TStates:   15
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    //            M2, 4 T States - Memory Read
                                    //            M3, 3 T States - Memory Write
                                    // MCycles2:  pc:4,pc+1:4,hl:3,hl:1,hl(write):3
                                    // Operation: [HL] = [HL]v{2^4}
                                    x = PeekByte(HL);
                                    AddCycles(HL, 1);
                                    x |= 0x10;
                                    PokeByte(HL, x);
                                    break;
                                case 0xE7:
                                    // Opcode:    SET 4,A
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Operation: A = Av{2^4}
                                    A |= 0x10;
                                    break;
                                case 0xE8:
                                    // Opcode:    SET 5,B
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Operation: B = Bv{2^5}
                                    B |= 0x20;
                                    break;
                                case 0xE9:
                                    // Opcode:    SET 5,C
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Operation: C = Cv{2^5}
                                    C |= 0x20;
                                    break;
                                case 0xEA:
                                    // Opcode:    SET 5,D
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Operation: D = Dv{2^5}
                                    D |= 0x20;
                                    break;
                                case 0xEB:
                                    // Opcode:    SET 5,E
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Operation: E = Ev{2^5}
                                    E |= 0x20;
                                    break;
                                case 0xEC:
                                    // Opcode:    SET 5,H
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Operation: H = Hv{2^5}
                                    H |= 0x20;
                                    break;
                                case 0xED:
                                    // Opcode:    SET 5,L
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Operation: L = Lv{2^5}
                                    L |= 0x20;
                                    break;
                                case 0xEE:
                                    // Opcode:    SET 5,(HL) 
                                    // TStates:   15
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    //            M2, 4 T States - Memory Read
                                    //            M3, 3 T States - Memory Write
                                    // MCycles2:  pc:4,pc+1:4,hl:3,hl:1,hl(write):3
                                    // Operation: [HL] = [HL]v{2^5}
                                    x = PeekByte(HL);
                                    AddCycles(HL, 1);
                                    x |= 0x20;
                                    PokeByte(HL, x);
                                    break;
                                case 0xEF:
                                    // Opcode:    SET 5,A
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Operation: A = Av{2^5}
                                    A |= 0x20;
                                    break;
                                case 0xF0:
                                    // Opcode:    SET 6,B
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Operation: B = Bv{2^6}
                                    B |= 0x40;
                                    break;
                                case 0xF1:
                                    // Opcode:    SET 6,C
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Operation: C = Cv{2^6}
                                    C |= 0x40;
                                    break;
                                case 0xF2:
                                    // Opcode:    SET 6,D
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Operation: D = Dv{2^6}
                                    D |= 0x40;
                                    break;
                                case 0xF3:
                                    // Opcode:    SET 6,E
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Operation: E = Ev{2^6}
                                    E |= 0x40;
                                    break;
                                case 0xF4:
                                    // Opcode:    SET 6,H
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Operation: H = Hv{2^6}
                                    H |= 0x40;
                                    break;
                                case 0xF5:
                                    // Opcode:    SET 6,L
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Operation: L = Lv{2^6}
                                    L |= 0x40;
                                    break;
                                case 0xF6:
                                    // Opcode:    SET 6,(HL) 
                                    // TStates:   15
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    //            M2, 4 T States - Memory Read
                                    //            M3, 3 T States - Memory Write
                                    // MCycles2:  pc:4,pc+1:4,hl:3,hl:1,hl(write):3
                                    // Operation: [HL] = [HL]v{2^6}
                                    x = PeekByte(HL);
                                    AddCycles(HL, 1);
                                    x |= 0x40;
                                    PokeByte(HL, x);
                                    break;
                                case 0xF7:
                                    // Opcode:    SET 6,A
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Operation: A = Av{2^6}
                                    A |= 0x40;
                                    break;
                                case 0xF8:
                                    // Opcode:    SET 7,B
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Operation: B = Bv{2^7}
                                    B |= 0x80;
                                    break;
                                case 0xF9:
                                    // Opcode:    SET 7,C
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Operation: C = Cv{2^7}
                                    C |= 0x80;
                                    break;
                                case 0xFA:
                                    // Opcode:    SET 7,D
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Operation: D = Dv{2^7}
                                    D |= 0x80;
                                    break;
                                case 0xFB:
                                    // Opcode:    SET 7,E
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Operation: E = Ev{2^7}
                                    E |= 0x80;
                                    break;
                                case 0xFC:
                                    // Opcode:    SET 7,H
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Operation: H = Hv{2^7}
                                    H |= 0x80;
                                    break;
                                case 0xFD:
                                    // Opcode:    SET 7,L
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Operation: L = Lv{2^7}
                                    L |= 0x80;
                                    break;
                                case 0xFE:
                                    // Opcode:    SET 7,(HL) 
                                    // TStates:   15
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    //            M2, 4 T States - Memory Read
                                    //            M3, 3 T States - Memory Write
                                    // MCycles2:  pc:4,pc+1:4,hl:3,hl:1,hl(write):3
                                    // Operation: [HL] = [HL]v{2^7}
                                    x = PeekByte(HL);
                                    AddCycles(HL, 1);
                                    x |= 0x80;
                                    PokeByte(HL, x);
                                    break;
                                case 0xFF:
                                    // Opcode:    SET 7,A
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Operation: A = Av{2^7}
                                    A |= 0x80;
                                    break;
                            }
                        }
                        break;
                    #endregion  AfterCB
                    case 0xCC:
                        // Opcode:    CALL Z,$aa
                        // Attributes:Branch, Call, Conditional
                        // TStates:   10 / 17
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        //            M1, 3 T States - Operand Data Read of Low Byte
                        //            M2, 4 T States - Operand Data Read of High Byte
                        //            If Condition
                        //            SP--
                        //            M3, 3 T States - Stack Write of High Byte
                        //            SP--
                        //            M4, 3 T States - Stack Write of Low byte
                        // MCycles2:  pc:4,pc+1:3,pc+2:3,[pc+2:1,sp-1:3,sp-2:3]
                        // MemPtr:    MEMPTR = addr (independantly on condition satisfied or not)
                        // Operation: If Z then [SP- = 2] = PC,PC = NN
                        WZ = (PeekByte(PC++) + (PeekByte(PC++) << 8));
                        if (fz != 0)
                        {
                            AddCycles(PC + 1, 1);
                            // Pass control to the Virtual function Call
                            Call(Opcode, PC);
                            PokeByte(--SP, PC >> 8);
                            PokeByte(--SP, PC & 0xff);
                            PC = WZ;
                        }
                        break;
                    case 0xCD:
                        // Opcode:    CALL $aa
                        // Attributes:Branch, Call
                        // TStates:   17
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        //            M1, 3 T States - Operand Data Read of Low Byte
                        //            M2, 4 T States - Operand Data Read of High Byte
                        //            SP--
                        //            M3, 3 T States - Stack Write of High Byte
                        //            SP--
                        //            M4, 3 T States - Stack Write of Low byte
                        // MCycles2:  pc:4,pc+1:3,pc+2:3,[pc+2:1,sp-1:3,sp-2:3]
                        // MemPtr:    MEMPTR = addr
                        // Operation: SP- = 2,[SP+1,SP] = PC,PC = NN
                        if (PC == 0x0803) LoadBlockBegin();
                        WZ = (PeekByte(PC++) + (PeekByte(PC++) << 8));
                        AddCycles(PC + 1, 1);
                        // Pass control to the Virtual function Call
                        Call(Opcode, PC);
                        PokeByte(--SP, PC >> 8);
                        PokeByte(--SP, PC & 0xff);
                        PC = WZ;

                        break;
                    case 0xCE:
                        // Opcode:    ADC A,$b
                        // Attributes:Byte, Direct
                        // TStates:   7
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        //            M1, 3 T States - Operand Data Read
                        // MCycles2:  pc:4,pc+1:3
                        // Flags:     SZ5H3VNC
                        // Operation: A = A+N+CY
                        y = PeekByte(PC++);
                        x = (A + y + fc) & 0xff;
                        fs = x & FS;
                        fz = (x & 0xff) == 0 ? FZ : 0;
                        f5 = x & F5;
                        fh = ((((A & 0x0f) + (y & 0x0f)) + fc) & 0x10);
                        f3 = x & F3;
                        fp = (((A ^ ~y) & (A ^ x)) & 0x80) != 0 ? FV : 0;
                        fn = 0;
                        fc = (A + y + fc) > 0xff ? FC : 0;
                        A = x;
                        break;
                    case 0xCF:
                        // Opcode:    RST 08H
                        // Attributes:Restart
                        // TStates:   11
                        // MCycles:   M0, 5 T States - Op Code Fetch
                        //            M1, 3 T States - Stack Write of High Byte
                        //            M2, 3 T States - Stack Write of Low byte
                        // MCycles2:  pc:5,sp-1:3,sp-2:3
                        // MemPtr:    MEMPTR = addr
                        // Operation: -SP,-SP,[SP+1,SP] = PC,PC = 08
                        WZ = 0x08;
                        AddCycles(IR, 1);
                        // Pass control to the Virtual function Restart
                        Restart(Opcode, PC);
                        PokeByte(--SP, PC >> 8);
                        PokeByte(--SP, PC & 0xff);
                        PC = WZ;
                        break;
                    case 0xD0:
                        // Opcode:    RET NC
                        // Attributes:Conditional, Return
                        // TStates:   5 / 11
                        // MCycles:   M0, 5 T States - Op Code Fetch
                        //            If Condition
                        //            M1, 3 T States - Stack Read of Low Byte
                        //            M2, 3 T States - Stack Read of High Byte
                        // MCycles2:  pc:5,[sp:3,sp+1:3]
                        // MemPtr:    MEMPTR = addr
                        // Operation: If !CY then PC = [SP,SP+1],SP+ = 2
                        AddCycles(IR, 1);
                        if (fc == 0)
                        {
                            WZ = (PeekByte(SP++) + (PeekByte(SP++) << 8));
                            PC = WZ;
                            // Pass control to the Virtual function Return
                            Return(Opcode, PreExecutePC);
                        }
                        break;
                    case 0xD1:
                        // Opcode:    POP DE
                        // TStates:   10
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        //            M1, 3 T States - Stack Read of High Byte
                        //            M2, 3 T States - Stack Read of Low Byte
                        // MCycles2:  pc:4,sp:3,sp+1:3
                        // Operation: E = [SP],SP+,D = [SP],SP+
                        DE = (PeekByte(SP++) + (PeekByte(SP++) << 8));
                        break;
                    case 0xD2:
                        // Opcode:    JP NC,$aa
                        // Attributes:Branch, Conditional
                        // TStates:   10
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        //            M1, 3 T States - Operand Data Read of Low Byte
                        //            M2, 3 T States - Operand Data Read of High Byte
                        // MCycles2:  pc:4,pc+1:3,pc+2:3
                        // MemPtr:    MEMPTR = addr (independantly on condition satisfied or not)
                        // Operation: If !CY then PC = NN
                        WZ = (PeekByte(PC++) + (PeekByte(PC++) << 8));
                        if (fc == 0)
                        {
                            PC = WZ;
                            // Pass control to the Virtual function Jump
                            Jump(Opcode, PreExecutePC);
                        }
                        break;
                    case 0xD3:
                        // Opcode:    OUT ($b),A
                        // Attributes:Call, Port, Write
                        // TStates:   11
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        //            M1, 3 T States - Operand Data Read
                        //            M2, PW
                        // MCycles2:  pc:4,pc+1:3,IO
                        // MemPtr:    MEMPTR_low = (port + 1) & #FF,  MEMPTR_hi = A, Note for *BM1: MEMPTR_low = (port + 1) & #FF,  MEMPTR_hi = 0
                        // Operation: [N] = A
                        x = PeekByte(PC);
                        Out(x | (A << 8), A);
                        WZ = (A << 8) + ((x + 1) & 0xff);
                        PC++;
                        break;
                    case 0xD4:
                        // Opcode:    CALL NC,$aa
                        // Attributes:Branch, Call, Conditional
                        // TStates:   10 / 17
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        //            M1, 3 T States - Operand Data Read of Low Byte
                        //            M2, 4 T States - Operand Data Read of High Byte
                        //            If Condition
                        //            SP--
                        //            M3, 3 T States - Stack Write of High Byte
                        //            SP--
                        //            M4, 3 T States - Stack Write of Low byte
                        // MCycles2:  pc:4,pc+1:3,pc+2:3,[pc+2:1,sp-1:3,sp-2:3]
                        // MemPtr:    MEMPTR = addr (independantly on condition satisfied or not)
                        // Operation: If !CY then [SP- = 2] = PC,PC = NN
                        WZ = (PeekByte(PC++) + (PeekByte(PC++) << 8));
                        if (fc == 0)
                        {
                            AddCycles(PC + 1, 1);
                            // Pass control to the Virtual function Call
                            Call(Opcode, PC);
                            PokeByte(--SP, PC >> 8);
                            PokeByte(--SP, PC & 0xff);
                            PC = WZ;
                        }
                        break;
                    case 0xD5:
                        // Opcode:    PUSH DE
                        // TStates:   11
                        // MCycles:   M0, 5 T States - Op Code Fetch
                        //            M1, 3 T States - Stack Write of High Byte
                        //            M2, 3 T States - Stack Write of Low byte
                        // MCycles2:  pc:5,sp-1:3,sp-2:3
                        // Operation: -SP,[SP] = D,-SP,[SP] = E
                        {
                            AddCycles(IR, 1);
                            PokeByte(--SP, DE >> 8);
                            PokeByte(--SP, DE & 0xff);
                        }
                        break;
                    case 0xD6:
                        // Opcode:    SUB $b
                        // Attributes:Byte, Direct
                        // TStates:   7
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        //            M1, 3 T States - Operand Data Read
                        // MCycles2:  pc:4,pc+1:3
                        // Flags:     SZ5H3VNC
                        // Operation: A = A-N
                        y = PeekByte(PC++);
                        x = (A - y) & 0xff;
                        fs = x & FS;
                        fz = (x & 0xff) == 0 ? FZ : 0;
                        f5 = x & F5;
                        fh = (((A & 0x0f) - (y & 0x0f)) & 0x10) != 0 ? FH : 0;
                        f3 = x & F3;
                        fp = (((A ^ y) & (A ^ x)) & 0x80) != 0 ? FV : 0;
                        fn = FN;
                        fc = ((A - y) & 0x100) != 0 ? FC : 0;
                        A = x;
                        break;
                    case 0xD7:
                        // Opcode:    RST 10H
                        // Attributes:Restart
                        // TStates:   11
                        // MCycles:   M0, 5 T States - Op Code Fetch
                        //            M1, 3 T States - Stack Write of High Byte
                        //            M2, 3 T States - Stack Write of Low byte
                        // MCycles2:  pc:5,sp-1:3,sp-2:3
                        // MemPtr:    MEMPTR = addr
                        // Operation: -SP,-SP,[SP+1,SP] = PC,PC = 10
                        WZ = 0x10;
                        AddCycles(IR, 1);
                        // Pass control to the Virtual function Restart
                        Restart(Opcode, PC);
                        PokeByte(--SP, PC >> 8);
                        PokeByte(--SP, PC & 0xff);
                        PC = WZ;
                        break;
                    case 0xD8:
                        // Opcode:    RET C
                        // Attributes:Conditional, Return
                        // TStates:   5 / 11
                        // MCycles:   M0, 5 T States - Op Code Fetch
                        //            If Condition
                        //            M1, 3 T States - Stack Read of Low Byte
                        //            M2, 3 T States - Stack Read of High Byte
                        // MCycles2:  pc:5,[sp:3,sp+1:3]
                        // MemPtr:    MEMPTR = addr
                        // Operation: If CY then PC = [SP,SP+1],SP+ = 2
                        AddCycles(IR, 1);
                        if (fc != 0)
                        {
                            if (PC == 0x806) LoadBlockComplete();
                            WZ = (PeekByte(SP++) + (PeekByte(SP++) << 8));
                            PC = WZ;
                            // Pass control to the Virtual function Return
                            Return(Opcode, PreExecutePC);
                        }
                        break;
                    case 0xD9:
                        // Opcode:    EXX
                        // TStates:   4
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        // MCycles2:  pc:4
                        // Operation: BC<->BC',DE<->DE',HL<->HL'
                        x = BC;
                        BC = BC_;
                        BC_ = x;
                        x = DE;
                        DE = DE_;
                        DE_ = x;
                        x = HL;
                        HL = HL_;
                        HL_ = x;
                        break;
                    case 0xDA:
                        // Opcode:    JP C,$aa
                        // Attributes:Branch, Conditional
                        // TStates:   10
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        //            M1, 3 T States - Operand Data Read of Low Byte
                        //            M2, 3 T States - Operand Data Read of High Byte
                        // MCycles2:  pc:4,pc+1:3,pc+2:3
                        // MemPtr:    MEMPTR = addr (independantly on condition satisfied or not)
                        // Operation: If CY then PC = NN
                        WZ = (PeekByte(PC++) + (PeekByte(PC++) << 8));
                        if (fc != 0)
                        {
                            PC = WZ;
                            // Pass control to the Virtual function Jump
                            Jump(Opcode, PreExecutePC);
                        }
                        break;
                    case 0xDB:
                        // Opcode:    IN A,($b) 
                        // Attributes:Port, Read
                        // TStates:   11
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        //            M1, 3 T States - Operand Data Read
                        //            M2, PR
                        // MCycles2:  pc:4,pc+1:3,IO
                        // MemPtr:    MEMPTR = (A_before_operation << 8) + port + 1
                        // Operation: A = [N]
                        x = PeekByte(PC);
                        WZ = (A << 8) + x + 1;
                        A = In((A << 8) | x);
                        PC++;
                        break;
                    case 0xDC:
                        // Opcode:    CALL C,$aa
                        // Attributes:Branch, Call, Conditional
                        // TStates:   10 / 17
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        //            M1, 3 T States - Operand Data Read of Low Byte
                        //            M2, 4 T States - Operand Data Read of High Byte
                        //            If Condition
                        //            SP--
                        //            M3, 3 T States - Stack Write of High Byte
                        //            SP--
                        //            M4, 3 T States - Stack Write of Low byte
                        // MCycles2:  pc:4,pc+1:3,pc+2:3,[pc+2:1,sp-1:3,sp-2:3]
                        // MemPtr:    MEMPTR = addr (independantly on condition satisfied or not)
                        // Operation: If CY then [SP- = 2] = PC,PC = NN
                        WZ = (PeekByte(PC++) + (PeekByte(PC++) << 8));
                        if (fc != 0)
                        {
                            AddCycles(PC + 1, 1);
                            // Pass control to the Virtual function Call
                            Call(Opcode, PC);
                            PokeByte(--SP, PC >> 8);
                            PokeByte(--SP, PC & 0xff);
                            PC = WZ;
                        }
                        break;
                    #region  AfterDD
                    case 0xDD:
                        {
                            Opcode = FetchOpcode();
                            switch (Opcode)
                            {
                                case 0x09:
                                    // Opcode:    ADD IX,BC
                                    // TStates:   15
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    //            M2, 4 T States - Internal CPU Operation
                                    //            M3, 3 T States - Internal CPU Operation
                                    // MCycles2:  pc:4,pc+1:11
                                    // Flags:     --***-0C
                                    //            * F5 H F3 from higher bytes addition
                                    // Operation: IX=IX+BC
                                    AddCycles(IR, 4);
                                    AddCycles(IR, 3);
                                    WZ = IX + 1;
                                    x = IX + BC;
                                    f5 = (x >> 8) & F5;
                                    fh = (((IX & 0xfff) + (BC & 0xfff)) & 0x1000) != 0 ? FH : 0;
                                    f3 = (x >> 8) & F3;
                                    fn = 0;
                                    fc = (x & 0x10000) != 0 ? FC : 0;
                                    IX = x;
                                    break;
                                case 0x19:
                                    // Opcode:    ADD IX,DE
                                    // TStates:   15
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    //            M2, 4 T States - Internal CPU Operation
                                    //            M3, 3 T States - Internal CPU Operation
                                    // MCycles2:  pc:4,pc+1:11
                                    // Flags:     --***-0C
                                    //            * F5 H F3 from higher bytes addition
                                    // Operation: IX=IX+DE
                                    AddCycles(IR, 4);
                                    AddCycles(IR, 3);
                                    WZ = IX + 1;
                                    x = IX + DE;
                                    f5 = (x >> 8) & F5;
                                    fh = (((IX & 0xfff) + (DE & 0xfff)) & 0x1000) != 0 ? FH : 0;
                                    f3 = (x >> 8) & F3;
                                    fn = 0;
                                    fc = (x & 0x10000) != 0 ? FC : 0;
                                    IX = x;
                                    break;
                                case 0x21:
                                    // Opcode:    LD IX,$nn
                                    // Attributes:Word, Direct
                                    // TStates:   14
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    //            M2, 3 T States - Operand Data Read of Low Byte
                                    //            M3, 3 T States - Operand Data Read of High Byte
                                    // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+2:3
                                    // Operation: IX=NN
                                    IX = (PeekByte(PC++) | (PeekByte(PC++) << 8));
                                    break;
                                case 0x22:
                                    // Opcode:    LD ($nn),IX
                                    // Attributes:Indirect, Word
                                    // TStates:   20
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    //            M2, 3 T States - Operand Data Read of Low Byte
                                    //            M3, 3 T States - Operand Data Read of High Byte
                                    //            M4, 3 T States - Memory Write of Low Byte
                                    //            M5, 3 T States - Memory Write of High Byte
                                    // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,nn:3,nn+1:3
                                    // MemPtr:    MEMPTR = addr + 1
                                    // Operation: [NN,NN+1]=IX
                                    WZ = (PeekByte(PC++) | (PeekByte(PC++) << 8));
                                    PokeByte(WZ++, IXL);
                                    PokeByte(WZ, IXH);
                                    break;
                                case 0x23:
                                    // Opcode:    INC IX
                                    // TStates:   10
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 6 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:6
                                    // Operation: IX=IX+1
                                    AddCycles(IR, 2);
                                    IX++;
                                    break;
                                case 0x24:
                                    // Opcode:    INC IXH (Undocumented)
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1|4
                                    // Flags:     SZ5H3VN-
                                    // Operation: IXH=IXH+1
                                    x = (IXH + 1) & 0xff;
                                    fs = x & FS;
                                    fz = (x & 0xff) == 0 ? FZ : 0;
                                    f5 = x & F5;
                                    fh = ((IXH & 0x0f) + 1) & 0x10;
                                    f3 = x & F3;
                                    fp = (IXH == 0x7f) ? FV : 0;
                                    fn = 0;
                                    IXH = x;

                                    break;
                                case 0x25:
                                    // Opcode:    DEC IXH (Undocumented)
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1|4
                                    // Flags:     SZ5H3VN-
                                    // Operation: IXH=IXH-1
                                    x = (IXH - 1) & 0xff;
                                    fs = x & FS;
                                    fz = (x & 0xff) == 0 ? FZ : 0;
                                    f5 = x & F5;
                                    fh = (((IXH & 0x0f) - 1) & 0x10) != 0 ? FH : 0;
                                    f3 = x & F3;
                                    fp = (IXH == 0x80) ? FV : 0;
                                    fn = FN;
                                    IXH = x;
                                    break;
                                case 0x26:
                                    // Opcode:    LD IXH,$b (Undocumented)
                                    // Attributes:Byte, Direct
                                    // TStates:   11
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    //            M2, 3 T States - Operand Data Read
                                    // MCycles2:  pc:4,pc+1:4,pc+2:3
                                    // Operation: IXH=N
                                    IXH = PeekByte(PC++);

                                    break;
                                case 0x29:
                                    // Opcode:    ADD IX,IX
                                    // TStates:   15
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    //            M2, 4 T States - Internal CPU Operation
                                    //            M3, 3 T States - Internal CPU Operation
                                    // MCycles2:  pc:4,pc+1:11
                                    // Flags:     --***-0C
                                    //            * F5 H F3 from higher bytes addition
                                    // Operation: IX=IX+IX
                                    AddCycles(IR, 4);
                                    AddCycles(IR, 3);
                                    WZ = IX + 1;
                                    x = IX + IX;
                                    f5 = (x >> 8) & F5;
                                    fh = (((IX & 0xfff) + (IX & 0xfff)) & 0x1000) != 0 ? FH : 0;
                                    f3 = (x >> 8) & F3;
                                    fn = 0;
                                    fc = (x & 0x10000) != 0 ? FC : 0;
                                    IX = x;
                                    break;
                                case 0x2A:
                                    // Opcode:    LD IX,($nn) 
                                    // Attributes:Indirect, Word
                                    // TStates:   20
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    //            M2, 3 T States - Operand Data Read of Low Byte
                                    //            M3, 3 T States - Operand Data Read of High Byte
                                    //            M4, 3 T States - Memory Read of Low Byte
                                    //            M5, 3 T States - Memory Read of High Byte
                                    // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,nn:3,nn+1:3
                                    // MemPtr:    MEMPTR = addr + 1
                                    // Operation: IX=[NN,NN+1]
                                    WZ = (PeekByte(PC++) | (PeekByte(PC++) << 8));
                                    IX = (PeekByte(WZ++) | (PeekByte(WZ) << 8));
                                    break;
                                case 0x2B:
                                    // Opcode:    DEC IX
                                    // TStates:   10
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 6 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:6
                                    // Operation: IX=IX-1
                                    AddCycles(IR, 2);
                                    IX--;
                                    break;
                                case 0x2C:
                                    // Opcode:    INC IXL (Undocumented)
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1|4
                                    // Flags:     SZ5H3VN-
                                    // Operation: IXL=IXL+1
                                    x = (IXL + 1) & 0xff;
                                    fs = x & FS;
                                    fz = (x & 0xff) == 0 ? FZ : 0;
                                    f5 = x & F5;
                                    fh = ((IXL & 0x0f) + 1) & 0x10;
                                    f3 = x & F3;
                                    fp = (IXL == 0x7f) ? FV : 0;
                                    fn = 0;
                                    IXL = x;

                                    break;
                                case 0x2D:
                                    // Opcode:    DEC IXL (Undocumented)
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1|4
                                    // Flags:     SZ5H3VN-
                                    // Operation: IXL=IXL-1
                                    x = (IXL - 1) & 0xff;
                                    fs = x & FS;
                                    fz = (x & 0xff) == 0 ? FZ : 0;
                                    f5 = x & F5;
                                    fh = (((IXL & 0x0f) - 1) & 0x10) != 0 ? FH : 0;
                                    f3 = x & F3;
                                    fp = (IXL == 0x80) ? FV : 0;
                                    fn = FN;
                                    IXL = x;
                                    break;
                                case 0x2E:
                                    // Opcode:    LD IXL,$b (Undocumented)
                                    // Attributes:Byte, Direct
                                    // TStates:   11
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    //            M2, 3 T States - Operand Data Read
                                    // MCycles2:  pc:4,pc+1:4,pc+2:3
                                    // Operation: IXL=N
                                    IXL = PeekByte(PC++);
                                    break;
                                case 0x34:
                                    // Opcode:    INC (IX$o) 
                                    // Attributes:Indexed
                                    // TStates:   23
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    //            M2, 3 T States - Operand Data Read
                                    //            M3, 5 T States - Internal CPU Operation
                                    //            M4, 4 T States - Memory Read
                                    //            M5, 3 T States - Memory Write
                                    // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+2:1 x 5,ii+n:3,ii+n:1,ii+n(write):3
                                    // Flags:     SZ5H3VN-
                                    // MemPtr:    MEMPTR = INDEX+d
                                    // Operation: [IX+n]=[IX+n]+1
                                    WZ = (IX + (sbyte)PeekByte(PC)) & 0xFFFF;
                                    AddCycles(PC, 5);
                                    y = PeekByte(WZ);
                                    x = (y + 1) & 0xff;
                                    fs = x & FS;
                                    fz = (x & 0xff) == 0 ? FZ : 0;
                                    f5 = x & F5;
                                    fh = ((y & 0x0f) + 1) & 0x10;
                                    f3 = x & F3;
                                    fp = (y == 0x7f) ? FV : 0;
                                    fn = 0;
                                    PokeByte(WZ, x);
                                    AddCycles(WZ, 1);
                                    PC++;
                                    break;
                                case 0x35:
                                    // Opcode:    DEC (IX$o) 
                                    // Attributes:Indexed
                                    // TStates:   23
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    //            M2, 3 T States - Operand Data Read
                                    //            M3, 5 T States - Internal CPU Operation
                                    //            M4, 4 T States - Memory Read
                                    //            M5, 3 T States - Memory Write
                                    // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+2:1 x 5,ii+n:3,ii+n:1,ii+n(write):3
                                    // Flags:     SZ5H3VN-
                                    // MemPtr:    MEMPTR = INDEX+d
                                    // Operation: [IX+n]=[IX+n]-1
                                    WZ = (IX + (sbyte)PeekByte(PC)) & 0xFFFF;
                                    AddCycles(PC, 5);
                                    y = PeekByte(WZ);
                                    x = (y - 1) & 0xff;
                                    fs = x & FS;
                                    fz = (x & 0xff) == 0 ? FZ : 0;
                                    f5 = x & F5;
                                    fh = (((y & 0x0f) - 1) & 0x10) != 0 ? FH : 0;
                                    f3 = x & F3;
                                    fp = (y == 0x80) ? FV : 0;
                                    fn = FN;
                                    PokeByte(WZ, x);
                                    AddCycles(WZ, 1);
                                    PC++;
                                    break;
                                case 0x36:
                                    // Opcode:    LD (IX$o),$b
                                    // Attributes:Indexed
                                    // TStates:   19
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    //            M2, 3 T States - Operand Data Read
                                    //            M3, 5 T States - Internal CPU Operation
                                    //            M4, 3 T States - Memory Write
                                    // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3
                                    // MemPtr:    MEMPTR = INDEX+d
                                    // Operation: [IX+n]=N
                                    WZ = (IX + (sbyte)PeekByte(PC)) & 0xFFFF;
                                    AddCycles(PC++, 2);
                                    PokeByte(WZ, PeekByte(PC++));
                                    break;
                                case 0x39:
                                    // Opcode:    ADD IX,SP
                                    // TStates:   15
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    //            M2, 4 T States - Internal CPU Operation
                                    //            M3, 3 T States - Internal CPU Operation
                                    // MCycles2:  pc:4,pc+1:11
                                    // Flags:     --***-0C
                                    //            * F5 H F3 from higher bytes addition
                                    // Operation: IX=IX+SP
                                    AddCycles(IR, 4);
                                    AddCycles(IR, 3);
                                    WZ = IX + 1;
                                    x = IX + SP;
                                    f5 = (x >> 8) & F5;
                                    fh = (((IX & 0xfff) + (SP & 0xfff)) & 0x1000) != 0 ? FH : 0;
                                    f3 = (x >> 8) & F3;
                                    fn = 0;
                                    fc = (x & 0x10000) != 0 ? FC : 0;
                                    IX = x;
                                    break;
                                case 0x44:
                                    // Opcode:    LD B,IXH (Undocumented)
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1|4
                                    // Operation: B=IXH
                                    B = IXH;
                                    break;
                                case 0x45:
                                    // Opcode:    LD B,IXL (Undocumented)
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1|4
                                    // Operation: B=IXL
                                    B = IXL;
                                    break;
                                case 0x46:
                                    // Opcode:    LD B,(IX$o) 
                                    // Attributes:Indexed
                                    // TStates:   19
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    //            M2, 3 T States - Operand Data Read
                                    //            M3, 5 T States - Internal CPU Operation
                                    //            M4, 3 T States - Memory Read
                                    // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+2:1 x 5,ii+n:3
                                    // MemPtr:    MEMPTR = INDEX+d
                                    // Operation: B=[IX+n]
                                    B = GetByteAtIndex(IX);
                                    break;
                                case 0x4C:
                                    // Opcode:    LD C,IXH (Undocumented)
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1|4
                                    // Operation: C=IXH
                                    C = IXH;
                                    break;
                                case 0x4D:
                                    // Opcode:    LD C,IXL (Undocumented)
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1|4
                                    // Operation: C=IXL
                                    C = IXL;
                                    break;
                                case 0x4E:
                                    // Opcode:    LD C,(IX$o) 
                                    // Attributes:Indexed
                                    // TStates:   19
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    //            M2, 3 T States - Operand Data Read
                                    //            M3, 5 T States - Internal CPU Operation
                                    //            M4, 3 T States - Memory Read
                                    // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+2:1 x 5,ii+n:3
                                    // MemPtr:    MEMPTR = INDEX+d
                                    // Operation: C=[IX+n]
                                    C = GetByteAtIndex(IX);
                                    break;
                                case 0x54:
                                    // Opcode:    LD D,IXH (Undocumented)
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1|4
                                    // Operation: D=IXH
                                    D = IXH;
                                    break;
                                case 0x55:
                                    // Opcode:    LD D,IXL (Undocumented)
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1|4
                                    // Operation: D=IXL
                                    D = IXL;
                                    break;
                                case 0x56:
                                    // Opcode:    LD D,(IX$o) 
                                    // Attributes:Indexed
                                    // TStates:   19
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    //            M2, 3 T States - Operand Data Read
                                    //            M3, 5 T States - Internal CPU Operation
                                    //            M4, 3 T States - Memory Read
                                    // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+2:1 x 5,ii+n:3
                                    // MemPtr:    MEMPTR = INDEX+d
                                    // Operation: D=[IX+n]
                                    D = GetByteAtIndex(IX);
                                    break;
                                case 0x5C:
                                    // Opcode:    LD E,IXH (Undocumented)
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1|4
                                    // Operation: E=IXH
                                    E = IXH;
                                    break;
                                case 0x5D:
                                    // Opcode:    LD E,IXL (Undocumented)
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1|4
                                    // Operation: E=IXL
                                    E = IXL;
                                    break;
                                case 0x5E:
                                    // Opcode:    LD E,(IX$o) 
                                    // Attributes:Indexed
                                    // TStates:   19
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    //            M2, 3 T States - Operand Data Read
                                    //            M3, 5 T States - Internal CPU Operation
                                    //            M4, 3 T States - Memory Read
                                    // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+2:1 x 5,ii+n:3
                                    // MemPtr:    MEMPTR = INDEX+d
                                    // Operation: E=[IX+n]
                                    E = GetByteAtIndex(IX);
                                    break;
                                case 0x60:
                                    // Opcode:    LD IXH,B (Undocumented)
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1|4
                                    // Operation: IXH=B
                                    IXH = B;
                                    break;
                                case 0x61:
                                    // Opcode:    LD IXH,C (Undocumented)
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1|4
                                    // Operation: IXH=C
                                    IXH = C;
                                    break;
                                case 0x62:
                                    // Opcode:    LD IXH,D (Undocumented)
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1|4
                                    // Operation: IXH=D
                                    IXH = D;
                                    break;
                                case 0x63:
                                    // Opcode:    LD IXH,E (Undocumented)
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1|4
                                    // Operation: IXH=E
                                    IXH = E;
                                    break;
                                case 0x64:
                                    // Opcode:    LD IXH,IXH (Undocumented)
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1|4
                                    // Operation: IXH=IXH
                                    break;
                                case 0x65:
                                    // Opcode:    LD IXH,IXL (Undocumented)
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1|4
                                    // Operation: IXH=IXL
                                    IXH = IXL;
                                    break;
                                case 0x66:
                                    // Opcode:    LD H,(IX$o) 
                                    // Attributes:Indexed
                                    // TStates:   19
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    //            M2, 3 T States - Operand Data Read
                                    //            M3, 5 T States - Internal CPU Operation
                                    //            M4, 3 T States - Memory Read
                                    // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+2:1 x 5,ii+n:3
                                    // MemPtr:    MEMPTR = INDEX+d
                                    // Operation: H=[IX+n]
                                    H = GetByteAtIndex(IX);
                                    break;
                                case 0x67:
                                    // Opcode:    LD IXH,A (Undocumented)
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1|4
                                    // Operation: IXH=A
                                    IXH = A;
                                    break;
                                case 0x68:
                                    // Opcode:    LD IXL,B (Undocumented)
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1|4
                                    // Operation: IXL=B
                                    IXL = B;
                                    break;
                                case 0x69:
                                    // Opcode:    LD IXL,C (Undocumented)
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1|4
                                    // Operation: IXL=C
                                    IXL = C;
                                    break;
                                case 0x6A:
                                    // Opcode:    LD IXL,D (Undocumented)
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1|4
                                    // Operation: IXL=D
                                    IXL = D;
                                    break;
                                case 0x6B:
                                    // Opcode:    LD IXL,E (Undocumented)
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1|4
                                    // Operation: IXL=E
                                    IXL = E;
                                    break;
                                case 0x6C:
                                    // Opcode:    LD IXL,IXH (Undocumented)
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1|4
                                    // Operation: IXL=IXH
                                    IXL = IXH;
                                    break;
                                case 0x6D:
                                    // Opcode:    LD IXL,IXL (Undocumented)
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1|4
                                    // Operation: IXL=IXL
                                    break;
                                case 0x6E:
                                    // Opcode:    LD L,(IX$o) 
                                    // Attributes:Indexed
                                    // TStates:   19
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    //            M2, 3 T States - Operand Data Read
                                    //            M3, 5 T States - Internal CPU Operation
                                    //            M4, 3 T States - Memory Read
                                    // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+2:1 x 5,ii+n:3
                                    // MemPtr:    MEMPTR = INDEX+d
                                    // Operation: L=[IX+n]
                                    L = GetByteAtIndex(IX);
                                    break;
                                case 0x6F:
                                    // Opcode:    LD IXL,A (Undocumented)
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1|4
                                    // Operation: IXL=A
                                    IXL = A;
                                    break;
                                case 0x70:
                                    // Opcode:    LD (IX$o),B
                                    // Attributes:Indexed
                                    // TStates:   19
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    //            M2, 3 T States - Operand Data Read
                                    //            M3, 5 T States - Internal CPU Operation
                                    //            M4, 3 T States - Memory Write
                                    // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+2:1 x 5,ii+n:3
                                    // MemPtr:    MEMPTR = INDEX+d
                                    // Operation: [IX+n]=r
                                    WZ = (IX + (sbyte)PeekByte(PC)) & 0xFFFF;
                                    AddCycles(PC, 5);
                                    PokeByte(WZ, B);
                                    PC++;
                                    break;
                                case 0x71:
                                    // Opcode:    LD (IX$o),C
                                    // Attributes:Indexed
                                    // TStates:   19
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    //            M2, 3 T States - Operand Data Read
                                    //            M3, 5 T States - Internal CPU Operation
                                    //            M4, 3 T States - Memory Write
                                    // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+2:1 x 5,ii+n:3
                                    // MemPtr:    MEMPTR = INDEX+d
                                    // Operation: [IX+n]=r
                                    WZ = (IX + (sbyte)PeekByte(PC)) & 0xFFFF;
                                    AddCycles(PC, 5);
                                    PokeByte(WZ, C);
                                    PC++;
                                    break;
                                case 0x72:
                                    // Opcode:    LD (IX$o),D
                                    // Attributes:Indexed
                                    // TStates:   19
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    //            M2, 3 T States - Operand Data Read
                                    //            M3, 5 T States - Internal CPU Operation
                                    //            M4, 3 T States - Memory Write
                                    // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+2:1 x 5,ii+n:3
                                    // MemPtr:    MEMPTR = INDEX+d
                                    // Operation: [IX+n]=r
                                    WZ = (IX + (sbyte)PeekByte(PC)) & 0xFFFF;
                                    AddCycles(PC, 5);
                                    PokeByte(WZ, D);
                                    PC++;
                                    break;
                                case 0x73:
                                    // Opcode:    LD (IX$o),E
                                    // Attributes:Indexed
                                    // TStates:   19
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    //            M2, 3 T States - Operand Data Read
                                    //            M3, 5 T States - Internal CPU Operation
                                    //            M4, 3 T States - Memory Write
                                    // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+2:1 x 5,ii+n:3
                                    // MemPtr:    MEMPTR = INDEX+d
                                    // Operation: [IX+n]=r
                                    WZ = (IX + (sbyte)PeekByte(PC)) & 0xFFFF;
                                    AddCycles(PC, 5);
                                    PokeByte(WZ, E);
                                    PC++;
                                    break;
                                case 0x74:
                                    // Opcode:    LD (IX$o),H
                                    // Attributes:Indexed
                                    // TStates:   19
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    //            M2, 3 T States - Operand Data Read
                                    //            M3, 5 T States - Internal CPU Operation
                                    //            M4, 3 T States - Memory Write
                                    // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+2:1 x 5,ii+n:3
                                    // MemPtr:    MEMPTR = INDEX+d
                                    // Operation: [IX+n]=r
                                    WZ = (IX + (sbyte)PeekByte(PC)) & 0xFFFF;
                                    AddCycles(PC, 5);
                                    PokeByte(WZ, H);
                                    PC++;
                                    break;
                                case 0x75:
                                    // Opcode:    LD (IX$o),L
                                    // Attributes:Indexed
                                    // TStates:   19
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    //            M2, 3 T States - Operand Data Read
                                    //            M3, 5 T States - Internal CPU Operation
                                    //            M4, 3 T States - Memory Write
                                    // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+2:1 x 5,ii+n:3
                                    // MemPtr:    MEMPTR = INDEX+d
                                    // Operation: [IX+n]=r
                                    WZ = (IX + (sbyte)PeekByte(PC)) & 0xFFFF;
                                    AddCycles(PC, 5);
                                    PokeByte(WZ, L);
                                    PC++;
                                    break;
                                case 0x77:
                                    // Opcode:    LD (IX$o),A
                                    // Attributes:Indexed
                                    // TStates:   19
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    //            M2, 3 T States - Operand Data Read
                                    //            M3, 5 T States - Internal CPU Operation
                                    //            M4, 3 T States - Memory Write
                                    // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+2:1 x 5,ii+n:3
                                    // MemPtr:    MEMPTR = INDEX+d
                                    // Operation: [IX+n]=r
                                    WZ = (IX + (sbyte)PeekByte(PC)) & 0xFFFF;
                                    AddCycles(PC, 5);
                                    PokeByte(WZ, A);
                                    PC++;
                                    break;
                                case 0x7C:
                                    // Opcode:    LD A,IXH (Undocumented)
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1|4
                                    // Operation: A=IXH
                                    A = IXH;
                                    break;
                                case 0x7D:
                                    // Opcode:    LD A,IXL (Undocumented)
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1|4
                                    // Operation: A=IXL
                                    A = IXL;
                                    break;
                                case 0x7E:
                                    // Opcode:    LD A,(IX$o) 
                                    // Attributes:Indexed
                                    // TStates:   19
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    //            M2, 3 T States - Operand Data Read
                                    //            M3, 5 T States - Internal CPU Operation
                                    //            M4, 3 T States - Memory Read
                                    // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+2:1 x 5,ii+n:3
                                    // MemPtr:    MEMPTR = INDEX+d
                                    // Operation: A=[IX+n]
                                    A = GetByteAtIndex(IX);
                                    break;
                                case 0x84:
                                    // Opcode:    ADD A,IXH (Undocumented)
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1|4
                                    // Flags:     --***-0C
                                    //            * F5 H F3 from higher bytes addition
                                    // Operation: A=A+IXH
                                    x = (A + IXH) & 0xff;
                                    fs = x & FS;
                                    fz = (x & 0xff) == 0 ? FZ : 0;
                                    f5 = x & F5;
                                    fh = ((((A & 0x0f) + (IXH & 0x0f))) & 0x10);
                                    f3 = x & F3;
                                    fp = (((A ^ ~IXH) & (A ^ x)) & 0x80) != 0 ? FV : 0;
                                    fn = 0;
                                    fc = (A + IXH) > 0xff ? FC : 0;
                                    A = x;
                                    break;
                                case 0x85:
                                    // Opcode:    ADD A,IXL (Undocumented)
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1|4
                                    // Flags:     --***-0C
                                    //            * F5 H F3 from higher bytes addition
                                    // Operation: A=A+IXL
                                    x = (A + IXL) & 0xff;
                                    fs = x & FS;
                                    fz = (x & 0xff) == 0 ? FZ : 0;
                                    f5 = x & F5;
                                    fh = ((((A & 0x0f) + (IXL & 0x0f))) & 0x10);
                                    f3 = x & F3;
                                    fp = (((A ^ ~IXL) & (A ^ x)) & 0x80) != 0 ? FV : 0;
                                    fn = 0;
                                    fc = (A + IXL) > 0xff ? FC : 0;
                                    A = x;
                                    break;
                                case 0x86:
                                    // Opcode:    ADD A,(IX$o) 
                                    // Attributes:Indexed
                                    // TStates:   19
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    //            M2, 3 T States - Operand Data Read
                                    //            M3, 5 T States - Internal CPU Operation
                                    //            M4, 3 T States - Memory Read
                                    // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+2:1 x 5,ii+n:3
                                    // Flags:     --***-0C
                                    //            * F5 H F3 from higher bytes addition
                                    // MemPtr:    MEMPTR = INDEX+d
                                    // Operation: A=A+[IX+n]
                                    y = GetByteAtIndex(IX);
                                    x = (A + y) & 0xff;
                                    fs = x & FS;
                                    fz = (x & 0xff) == 0 ? FZ : 0;
                                    f5 = x & F5;
                                    fh = ((((A & 0x0f) + (y & 0x0f))) & 0x10);
                                    f3 = x & F3;
                                    fp = (((A ^ ~y) & (A ^ x)) & 0x80) != 0 ? FV : 0;
                                    fn = 0;
                                    fc = (A + y) > 0xff ? FC : 0;
                                    A = x;
                                    break;
                                case 0x8C:
                                    // Opcode:    ADC A,IXH (Undocumented)
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1|4
                                    // Flags:     SZ***VNC
                                    //            *  F5 H F3 from higher bytes addition
                                    // Operation: A=A+IXH+CY
                                    x = (A + IXH + fc) & 0xff;
                                    fs = x & FS;
                                    fz = (x & 0xff) == 0 ? FZ : 0;
                                    f5 = x & F5;
                                    fh = ((((A & 0x0f) + (IXH & 0x0f)) + fc) & 0x10);
                                    f3 = x & F3;
                                    fp = (((A ^ ~IXH) & (A ^ x)) & 0x80) != 0 ? FV : 0;
                                    fn = 0;
                                    fc = (A + IXH + fc) > 0xff ? FC : 0;
                                    A = x;
                                    break;
                                case 0x8D:
                                    // Opcode:    ADC A,IXL (Undocumented)
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1|4
                                    // Flags:     SZ***VNC
                                    //            *  F5 H F3 from higher bytes addition
                                    // Operation: A=A+IXL+CY
                                    x = (A + IXL + fc) & 0xff;
                                    fs = x & FS;
                                    fz = (x & 0xff) == 0 ? FZ : 0;
                                    f5 = x & F5;
                                    fh = ((((A & 0x0f) + (IXL & 0x0f)) + fc) & 0x10);
                                    f3 = x & F3;
                                    fp = (((A ^ ~IXL) & (A ^ x)) & 0x80) != 0 ? FV : 0;
                                    fn = 0;
                                    fc = (A + IXL + fc) > 0xff ? FC : 0;
                                    A = x;
                                    break;
                                case 0x8E:
                                    // Opcode:    ADC A,(IX$o) 
                                    // Attributes:Indexed
                                    // TStates:   19
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    //            M2, 3 T States - Operand Data Read
                                    //            M3, 5 T States - Internal CPU Operation
                                    //            M4, 3 T States - Memory Read
                                    // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+2:1 x 5,ii+n:3
                                    // Flags:     SZ***VNC
                                    //            *  F5 H F3 from higher bytes addition
                                    // MemPtr:    MEMPTR = INDEX+d
                                    // Operation: A=A+[IX+n]+CY
                                    y = GetByteAtIndex(IX);
                                    x = (A + y + fc) & 0xff;
                                    fs = x & FS;
                                    fz = (x & 0xff) == 0 ? FZ : 0;
                                    f5 = x & F5;
                                    fh = ((((A & 0x0f) + (y & 0x0f)) + fc) & 0x10);
                                    f3 = x & F3;
                                    fp = (((A ^ ~y) & (A ^ x)) & 0x80) != 0 ? FV : 0;
                                    fn = 0;
                                    fc = (A + y + fc) > 0xff ? FC : 0;
                                    A = x;
                                    break;
                                case 0x94:
                                    // Opcode:    SUB IXH (Undocumented)
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1|4
                                    // Flags:     SZ5H3VNC
                                    // Operation: A=A-IXH
                                    x = (A - IXH) & 0xff;
                                    fs = x & FS;
                                    fz = (x & 0xff) == 0 ? FZ : 0;
                                    f5 = x & F5;
                                    fh = (((A & 0x0f) - (IXH & 0x0f)) & 0x10) != 0 ? FH : 0;
                                    f3 = x & F3;
                                    fp = (((A ^ IXH) & (A ^ x)) & 0x80) != 0 ? FV : 0;
                                    fn = FN;
                                    fc = ((A - IXH) & 0x100) != 0 ? FC : 0;
                                    A = x;
                                    break;
                                case 0x95:
                                    // Opcode:    SUB IXL (Undocumented)
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1|4
                                    // Flags:     SZ5H3VNC
                                    // Operation: A=A-IXL
                                    x = (A - IXL) & 0xff;
                                    fs = x & FS;
                                    fz = (x & 0xff) == 0 ? FZ : 0;
                                    f5 = x & F5;
                                    fh = (((A & 0x0f) - (IXL & 0x0f)) & 0x10) != 0 ? FH : 0;
                                    f3 = x & F3;
                                    fp = (((A ^ IXL) & (A ^ x)) & 0x80) != 0 ? FV : 0;
                                    fn = FN;
                                    fc = ((A - IXL) & 0x100) != 0 ? FC : 0;
                                    A = x;
                                    break;
                                case 0x96:
                                    // Opcode:    SUB (IX$o) 
                                    // Attributes:Indexed
                                    // TStates:   19
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    //            M2, 3 T States - Operand Data Read
                                    //            M3, 5 T States - Internal CPU Operation
                                    //            M4, 3 T States - Memory Read
                                    // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+2:1 x 5,ii+n:3
                                    // Flags:     SZ5H3VNC
                                    // MemPtr:    MEMPTR = INDEX+d
                                    // Operation: A=A-[IX+n]
                                    y = GetByteAtIndex(IX);
                                    x = (A - y) & 0xff;
                                    fs = x & FS;
                                    fz = (x & 0xff) == 0 ? FZ : 0;
                                    f5 = x & F5;
                                    fh = (((A & 0x0f) - (y & 0x0f)) & 0x10) != 0 ? FH : 0;
                                    f3 = x & F3;
                                    fp = (((A ^ y) & (A ^ x)) & 0x80) != 0 ? FV : 0;
                                    fn = FN;
                                    fc = ((A - y) & 0x100) != 0 ? FC : 0;
                                    A = x;
                                    break;
                                case 0x9C:
                                    // Opcode:    SBC A,IXH (Undocumented)
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1|4
                                    // Flags:     SZ5H3VNC
                                    // Operation: A=A-IXH-CY
                                    x = (A - IXH - fc) & 0xff;
                                    fs = x & FS;
                                    fz = (x & 0xff) == 0 ? FZ : 0;
                                    f5 = x & F5;
                                    fh = (((A & 0x0f) - (IXH & 0x0f) - fc) & 0x10) != 0 ? FH : 0;
                                    f3 = x & F3;
                                    fp = (((A ^ IXH) & (A ^ x)) & 0x80) != 0 ? FV : 0;
                                    fn = FN;
                                    fc = ((A - IXH - fc) & 0x100) != 0 ? FC : 0;
                                    A = x;
                                    break;
                                case 0x9D:
                                    // Opcode:    SBC A,IXL (Undocumented)
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1|4
                                    // Flags:     SZ5H3VNC
                                    // Operation: A=A-IXL-CY
                                    x = (A - IXL - fc) & 0xff;
                                    fs = x & FS;
                                    fz = (x & 0xff) == 0 ? FZ : 0;
                                    f5 = x & F5;
                                    fh = (((A & 0x0f) - (IXL & 0x0f) - fc) & 0x10) != 0 ? FH : 0;
                                    f3 = x & F3;
                                    fp = (((A ^ IXL) & (A ^ x)) & 0x80) != 0 ? FV : 0;
                                    fn = FN;
                                    fc = ((A - IXL - fc) & 0x100) != 0 ? FC : 0;
                                    A = x;
                                    break;
                                case 0x9E:
                                    // Opcode:    SBC A,(IX$o) 
                                    // Attributes:Indexed
                                    // TStates:   19
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    //            M2, 3 T States - Operand Data Read
                                    //            M3, 5 T States - Internal CPU Operation
                                    //            M4, 3 T States - Memory Read
                                    // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+2:1 x 5,ii+n:3
                                    // Flags:     SZ5H3VNC
                                    // MemPtr:    MEMPTR = INDEX+d
                                    // Operation: A=A-[IX+n]-CY
                                    y = GetByteAtIndex(IX);
                                    x = (A - y - fc) & 0xff;
                                    fs = x & FS;
                                    fz = (x & 0xff) == 0 ? FZ : 0;
                                    f5 = x & F5;
                                    fh = (((A & 0x0f) - (y & 0x0f) - fc) & 0x10) != 0 ? FH : 0;
                                    f3 = x & F3;
                                    fp = (((A ^ y) & (A ^ x)) & 0x80) != 0 ? FV : 0;
                                    fn = FN;
                                    fc = ((A - y - fc) & 0x100) != 0 ? FC : 0;
                                    A = x;
                                    break;
                                case 0xA4:
                                    // Opcode:    AND IXH (Undocumented)
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1|4
                                    // Flags:     SZ513P00
                                    // Operation: A=A&IXH
                                    x = A & IXH;
                                    fs = x & FS;
                                    fz = (x & 0xff) == 0 ? FZ : 0;
                                    f5 = x & F5;
                                    fh = FH;
                                    f3 = x & F3;
                                    fp = Parity[x & 0xff];
                                    fn = 0;
                                    fc = 0;
                                    A = x;
                                    break;
                                case 0xA5:
                                    // Opcode:    AND IXL (Undocumented)
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1|4
                                    // Flags:     SZ513P00
                                    // Operation: A=A&IXL
                                    x = A & IXL;
                                    fs = x & FS;
                                    fz = (x & 0xff) == 0 ? FZ : 0;
                                    f5 = x & F5;
                                    fh = FH;
                                    f3 = x & F3;
                                    fp = Parity[x & 0xff];
                                    fn = 0;
                                    fc = 0;
                                    A = x;
                                    break;
                                case 0xA6:
                                    // Opcode:    AND (IX$o) 
                                    // Attributes:Indexed
                                    // TStates:   19
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    //            M2, 3 T States - Operand Data Read
                                    //            M3, 5 T States - Internal CPU Operation
                                    //            M4, 3 T States - Memory Read
                                    // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+2:1 x 5,ii+n:3
                                    // Flags:     SZ513P00
                                    // MemPtr:    MEMPTR = INDEX+d
                                    // Operation: A=A&[IX+n]
                                    x = A & GetByteAtIndex(IX);
                                    fs = x & FS;
                                    fz = (x & 0xff) == 0 ? FZ : 0;
                                    f5 = x & F5;
                                    fh = FH;
                                    f3 = x & F3;
                                    fp = Parity[x & 0xff];
                                    fn = 0;
                                    fc = 0;
                                    A = x;
                                    break;
                                case 0xAC:
                                    // Opcode:    XOR IXH (Undocumented)
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1|4
                                    // Flags:     SZ503P00
                                    // Operation: A=AxIXH
                                    x = (A ^ IXH) & 0xff;
                                    fs = x & FS;
                                    fz = (x & 0xff) == 0 ? FZ : 0;
                                    f5 = x & F5;
                                    fh = 0;
                                    f3 = x & F3;
                                    fp = Parity[x & 0xff];
                                    fn = 0;
                                    fc = 0;
                                    A = x & 0xff;
                                    break;
                                case 0xAD:
                                    // Opcode:    XOR IXL (Undocumented)
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1|4
                                    // Flags:     SZ503P00
                                    // Operation: A=AxIXL
                                    x = (A ^ IXL) & 0xff;
                                    fs = x & FS;
                                    fz = (x & 0xff) == 0 ? FZ : 0;
                                    f5 = x & F5;
                                    fh = 0;
                                    f3 = x & F3;
                                    fp = Parity[x & 0xff];
                                    fn = 0;
                                    fc = 0;
                                    A = x & 0xff;
                                    break;
                                case 0xAE:
                                    // Opcode:    XOR (IX$o) 
                                    // Attributes:Indexed
                                    // TStates:   19
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    //            M2, 3 T States - Operand Data Read
                                    //            M3, 5 T States - Internal CPU Operation
                                    //            M4, 3 T States - Memory Read
                                    // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+2:1 x 5,ii+n:3
                                    // Flags:     SZ503P00
                                    // MemPtr:    MEMPTR = INDEX+d
                                    // Operation: A=Ax[IX+n]
                                    x = (A ^ GetByteAtIndex(IX)) & 0xff;
                                    fs = x & FS;
                                    fz = (x & 0xff) == 0 ? FZ : 0;
                                    f5 = x & F5;
                                    fh = 0;
                                    f3 = x & F3;
                                    fp = Parity[x & 0xff];
                                    fn = 0;
                                    fc = 0;
                                    A = x & 0xff;
                                    break;
                                case 0xB4:
                                    // Opcode:    OR IXH (Undocumented)
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1|4
                                    // Flags:     SZ503P00
                                    // Operation: A=AvIXH
                                    x = (A | IXH) & 0xff;
                                    fs = x & FS;
                                    fz = (x & 0xff) == 0 ? FZ : 0;
                                    f5 = x & F5;
                                    fh = 0;
                                    f3 = x & F3;
                                    fp = Parity[x & 0xff];
                                    fn = 0;
                                    fc = 0;
                                    A = x & 0xff;
                                    break;
                                case 0xB5:
                                    // Opcode:    OR IXL (Undocumented)
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1|4
                                    // Flags:     SZ503P00
                                    // Operation: A=AvIXL
                                    x = (A | IXL) & 0xff;
                                    fs = x & FS;
                                    fz = (x & 0xff) == 0 ? FZ : 0;
                                    f5 = x & F5;
                                    fh = 0;
                                    f3 = x & F3;
                                    fp = Parity[x & 0xff];
                                    fn = 0;
                                    fc = 0;
                                    A = x & 0xff;
                                    break;
                                case 0xB6:
                                    // Opcode:    OR (IX$o) 
                                    // Attributes:Indexed
                                    // TStates:   19
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    //            M2, 3 T States - Operand Data Read
                                    //            M3, 5 T States - Internal CPU Operation
                                    //            M4, 3 T States - Memory Read
                                    // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+2:1 x 5,ii+n:3
                                    // Flags:     SZ503P00
                                    // MemPtr:    MEMPTR = INDEX+d
                                    // Operation: A=Av[IX+n]
                                    x = (A | GetByteAtIndex(IX)) & 0xff;
                                    fs = x & FS;
                                    fz = (x & 0xff) == 0 ? FZ : 0;
                                    f5 = x & F5;
                                    fh = 0;
                                    f3 = x & F3;
                                    fp = Parity[x & 0xff];
                                    fn = 0;
                                    fc = 0;
                                    A = x & 0xff;
                                    break;
                                case 0xBC:
                                    // Opcode:    CP IXH (Undocumented)
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1|4
                                    // Flags:     SZ*H*VNC CP
                                    //            * is just SUB with the result thrown away
                                    //            * F5 and F3 are copied from the operand not the result
                                    // Operation: A-IXH
                                    x = (A - IXH) & 0xff;
                                    fs = x & FS;
                                    fz = (x & 0xff) == 0 ? FZ : 0;
                                    f5 = IXH & F5;
                                    fh = (((A & 0x0f) - (IXH & 0x0f)) & 0x10) != 0 ? FH : 0;
                                    f3 = IXH & F3;
                                    fp = (((A ^ IXH) & (A ^ x)) & 0x80) != 0 ? FV : 0;
                                    fn = FN;
                                    fc = ((A - IXH) & 0x100) != 0 ? FC : 0;
                                    break;
                                case 0xBD:
                                    // Opcode:    CP IXL (Undocumented)
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1|4
                                    // Flags:     SZ*H*VNC CP
                                    //            * is just SUB with the result thrown away
                                    //            * F5 and F3 are copied from the operand not the result
                                    // Operation: A-IXL
                                    x = (A - IXL) & 0xff;
                                    fs = x & FS;
                                    fz = (x & 0xff) == 0 ? FZ : 0;
                                    f5 = IXL & F5;
                                    fh = (((A & 0x0f) - (IXL & 0x0f)) & 0x10) != 0 ? FH : 0;
                                    f3 = IXL & F3;
                                    fp = (((A ^ IXL) & (A ^ x)) & 0x80) != 0 ? FV : 0;
                                    fn = FN;
                                    fc = ((A - IXL) & 0x100) != 0 ? FC : 0;
                                    break;
                                case 0xBE:
                                    // Opcode:    CP (IX$o) 
                                    // Attributes:Indexed
                                    // TStates:   19
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    //            M2, 3 T States - Operand Data Read
                                    //            M3, 5 T States - Internal CPU Operation
                                    //            M4, 3 T States - Memory Read
                                    // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+2:1 x 5,ii+n:3
                                    // Flags:     SZ*H*VNC CP
                                    //            * is just SUB with the result thrown away
                                    //            * F5 and F3 are copied from the operand not the result
                                    // MemPtr:    MEMPTR = INDEX+d
                                    // Operation: A-[IX+n]
                                    y = GetByteAtIndex(IX);
                                    x = (A - y) & 0xff;
                                    fs = x & FS;
                                    fz = (x & 0xff) == 0 ? FZ : 0;
                                    f5 = y & F5;
                                    fh = (((A & 0x0f) - (y & 0x0f)) & 0x10) != 0 ? FH : 0;
                                    f3 = y & F3;
                                    fp = (((A ^ y) & (A ^ x)) & 0x80) != 0 ? FV : 0;
                                    fn = FN;
                                    fc = ((A - y) & 0x100) != 0 ? FC : 0;
                                    break;
                                #region  AfterDDCB
                                case 0xCB:
                                    {
                                        WZ = (IX + (sbyte)PeekByte(PC++)) & 0xFFFF;
                                        Opcode = PeekByte(PC);
                                        AddCycles(PC++, 2);
                                        AddCycles(WZ, 1);
                                        switch (Opcode)
                                        {
                                            case 0x00:
                                                // Opcode:    LD B,RLC (IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // Flags:     SZ503P0C
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: B=[IX+n] / [IX+n]={[IX+n]}<< / [IX+n]=B
                                                B = PeekByte(WZ);
                                                fc = (B & 0x80) >> 7;
                                                B = (((B << 1) & 0xfE) | fc) & 0xff;
                                                fs = B & FS;
                                                fz = (B == 0) ? FZ : 0;
                                                fp = Parity[B];
                                                f5 = B & F5;
                                                fh = 0;
                                                f3 = B & F3;
                                                fn = 0;
                                                PokeByte(WZ, B);
                                                break;
                                            case 0x01:
                                                // Opcode:    LD C,RLC (IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // Flags:     SZ503P0C
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: C=[IX+n] / [IX+n]={[IX+n]}<< / [IX+n]=C
                                                C = PeekByte(WZ);
                                                fc = (C & 0x80) >> 7;
                                                C = (((C << 1) & 0xfE) | fc) & 0xff;
                                                fs = C & FS;
                                                fz = (C == 0) ? FZ : 0;
                                                fp = Parity[C];
                                                f5 = C & F5;
                                                fh = 0;
                                                f3 = C & F3;
                                                fn = 0;
                                                PokeByte(WZ, C);
                                                break;
                                            case 0x02:
                                                // Opcode:    LD D,RLC (IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // Flags:     SZ503P0C
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: D=[IX+n] / [IX+n]={[IX+n]}<< / [IX+n]=D
                                                D = PeekByte(WZ);
                                                fc = (D & 0x80) >> 7;
                                                D = (((D << 1) & 0xfE) | fc) & 0xff;
                                                fs = D & FS;
                                                fz = (D == 0) ? FZ : 0;
                                                fp = Parity[D];
                                                f5 = D & F5;
                                                fh = 0;
                                                f3 = D & F3;
                                                fn = 0;
                                                PokeByte(WZ, D);
                                                break;
                                            case 0x03:
                                                // Opcode:    LD E,RLC (IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // Flags:     SZ503P0C
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: E=[IX+n] / [IX+n]={[IX+n]}<< / [IX+n]=E
                                                E = PeekByte(WZ);
                                                fc = (E & 0x80) >> 7;
                                                E = (((E << 1) & 0xfE) | fc) & 0xff;
                                                fs = E & FS;
                                                fz = (E == 0) ? FZ : 0;
                                                fp = Parity[E];
                                                f5 = E & F5;
                                                fh = 0;
                                                f3 = E & F3;
                                                fn = 0;
                                                PokeByte(WZ, E);
                                                break;
                                            case 0x04:
                                                // Opcode:    LD H,RLC (IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // Flags:     SZ503P0C
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: H=[IX+n] / [IX+n]={[IX+n]}<< / [IX+n]=H
                                                H = PeekByte(WZ);
                                                fc = (H & 0x80) >> 7;
                                                H = (((H << 1) & 0xfE) | fc) & 0xff;
                                                fs = H & FS;
                                                fz = (H == 0) ? FZ : 0;
                                                fp = Parity[H];
                                                f5 = H & F5;
                                                fh = 0;
                                                f3 = H & F3;
                                                fn = 0;
                                                PokeByte(WZ, H);
                                                break;
                                            case 0x05:
                                                // Opcode:    LD L,RLC (IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // Flags:     SZ503P0C
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: L=[IX+n] / [IX+n]={[IX+n]}<< / [IX+n]=L
                                                L = PeekByte(WZ);
                                                fc = (L & 0x80) >> 7;
                                                L = (((L << 1) & 0xfE) | fc) & 0xff;
                                                fs = L & FS;
                                                fz = (L == 0) ? FZ : 0;
                                                fp = Parity[L];
                                                f5 = L & F5;
                                                fh = 0;
                                                f3 = L & F3;
                                                fn = 0;
                                                PokeByte(WZ, L);
                                                break;
                                            case 0x06:
                                                // Opcode:    RLC (IX$x) 
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // Flags:     SZ503P0C
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IX+n]={[IX+n]}<<
                                                y = PeekByte(WZ);
                                                fc = (y & 0x80) >> 7;
                                                y = (((y << 1) & 0xfE) | fc) & 0xff;
                                                fs = y & FS;
                                                fz = (y == 0) ? FZ : 0;
                                                fp = Parity[y];
                                                f5 = y & F5;
                                                fh = 0;
                                                f3 = y & F3;
                                                fn = 0;
                                                PokeByte(WZ, y);
                                                break;
                                            case 0x07:
                                                // Opcode:    LD A,RLC (IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // Flags:     SZ503P0C
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: A=[IX+n] / [IX+n]={[IX+n]}<< / [IX+n]=A
                                                A = PeekByte(WZ);
                                                fc = (A & 0x80) >> 7;
                                                A = (((A << 1) & 0xfE) | fc) & 0xff;
                                                fs = A & FS;
                                                fz = (A == 0) ? FZ : 0;
                                                fp = Parity[A];
                                                f5 = A & F5;
                                                fh = 0;
                                                f3 = A & F3;
                                                fn = 0;
                                                PokeByte(WZ, A);
                                                break;
                                            case 0x08:
                                                // Opcode:    LD B,RRC (IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // Flags:     SZ503P0C
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: B=[IX+n] / [IX+n]=>>{[IX+n]} / [IX+n]=B
                                                B = PeekByte(WZ);
                                                cy = B & FC;
                                                B = ((B >> 1) & 0x7f) | (cy << 7);
                                                fs = B & FS;
                                                fz = (B == 0) ? FZ : 0;
                                                fp = Parity[B];
                                                f5 = B & F5;
                                                fh = 0;
                                                f3 = B & F3;
                                                fn = 0;
                                                fc = cy;
                                                PokeByte(WZ, B);
                                                break;
                                            case 0x09:
                                                // Opcode:    LD C,RRC (IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // Flags:     SZ503P0C
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: C=[IX+n] / [IX+n]=>>{[IX+n]} / [IX+n]=C
                                                C = PeekByte(WZ);
                                                cy = C & FC;
                                                C = ((C >> 1) & 0x7f) | (cy << 7);
                                                fs = C & FS;
                                                fz = (C == 0) ? FZ : 0;
                                                fp = Parity[C];
                                                f5 = C & F5;
                                                fh = 0;
                                                f3 = C & F3;
                                                fn = 0;
                                                fc = cy;
                                                PokeByte(WZ, C);
                                                break;
                                            case 0x0A:
                                                // Opcode:    LD D,RRC (IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // Flags:     SZ503P0C
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: D=[IX+n] / [IX+n]=>>{[IX+n]} / [IX+n]=D
                                                D = PeekByte(WZ);
                                                cy = D & FC;
                                                D = ((D >> 1) & 0x7f) | (cy << 7);
                                                fs = D & FS;
                                                fz = (D == 0) ? FZ : 0;
                                                fp = Parity[D];
                                                f5 = D & F5;
                                                fh = 0;
                                                f3 = D & F3;
                                                fn = 0;
                                                fc = cy;
                                                PokeByte(WZ, D);
                                                break;
                                            case 0x0B:
                                                // Opcode:    LD E,RRC (IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // Flags:     SZ503P0C
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: E=[IX+n] / [IX+n]=>>{[IX+n]} / [IX+n]=E
                                                E = PeekByte(WZ);
                                                cy = E & FC;
                                                E = ((E >> 1) & 0x7f) | (cy << 7);
                                                fs = E & FS;
                                                fz = (E == 0) ? FZ : 0;
                                                fp = Parity[E];
                                                f5 = E & F5;
                                                fh = 0;
                                                f3 = E & F3;
                                                fn = 0;
                                                fc = cy;
                                                PokeByte(WZ, E);
                                                break;
                                            case 0x0C:
                                                // Opcode:    LD H,RRC (IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // Flags:     SZ503P0C
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: H=[IX+n] / [IX+n]=>>{[IX+n]} / [IX+n]=H
                                                H = PeekByte(WZ);
                                                cy = H & FC;
                                                H = ((H >> 1) & 0x7f) | (cy << 7);
                                                fs = H & FS;
                                                fz = (H == 0) ? FZ : 0;
                                                fp = Parity[H];
                                                f5 = H & F5;
                                                fh = 0;
                                                f3 = H & F3;
                                                fn = 0;
                                                fc = cy;
                                                PokeByte(WZ, H);
                                                break;
                                            case 0x0D:
                                                // Opcode:    LD L,RRC (IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // Flags:     SZ503P0C
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: L=[IX+n] / [IX+n]=>>{[IX+n]} / [IX+n]=L
                                                L = PeekByte(WZ);
                                                cy = L & FC;
                                                L = ((L >> 1) & 0x7f) | (cy << 7);
                                                fs = L & FS;
                                                fz = (L == 0) ? FZ : 0;
                                                fp = Parity[L];
                                                f5 = L & F5;
                                                fh = 0;
                                                f3 = L & F3;
                                                fn = 0;
                                                fc = cy;
                                                PokeByte(WZ, L);
                                                break;
                                            case 0x0E:
                                                // Opcode:    RRC (IX$x) 
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // Flags:     SZ503P0C
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IX+n]=>>{[IX+n]}
                                                y = PeekByte(WZ);
                                                cy = y & FC;
                                                y = ((y >> 1) & 0x7f) | (cy << 7);
                                                fs = y & FS;
                                                fz = (y == 0) ? FZ : 0;
                                                fp = Parity[y];
                                                f5 = y & F5;
                                                fh = 0;
                                                f3 = y & F3;
                                                fn = 0;
                                                fc = cy;
                                                PokeByte(WZ, y);
                                                break;
                                            case 0x0F:
                                                // Opcode:    LD A,RRC (IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // Flags:     SZ503P0C
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: A=[IX+n] / [IX+n]=>>{[IX+n]} / [IX+n]=A
                                                A = PeekByte(WZ);
                                                cy = A & FC;
                                                A = ((A >> 1) & 0x7f) | (cy << 7);
                                                fs = A & FS;
                                                fz = (A == 0) ? FZ : 0;
                                                fp = Parity[A];
                                                f5 = A & F5;
                                                fh = 0;
                                                f3 = A & F3;
                                                fn = 0;
                                                fc = cy;
                                                PokeByte(WZ, A);
                                                break;
                                            case 0x10:
                                                // Opcode:    LD B,RL (IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // Flags:     SZ503P0C
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: B=[IX+n] / [IX+n]={CY,[IX+n]}<<CY / [IX+n]=B
                                                B = PeekByte(WZ);
                                                cy = (B & 0x80) >> 7;
                                                B = (((B << 1) & 0xfe) | fc) & 0xff;
                                                fs = B & FS;
                                                fz = (B == 0) ? FZ : 0;
                                                fp = Parity[B];
                                                f5 = B & F5;
                                                fh = 0;
                                                f3 = B & F3;
                                                fn = 0;
                                                fc = cy;
                                                PokeByte(WZ, B);
                                                break;
                                            case 0x11:
                                                // Opcode:    LD C,RL (IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // Flags:     SZ503P0C
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: C=[IX+n] / [IX+n]={CY,[IX+n]}<<CY / [IX+n]=C
                                                C = PeekByte(WZ);
                                                cy = (C & 0x80) >> 7;
                                                C = (((C << 1) & 0xfe) | fc) & 0xff;
                                                fs = C & FS;
                                                fz = (C == 0) ? FZ : 0;
                                                fp = Parity[C];
                                                f5 = C & F5;
                                                fh = 0;
                                                f3 = C & F3;
                                                fn = 0;
                                                fc = cy;
                                                PokeByte(WZ, C);
                                                break;
                                            case 0x12:
                                                // Opcode:    LD D,RL (IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // Flags:     SZ503P0C
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: D=[IX+n] / [IX+n]={CY,[IX+n]}<<CY / [IX+n]=D
                                                D = PeekByte(WZ);
                                                cy = (D & 0x80) >> 7;
                                                D = (((D << 1) & 0xfe) | fc) & 0xff;
                                                fs = D & FS;
                                                fz = (D == 0) ? FZ : 0;
                                                fp = Parity[D];
                                                f5 = D & F5;
                                                fh = 0;
                                                f3 = D & F3;
                                                fn = 0;
                                                fc = cy;
                                                PokeByte(WZ, D);
                                                break;
                                            case 0x13:
                                                // Opcode:    LD E,RL (IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // Flags:     SZ503P0C
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: E=[IX+n] / [IX+n]={CY,[IX+n]}<<CY / [IX+n]=E
                                                E = PeekByte(WZ);
                                                cy = (E & 0x80) >> 7;
                                                E = (((E << 1) & 0xfe) | fc) & 0xff;
                                                fs = E & FS;
                                                fz = (E == 0) ? FZ : 0;
                                                fp = Parity[E];
                                                f5 = E & F5;
                                                fh = 0;
                                                f3 = E & F3;
                                                fn = 0;
                                                fc = cy;
                                                PokeByte(WZ, E);
                                                break;
                                            case 0x14:
                                                // Opcode:    LD H,RL (IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // Flags:     SZ503P0C
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: H=[IX+n] / [IX+n]={CY,[IX+n]}<<CY / [IX+n]=H
                                                H = PeekByte(WZ);
                                                cy = (H & 0x80) >> 7;
                                                H = (((H << 1) & 0xfe) | fc) & 0xff;
                                                fs = H & FS;
                                                fz = (H == 0) ? FZ : 0;
                                                fp = Parity[H];
                                                f5 = H & F5;
                                                fh = 0;
                                                f3 = H & F3;
                                                fn = 0;
                                                fc = cy;
                                                PokeByte(WZ, H);
                                                break;
                                            case 0x15:
                                                // Opcode:    LD L,RL (IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // Flags:     SZ503P0C
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: L=[IX+n] / [IX+n]={CY,[IX+n]}<<CY / [IX+n]=L
                                                L = PeekByte(WZ);
                                                cy = (L & 0x80) >> 7;
                                                L = (((L << 1) & 0xfe) | fc) & 0xff;
                                                fs = L & FS;
                                                fz = (L == 0) ? FZ : 0;
                                                fp = Parity[L];
                                                f5 = L & F5;
                                                fh = 0;
                                                f3 = L & F3;
                                                fn = 0;
                                                fc = cy;
                                                PokeByte(WZ, L);
                                                break;
                                            case 0x16:
                                                // Opcode:    RL (IX$x) 
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // Flags:     SZ503P0C
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IX+n]={CY,[IX+n]}<<CY
                                                y = PeekByte(WZ);
                                                cy = (y & 0x80) >> 7;
                                                y = (((y << 1) & 0xfe) | fc) & 0xff;
                                                fs = y & FS;
                                                fz = (y == 0) ? FZ : 0;
                                                fp = Parity[y];
                                                f5 = y & F5;
                                                fh = 0;
                                                f3 = y & F3;
                                                fn = 0;
                                                fc = cy;
                                                PokeByte(WZ, y);
                                                break;
                                            case 0x17:
                                                // Opcode:    LD A,RL (IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // Flags:     SZ503P0C
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: A=[IX+n] / [IX+n]={CY,[IX+n]}<<CY / [IX+n]=A
                                                A = PeekByte(WZ);
                                                cy = (A & 0x80) >> 7;
                                                A = (((A << 1) & 0xfe) | fc) & 0xff;
                                                fs = A & FS;
                                                fz = (A == 0) ? FZ : 0;
                                                fp = Parity[A];
                                                f5 = A & F5;
                                                fh = 0;
                                                f3 = A & F3;
                                                fn = 0;
                                                fc = cy;
                                                PokeByte(WZ, A);
                                                break;
                                            case 0x18:
                                                // Opcode:    LD B,RR (IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // Flags:     SZ503P0C
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: B=[IX+n] / [IX+n]=CY>>{CY,[IX+n]} / [IX+n]=B
                                                B = PeekByte(WZ);
                                                cy = B & FC;
                                                B = ((B >> 1) & 0x7f) | (fc << 7);
                                                fs = B & FS;
                                                fz = (B == 0) ? FZ : 0;
                                                fp = Parity[B];
                                                f5 = B & F5;
                                                fh = 0;
                                                f3 = B & F3;
                                                fn = 0;
                                                fc = cy;
                                                PokeByte(WZ, B);
                                                break;
                                            case 0x19:
                                                // Opcode:    LD C,RR (IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // Flags:     SZ503P0C
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: C=[IX+n] / [IX+n]=CY>>{CY,[IX+n]} / [IX+n]=C
                                                C = PeekByte(WZ);
                                                cy = C & FC;
                                                C = ((C >> 1) & 0x7f) | (fc << 7);
                                                fs = C & FS;
                                                fz = (C == 0) ? FZ : 0;
                                                fp = Parity[C];
                                                f5 = C & F5;
                                                fh = 0;
                                                f3 = C & F3;
                                                fn = 0;
                                                fc = cy;
                                                PokeByte(WZ, C);
                                                break;
                                            case 0x1A:
                                                // Opcode:    LD D,RR (IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // Flags:     SZ503P0C
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: D=[IX+n] / [IX+n]=CY>>{CY,[IX+n]} / [IX+n]=D
                                                D = PeekByte(WZ);
                                                cy = D & FC;
                                                D = ((D >> 1) & 0x7f) | (fc << 7);
                                                fs = D & FS;
                                                fz = (D == 0) ? FZ : 0;
                                                fp = Parity[D];
                                                f5 = D & F5;
                                                fh = 0;
                                                f3 = D & F3;
                                                fn = 0;
                                                fc = cy;
                                                PokeByte(WZ, D);
                                                break;
                                            case 0x1B:
                                                // Opcode:    LD E,RR (IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // Flags:     SZ503P0C
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: E=[IX+n] / [IX+n]=CY>>{CY,[IX+n]} / [IX+n]=E
                                                E = PeekByte(WZ);
                                                cy = E & FC;
                                                E = ((E >> 1) & 0x7f) | (fc << 7);
                                                fs = E & FS;
                                                fz = (E == 0) ? FZ : 0;
                                                fp = Parity[E];
                                                f5 = E & F5;
                                                fh = 0;
                                                f3 = E & F3;
                                                fn = 0;
                                                fc = cy;
                                                PokeByte(WZ, E);
                                                break;
                                            case 0x1C:
                                                // Opcode:    LD H,RR (IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // Flags:     SZ503P0C
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: H=[IX+n] / [IX+n]=CY>>{CY,[IX+n]} / [IX+n]=H
                                                H = PeekByte(WZ);
                                                cy = H & FC;
                                                H = ((H >> 1) & 0x7f) | (fc << 7);
                                                fs = H & FS;
                                                fz = (H == 0) ? FZ : 0;
                                                fp = Parity[H];
                                                f5 = H & F5;
                                                fh = 0;
                                                f3 = H & F3;
                                                fn = 0;
                                                fc = cy;
                                                PokeByte(WZ, H);
                                                break;
                                            case 0x1D:
                                                // Opcode:    LD L,RR (IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // Flags:     SZ503P0C
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: L=[IX+n] / [IX+n]=CY>>{CY,[IX+n]} / [IX+n]=L
                                                L = PeekByte(WZ);
                                                cy = L & FC;
                                                L = ((L >> 1) & 0x7f) | (fc << 7);
                                                fs = L & FS;
                                                fz = (L == 0) ? FZ : 0;
                                                fp = Parity[L];
                                                f5 = L & F5;
                                                fh = 0;
                                                f3 = L & F3;
                                                fn = 0;
                                                fc = cy;
                                                PokeByte(WZ, L);
                                                break;
                                            case 0x1E:
                                                // Opcode:    RR (IX$x) 
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // Flags:     SZ503P0C
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IX+n]=CY>>{CY,[IX+n]}
                                                y = PeekByte(WZ);
                                                cy = y & FC;
                                                y = ((y >> 1) & 0x7f) | (fc << 7);
                                                fs = y & FS;
                                                fz = (y == 0) ? FZ : 0;
                                                fp = Parity[y];
                                                f5 = y & F5;
                                                fh = 0;
                                                f3 = y & F3;
                                                fn = 0;
                                                fc = cy;
                                                PokeByte(WZ, y);
                                                break;
                                            case 0x1F:
                                                // Opcode:    LD A,RR (IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // Flags:     SZ503P0C
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: A=[IX+n] / [IX+n]=CY>>{CY,[IX+n]} / [IX+n]=A
                                                A = PeekByte(WZ);
                                                cy = A & FC;
                                                A = ((A >> 1) & 0x7f) | (fc << 7);
                                                fs = A & FS;
                                                fz = (A == 0) ? FZ : 0;
                                                fp = Parity[A];
                                                f5 = A & F5;
                                                fh = 0;
                                                f3 = A & F3;
                                                fn = 0;
                                                fc = cy;
                                                PokeByte(WZ, A);
                                                break;
                                            case 0x20:
                                                // Opcode:    LD B,SLA (IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // Flags:     SZ503P0C
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: B=[IX+n] / [IX+n]=[IX+n]*2 / [IX+n]=B
                                                B = PeekByte(WZ);
                                                cy = ((B & 0x80) >> 7) & 0xff;
                                                x = ((B << 1) & 0xff);
                                                fs = x & FS;
                                                fz = ((x & 0xff) == 0) ? FZ : 0;
                                                f5 = x & F5;
                                                fh = 0;
                                                f3 = x & F3;
                                                fp = Parity[x & 0xff];
                                                fn = 0;
                                                fc = cy;
                                                B = x;
                                                PokeByte(WZ, B);
                                                break;
                                            case 0x21:
                                                // Opcode:    LD C,SLA (IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // Flags:     SZ503P0C
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: C=[IX+n] / [IX+n]=[IX+n]*2 / [IX+n]=C
                                                C = PeekByte(WZ);
                                                cy = ((C & 0x80) >> 7) & 0xff;
                                                x = ((C << 1) & 0xff);
                                                fs = x & FS;
                                                fz = ((x & 0xff) == 0) ? FZ : 0;
                                                f5 = x & F5;
                                                fh = 0;
                                                f3 = x & F3;
                                                fp = Parity[x & 0xff];
                                                fn = 0;
                                                fc = cy;
                                                C = x;
                                                PokeByte(WZ, C);
                                                break;
                                            case 0x22:
                                                // Opcode:    LD D,SLA (IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // Flags:     SZ503P0C
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: D=[IX+n] / [IX+n]=[IX+n]*2 / [IX+n]=D
                                                D = PeekByte(WZ);
                                                cy = ((D & 0x80) >> 7) & 0xff;
                                                x = ((D << 1) & 0xff);
                                                fs = x & FS;
                                                fz = ((x & 0xff) == 0) ? FZ : 0;
                                                f5 = x & F5;
                                                fh = 0;
                                                f3 = x & F3;
                                                fp = Parity[x & 0xff];
                                                fn = 0;
                                                fc = cy;
                                                D = x;
                                                PokeByte(WZ, D);
                                                break;
                                            case 0x23:
                                                // Opcode:    LD E,SLA (IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // Flags:     SZ503P0C
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: E=[IX+n] / [IX+n]=[IX+n]*2 / [IX+n]=E
                                                E = PeekByte(WZ);
                                                cy = ((E & 0x80) >> 7) & 0xff;
                                                x = ((E << 1) & 0xff);
                                                fs = x & FS;
                                                fz = ((x & 0xff) == 0) ? FZ : 0;
                                                f5 = x & F5;
                                                fh = 0;
                                                f3 = x & F3;
                                                fp = Parity[x & 0xff];
                                                fn = 0;
                                                fc = cy;
                                                E = x;
                                                PokeByte(WZ, E);
                                                break;
                                            case 0x24:
                                                // Opcode:    LD H,SLA (IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // Flags:     SZ503P0C
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: H=[IX+n] / [IX+n]=[IX+n]*2 / [IX+n]=H
                                                H = PeekByte(WZ);
                                                cy = ((H & 0x80) >> 7) & 0xff;
                                                x = ((H << 1) & 0xff);
                                                fs = x & FS;
                                                fz = ((x & 0xff) == 0) ? FZ : 0;
                                                f5 = x & F5;
                                                fh = 0;
                                                f3 = x & F3;
                                                fp = Parity[x & 0xff];
                                                fn = 0;
                                                fc = cy;
                                                H = x;
                                                PokeByte(WZ, H);
                                                break;
                                            case 0x25:
                                                // Opcode:    LD L,SLA (IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // Flags:     SZ503P0C
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: L=[IX+n] / [IX+n]=[IX+n]*2 / [IX+n]=L
                                                L = PeekByte(WZ);
                                                cy = ((L & 0x80) >> 7) & 0xff;
                                                x = ((L << 1) & 0xff);
                                                fs = x & FS;
                                                fz = ((x & 0xff) == 0) ? FZ : 0;
                                                f5 = x & F5;
                                                fh = 0;
                                                f3 = x & F3;
                                                fp = Parity[x & 0xff];
                                                fn = 0;
                                                fc = cy;
                                                L = x;
                                                PokeByte(WZ, L);
                                                break;
                                            case 0x26:
                                                // Opcode:    SLA (IX$x) 
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // Flags:     SZ503P0C
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IX+n]=[IX+n]*2
                                                y = PeekByte(WZ);
                                                cy = ((y & 0x80) >> 7) & 0xff;
                                                x = ((y << 1) & 0xff);
                                                fs = x & FS;
                                                fz = ((x & 0xff) == 0) ? FZ : 0;
                                                f5 = x & F5;
                                                fh = 0;
                                                f3 = x & F3;
                                                fp = Parity[x & 0xff];
                                                fn = 0;
                                                fc = cy;
                                                PokeByte(WZ, x);
                                                break;
                                            case 0x27:
                                                // Opcode:    LD A,SLA (IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // Flags:     SZ503P0C
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: A=[IX+n] / [IX+n]=[IX+n]*2 / [IX+n]=A
                                                A = PeekByte(WZ);
                                                cy = ((A & 0x80) >> 7) & 0xff;
                                                x = ((A << 1) & 0xff);
                                                fs = x & FS;
                                                fz = ((x & 0xff) == 0) ? FZ : 0;
                                                f5 = x & F5;
                                                fh = 0;
                                                f3 = x & F3;
                                                fp = Parity[x & 0xff];
                                                fn = 0;
                                                fc = cy;
                                                A = x;
                                                PokeByte(WZ, A);
                                                break;
                                            case 0x28:
                                                // Opcode:    LD B,SRA (IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // Flags:     SZ503P0C
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: B=[IX+n] / [IX+n]=(signed)[IX+n]/2 / [IX+n]=B
                                                B = PeekByte(WZ);
                                                b7 = B & 0x80;
                                                cy = B & FC;
                                                x = ((B >> 1) & 0xff) | b7;
                                                fs = x & FS;
                                                fz = ((x & 0xff) == 0) ? FZ : 0;
                                                f5 = x & F5;
                                                fh = 0;
                                                f3 = x & F3;
                                                fp = Parity[x & 0xff];
                                                fn = 0;
                                                fc = cy;
                                                B = x;
                                                PokeByte(WZ, B);
                                                break;
                                            case 0x29:
                                                // Opcode:    LD C,SRA (IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // Flags:     SZ503P0C
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: C=[IX+n] / [IX+n]=(signed)[IX+n]/2 / [IX+n]=C
                                                C = PeekByte(WZ);
                                                b7 = C & 0x80;
                                                cy = C & FC;
                                                x = ((C >> 1) & 0xff) | b7;
                                                fs = x & FS;
                                                fz = ((x & 0xff) == 0) ? FZ : 0;
                                                f5 = x & F5;
                                                fh = 0;
                                                f3 = x & F3;
                                                fp = Parity[x & 0xff];
                                                fn = 0;
                                                fc = cy;
                                                C = x;
                                                PokeByte(WZ, C);
                                                break;
                                            case 0x2A:
                                                // Opcode:    LD D,SRA (IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // Flags:     SZ503P0C
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: D=[IX+n] / [IX+n]=(signed)[IX+n]/2 / [IX+n]=D
                                                D = PeekByte(WZ);
                                                b7 = D & 0x80;
                                                cy = D & FC;
                                                x = ((D >> 1) & 0xff) | b7;
                                                fs = x & FS;
                                                fz = ((x & 0xff) == 0) ? FZ : 0;
                                                f5 = x & F5;
                                                fh = 0;
                                                f3 = x & F3;
                                                fp = Parity[x & 0xff];
                                                fn = 0;
                                                fc = cy;
                                                D = x;
                                                PokeByte(WZ, D);
                                                break;
                                            case 0x2B:
                                                // Opcode:    LD E,SRA (IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // Flags:     SZ503P0C
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: E=[IX+n] / [IX+n]=(signed)[IX+n]/2 / [IX+n]=E
                                                E = PeekByte(WZ);
                                                b7 = E & 0x80;
                                                cy = E & FC;
                                                x = ((E >> 1) & 0xff) | b7;
                                                fs = x & FS;
                                                fz = ((x & 0xff) == 0) ? FZ : 0;
                                                f5 = x & F5;
                                                fh = 0;
                                                f3 = x & F3;
                                                fp = Parity[x & 0xff];
                                                fn = 0;
                                                fc = cy;
                                                E = x;
                                                PokeByte(WZ, E);
                                                break;
                                            case 0x2C:
                                                // Opcode:    LD H,SRA (IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // Flags:     SZ503P0C
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: H=[IX+n] / [IX+n]=(signed)[IX+n]/2 / [IX+n]=H
                                                H = PeekByte(WZ);
                                                b7 = H & 0x80;
                                                cy = H & FC;
                                                x = ((H >> 1) & 0xff) | b7;
                                                fs = x & FS;
                                                fz = ((x & 0xff) == 0) ? FZ : 0;
                                                f5 = x & F5;
                                                fh = 0;
                                                f3 = x & F3;
                                                fp = Parity[x & 0xff];
                                                fn = 0;
                                                fc = cy;
                                                H = x;
                                                PokeByte(WZ, H);
                                                break;
                                            case 0x2D:
                                                // Opcode:    LD L,SRA (IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // Flags:     SZ503P0C
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: L=[IX+n] / [IX+n]=(signed)[IX+n]/2 / [IX+n]=L
                                                L = PeekByte(WZ);
                                                b7 = L & 0x80;
                                                cy = L & FC;
                                                x = ((L >> 1) & 0xff) | b7;
                                                fs = x & FS;
                                                fz = ((x & 0xff) == 0) ? FZ : 0;
                                                f5 = x & F5;
                                                fh = 0;
                                                f3 = x & F3;
                                                fp = Parity[x & 0xff];
                                                fn = 0;
                                                fc = cy;
                                                L = x;
                                                PokeByte(WZ, L);
                                                break;
                                            case 0x2E:
                                                // Opcode:    SRA (IX$x) 
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // Flags:     SZ503P0C
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IX+n]=(signed)[IX+n]/2
                                                y = PeekByte(WZ);
                                                b7 = y & 0x80;
                                                cy = y & FC;
                                                x = ((y >> 1) & 0xff) | b7;
                                                fs = x & FS;
                                                fz = ((x & 0xff) == 0) ? FZ : 0;
                                                f5 = x & F5;
                                                fh = 0;
                                                f3 = x & F3;
                                                fp = Parity[x & 0xff];
                                                fn = 0;
                                                fc = cy;
                                                PokeByte(WZ, x);
                                                break;
                                            case 0x2F:
                                                // Opcode:    LD A,SRA (IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // Flags:     SZ503P0C
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: A=[IX+n] / [IX+n]=(signed)[IX+n]/2 / [IX+n]=A
                                                A = PeekByte(WZ);
                                                b7 = A & 0x80;
                                                cy = A & FC;
                                                x = ((A >> 1) & 0xff) | b7;
                                                fs = x & FS;
                                                fz = ((x & 0xff) == 0) ? FZ : 0;
                                                f5 = x & F5;
                                                fh = 0;
                                                f3 = x & F3;
                                                fp = Parity[x & 0xff];
                                                fn = 0;
                                                fc = cy;
                                                A = x;
                                                PokeByte(WZ, A);
                                                break;
                                            case 0x30:
                                                // Opcode:    LD B,SLL (IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // Flags:     SZ503P0C
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: B=[IX+n] / [IX+n]=[IX+n]*2+1 / [IX+n]=B
                                                B = PeekByte(WZ);
                                                cy = (B & 0x80) >> 7;
                                                x = ((B << 1) & 0xff) | 1;
                                                fs = x & FS;
                                                fz = ((x & 0xff) == 0) ? FZ : 0;
                                                f5 = x & F5;
                                                fh = 0;
                                                f3 = x & F3;
                                                fp = Parity[x & 0xff];
                                                fn = 0;
                                                fc = cy;
                                                B = x;
                                                PokeByte(WZ, B);
                                                break;
                                            case 0x31:
                                                // Opcode:    LD C,SLL (IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // Flags:     SZ503P0C
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: C=[IX+n] / [IX+n]=[IX+n]*2+1 / [IX+n]=C
                                                C = PeekByte(WZ);
                                                cy = (C & 0x80) >> 7;
                                                x = ((C << 1) & 0xff) | 1;
                                                fs = x & FS;
                                                fz = ((x & 0xff) == 0) ? FZ : 0;
                                                f5 = x & F5;
                                                fh = 0;
                                                f3 = x & F3;
                                                fp = Parity[x & 0xff];
                                                fn = 0;
                                                fc = cy;
                                                C = x;
                                                PokeByte(WZ, C);
                                                break;
                                            case 0x32:
                                                // Opcode:    LD D,SLL (IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // Flags:     SZ503P0C
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: D=[IX+n] / [IX+n]=[IX+n]*2+1 / [IX+n]=D
                                                D = PeekByte(WZ);
                                                cy = (D & 0x80) >> 7;
                                                x = ((D << 1) & 0xff) | 1;
                                                fs = x & FS;
                                                fz = ((x & 0xff) == 0) ? FZ : 0;
                                                f5 = x & F5;
                                                fh = 0;
                                                f3 = x & F3;
                                                fp = Parity[x & 0xff];
                                                fn = 0;
                                                fc = cy;
                                                D = x;
                                                PokeByte(WZ, D);
                                                break;
                                            case 0x33:
                                                // Opcode:    LD E,SLL (IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // Flags:     SZ503P0C
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: E=[IX+n] / [IX+n]=[IX+n]*2+1 / [IX+n]=E
                                                E = PeekByte(WZ);
                                                cy = (E & 0x80) >> 7;
                                                x = ((E << 1) & 0xff) | 1;
                                                fs = x & FS;
                                                fz = ((x & 0xff) == 0) ? FZ : 0;
                                                f5 = x & F5;
                                                fh = 0;
                                                f3 = x & F3;
                                                fp = Parity[x & 0xff];
                                                fn = 0;
                                                fc = cy;
                                                E = x;
                                                PokeByte(WZ, E);
                                                break;
                                            case 0x34:
                                                // Opcode:    LD H,SLL (IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // Flags:     SZ503P0C
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: H=[IX+n] / [IX+n]=[IX+n]*2+1 / [IX+n]=H
                                                H = PeekByte(WZ);
                                                cy = (H & 0x80) >> 7;
                                                x = ((H << 1) & 0xff) | 1;
                                                fs = x & FS;
                                                fz = ((x & 0xff) == 0) ? FZ : 0;
                                                f5 = x & F5;
                                                fh = 0;
                                                f3 = x & F3;
                                                fp = Parity[x & 0xff];
                                                fn = 0;
                                                fc = cy;
                                                H = x;
                                                PokeByte(WZ, H);
                                                break;
                                            case 0x35:
                                                // Opcode:    LD L,SLL (IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // Flags:     SZ503P0C
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: L=[IX+n] / [IX+n]=[IX+n]*2+1 / [IX+n]=L
                                                L = PeekByte(WZ);
                                                cy = (L & 0x80) >> 7;
                                                x = ((L << 1) & 0xff) | 1;
                                                fs = x & FS;
                                                fz = ((x & 0xff) == 0) ? FZ : 0;
                                                f5 = x & F5;
                                                fh = 0;
                                                f3 = x & F3;
                                                fp = Parity[x & 0xff];
                                                fn = 0;
                                                fc = cy;
                                                L = x;
                                                PokeByte(WZ, L);
                                                break;
                                            case 0x36:
                                                // Opcode:    SLL (IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // Flags:     SZ503P0C
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IX+n]=[IX+n]*2+1
                                                y = PeekByte(WZ);
                                                cy = (y & 0x80) >> 7;
                                                x = ((y << 1) & 0xff) | 1;
                                                fs = x & FS;
                                                fz = ((x & 0xff) == 0) ? FZ : 0;
                                                f5 = x & F5;
                                                fh = 0;
                                                f3 = x & F3;
                                                fp = Parity[x & 0xff];
                                                fn = 0;
                                                fc = cy;
                                                PokeByte(WZ, x);
                                                break;
                                            case 0x37:
                                                // Opcode:    LD A,SLL (IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // Flags:     SZ503P0C
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: A=[IX+n] / [IX+n]=[IX+n]*2+1 / [IX+n]=A
                                                A = PeekByte(WZ);
                                                cy = (A & 0x80) >> 7;
                                                x = ((A << 1) & 0xff) | 1;
                                                fs = x & FS;
                                                fz = ((x & 0xff) == 0) ? FZ : 0;
                                                f5 = x & F5;
                                                fh = 0;
                                                f3 = x & F3;
                                                fp = Parity[x & 0xff];
                                                fn = 0;
                                                fc = cy;
                                                A = x;
                                                PokeByte(WZ, A);
                                                break;
                                            case 0x38:
                                                // Opcode:    LD B,SRL (IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // Flags:     SZ503P0C
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: B=[IX+n] / [IX+n]=(unsigned)[IX+n]/2 / [IX+n]=B
                                                B = PeekByte(WZ);
                                                cy = B & FC;
                                                x = ((B >> 1) & 0xff);
                                                fs = x & FS;
                                                fz = ((x & 0xff) == 0) ? FZ : 0;
                                                f5 = x & F5;
                                                fh = 0;
                                                f3 = x & F3;
                                                fp = Parity[x & 0xff];
                                                fn = 0;
                                                fc = cy;
                                                B = x;
                                                PokeByte(WZ, B);
                                                break;
                                            case 0x39:
                                                // Opcode:    LD C,SRL (IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // Flags:     SZ503P0C
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: C=[IX+n] / [IX+n]=(unsigned)[IX+n]/2 / [IX+n]=C
                                                C = PeekByte(WZ);
                                                cy = C & FC;
                                                x = ((C >> 1) & 0xff);
                                                fs = x & FS;
                                                fz = ((x & 0xff) == 0) ? FZ : 0;
                                                f5 = x & F5;
                                                fh = 0;
                                                f3 = x & F3;
                                                fp = Parity[x & 0xff];
                                                fn = 0;
                                                fc = cy;
                                                C = x;
                                                PokeByte(WZ, C);
                                                break;
                                            case 0x3A:
                                                // Opcode:    LD D,SRL (IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // Flags:     SZ503P0C
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: D=[IX+n] / [IX+n]=(unsigned)[IX+n]/2 / [IX+n]=D
                                                D = PeekByte(WZ);
                                                cy = D & FC;
                                                x = ((D >> 1) & 0xff);
                                                fs = x & FS;
                                                fz = ((x & 0xff) == 0) ? FZ : 0;
                                                f5 = x & F5;
                                                fh = 0;
                                                f3 = x & F3;
                                                fp = Parity[x & 0xff];
                                                fn = 0;
                                                fc = cy;
                                                D = x;
                                                PokeByte(WZ, D);
                                                break;
                                            case 0x3B:
                                                // Opcode:    LD E,SRL (IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // Flags:     SZ503P0C
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: E=[IX+n] / [IX+n]=(unsigned)[IX+n]/2 / [IX+n]=E
                                                E = PeekByte(WZ);
                                                cy = E & FC;
                                                x = ((E >> 1) & 0xff);
                                                fs = x & FS;
                                                fz = ((x & 0xff) == 0) ? FZ : 0;
                                                f5 = x & F5;
                                                fh = 0;
                                                f3 = x & F3;
                                                fp = Parity[x & 0xff];
                                                fn = 0;
                                                fc = cy;
                                                E = x;
                                                PokeByte(WZ, E);
                                                break;
                                            case 0x3C:
                                                // Opcode:    LD H,SRL (IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // Flags:     SZ503P0C
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: H=[IX+n] / [IX+n]=(unsigned)[IX+n]/2 / [IX+n]=H
                                                H = PeekByte(WZ);
                                                cy = H & FC;
                                                x = ((H >> 1) & 0xff);
                                                fs = x & FS;
                                                fz = ((x & 0xff) == 0) ? FZ : 0;
                                                f5 = x & F5;
                                                fh = 0;
                                                f3 = x & F3;
                                                fp = Parity[x & 0xff];
                                                fn = 0;
                                                fc = cy;
                                                H = x;
                                                PokeByte(WZ, H);
                                                break;
                                            case 0x3D:
                                                // Opcode:    LD L,SRL (IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // Flags:     SZ503P0C
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: L=[IX+n] / [IX+n]=(unsigned)[IX+n]/2 / [IX+n]=L
                                                L = PeekByte(WZ);
                                                cy = L & FC;
                                                x = ((L >> 1) & 0xff);
                                                fs = x & FS;
                                                fz = ((x & 0xff) == 0) ? FZ : 0;
                                                f5 = x & F5;
                                                fh = 0;
                                                f3 = x & F3;
                                                fp = Parity[x & 0xff];
                                                fn = 0;
                                                fc = cy;
                                                L = x;
                                                PokeByte(WZ, L);
                                                break;
                                            case 0x3E:
                                                // Opcode:    SRL (IX$x) 
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // Flags:     SZ503P0C
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IX+n]=(unsigned)[IX+n]/2
                                                y = PeekByte(WZ);
                                                cy = y & FC;
                                                x = ((y >> 1) & 0xff);
                                                fs = x & FS;
                                                fz = ((x & 0xff) == 0) ? FZ : 0;
                                                f5 = x & F5;
                                                fh = 0;
                                                f3 = x & F3;
                                                fp = Parity[x & 0xff];
                                                fn = 0;
                                                fc = cy;
                                                PokeByte(WZ, x);
                                                break;
                                            case 0x3F:
                                                // Opcode:    LD A,SRL (IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // Flags:     SZ503P0C
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: A=[IX+n] / [IX+n]=(unsigned)[IX+n]/2 / [IX+n]=A
                                                A = PeekByte(WZ);
                                                cy = A & FC;
                                                x = ((A >> 1) & 0xff);
                                                fs = x & FS;
                                                fz = ((x & 0xff) == 0) ? FZ : 0;
                                                f5 = x & F5;
                                                fh = 0;
                                                f3 = x & F3;
                                                fp = Parity[x & 0xff];
                                                fn = 0;
                                                fc = cy;
                                                A = x;
                                                PokeByte(WZ, A);
                                                break;
                                            case 0x40:
                                                // Opcode:    BIT 0,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4|pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1
                                                // Flags:     *Z513*0-
                                                //            * PV as Z
                                                //            * Behaves much like r AND 2^n
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IX+n]&{2^b}
                                                y = PeekByte(WZ);
                                                x = y & 0x01;
                                                fs = 0;
                                                fz = ((x == 0) ? FZ : 0);
                                                f5 = y & F5;
                                                fh = FH;
                                                f3 = y & F3;
                                                fp = ((x == 0) ? FP : 0);
                                                fn = 0;
                                                f5 = (WZ >> 8) & F5;
                                                f3 = (WZ >> 8) & F3;
                                                break;
                                            case 0x41:
                                                // Opcode:    BIT 0,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4|pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1
                                                // Flags:     *Z513*0-
                                                //            * PV as Z
                                                //            * Behaves much like r AND 2^n
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IX+n]&{2^b}
                                                y = PeekByte(WZ);
                                                x = y & 0x01;
                                                fs = 0;
                                                fz = ((x == 0) ? FZ : 0);
                                                f5 = y & F5;
                                                fh = FH;
                                                f3 = y & F3;
                                                fp = ((x == 0) ? FP : 0);
                                                fn = 0;
                                                f5 = (WZ >> 8) & F5;
                                                f3 = (WZ >> 8) & F3;
                                                break;
                                            case 0x42:
                                                // Opcode:    BIT 0,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4|pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1
                                                // Flags:     *Z513*0-
                                                //            * PV as Z
                                                //            * Behaves much like r AND 2^n
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IX+n]&{2^b}
                                                y = PeekByte(WZ);
                                                x = y & 0x01;
                                                fs = 0;
                                                fz = ((x == 0) ? FZ : 0);
                                                f5 = y & F5;
                                                fh = FH;
                                                f3 = y & F3;
                                                fp = ((x == 0) ? FP : 0);
                                                fn = 0;
                                                f5 = (WZ >> 8) & F5;
                                                f3 = (WZ >> 8) & F3;
                                                break;
                                            case 0x43:
                                                // Opcode:    BIT 0,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4|pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1
                                                // Flags:     *Z513*0-
                                                //            * PV as Z
                                                //            * Behaves much like r AND 2^n
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IX+n]&{2^b}
                                                y = PeekByte(WZ);
                                                x = y & 0x01;
                                                fs = 0;
                                                fz = ((x == 0) ? FZ : 0);
                                                f5 = y & F5;
                                                fh = FH;
                                                f3 = y & F3;
                                                fp = ((x == 0) ? FP : 0);
                                                fn = 0;
                                                f5 = (WZ >> 8) & F5;
                                                f3 = (WZ >> 8) & F3;
                                                break;
                                            case 0x44:
                                                // Opcode:    BIT 0,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4|pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1
                                                // Flags:     *Z513*0-
                                                //            * PV as Z
                                                //            * Behaves much like r AND 2^n
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IX+n]&{2^b}
                                                y = PeekByte(WZ);
                                                x = y & 0x01;
                                                fs = 0;
                                                fz = ((x == 0) ? FZ : 0);
                                                f5 = y & F5;
                                                fh = FH;
                                                f3 = y & F3;
                                                fp = ((x == 0) ? FP : 0);
                                                fn = 0;
                                                f5 = (WZ >> 8) & F5;
                                                f3 = (WZ >> 8) & F3;
                                                break;
                                            case 0x45:
                                                // Opcode:    BIT 0,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4|pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1
                                                // Flags:     *Z513*0-
                                                //            * PV as Z
                                                //            * Behaves much like r AND 2^n
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IX+n]&{2^b}
                                                y = PeekByte(WZ);
                                                x = y & 0x01;
                                                fs = 0;
                                                fz = ((x == 0) ? FZ : 0);
                                                f5 = y & F5;
                                                fh = FH;
                                                f3 = y & F3;
                                                fp = ((x == 0) ? FP : 0);
                                                fn = 0;
                                                f5 = (WZ >> 8) & F5;
                                                f3 = (WZ >> 8) & F3;
                                                break;
                                            case 0x46:
                                                // Opcode:    BIT 0,(IX$x) 
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4|pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1
                                                // Flags:     *Z513*0-
                                                //            * PV as Z
                                                //            * Behaves much like r AND 2^n
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IX+n]&{2^b}
                                                y = PeekByte(WZ);
                                                x = y & 0x01;
                                                fs = 0;
                                                fz = ((x == 0) ? FZ : 0);
                                                f5 = y & F5;
                                                fh = FH;
                                                f3 = y & F3;
                                                fp = ((x == 0) ? FP : 0);
                                                fn = 0;
                                                f5 = (WZ >> 8) & F5;
                                                f3 = (WZ >> 8) & F3;
                                                break;
                                            case 0x47:
                                                // Opcode:    BIT 0,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4|pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1
                                                // Flags:     *Z513*0-
                                                //            * PV as Z
                                                //            * Behaves much like r AND 2^n
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IX+n]&{2^b}
                                                y = PeekByte(WZ);
                                                x = y & 0x01;
                                                fs = 0;
                                                fz = ((x == 0) ? FZ : 0);
                                                f5 = y & F5;
                                                fh = FH;
                                                f3 = y & F3;
                                                fp = ((x == 0) ? FP : 0);
                                                fn = 0;
                                                f5 = (WZ >> 8) & F5;
                                                f3 = (WZ >> 8) & F3;
                                                break;
                                            case 0x48:
                                                // Opcode:    BIT 1,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4|pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1
                                                // Flags:     *Z513*0-
                                                //            * PV as Z
                                                //            * Behaves much like r AND 2^n
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IX+n]&{2^b}
                                                y = PeekByte(WZ);
                                                x = y & 0x02;
                                                fs = 0;
                                                fz = ((x == 0) ? FZ : 0);
                                                f5 = y & F5;
                                                fh = FH;
                                                f3 = y & F3;
                                                fp = ((x == 0) ? FP : 0);
                                                fn = 0;
                                                f5 = (WZ >> 8) & F5;
                                                f3 = (WZ >> 8) & F3;
                                                break;
                                            case 0x49:
                                                // Opcode:    BIT 1,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4|pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1
                                                // Flags:     *Z513*0-
                                                //            * PV as Z
                                                //            * Behaves much like r AND 2^n
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IX+n]&{2^b}
                                                y = PeekByte(WZ);
                                                x = y & 0x02;
                                                fs = 0;
                                                fz = ((x == 0) ? FZ : 0);
                                                f5 = y & F5;
                                                fh = FH;
                                                f3 = y & F3;
                                                fp = ((x == 0) ? FP : 0);
                                                fn = 0;
                                                f5 = (WZ >> 8) & F5;
                                                f3 = (WZ >> 8) & F3;
                                                break;
                                            case 0x4A:
                                                // Opcode:    BIT 1,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4|pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1
                                                // Flags:     *Z513*0-
                                                //            * PV as Z
                                                //            * Behaves much like r AND 2^n
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IX+n]&{2^b}
                                                y = PeekByte(WZ);
                                                x = y & 0x02;
                                                fs = 0;
                                                fz = ((x == 0) ? FZ : 0);
                                                f5 = y & F5;
                                                fh = FH;
                                                f3 = y & F3;
                                                fp = ((x == 0) ? FP : 0);
                                                fn = 0;
                                                f5 = (WZ >> 8) & F5;
                                                f3 = (WZ >> 8) & F3;
                                                break;
                                            case 0x4B:
                                                // Opcode:    BIT 1,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4|pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1
                                                // Flags:     *Z513*0-
                                                //            * PV as Z
                                                //            * Behaves much like r AND 2^n
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IX+n]&{2^b}
                                                y = PeekByte(WZ);
                                                x = y & 0x02;
                                                fs = 0;
                                                fz = ((x == 0) ? FZ : 0);
                                                f5 = y & F5;
                                                fh = FH;
                                                f3 = y & F3;
                                                fp = ((x == 0) ? FP : 0);
                                                fn = 0;
                                                f5 = (WZ >> 8) & F5;
                                                f3 = (WZ >> 8) & F3;
                                                break;
                                            case 0x4C:
                                                // Opcode:    BIT 1,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4|pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1
                                                // Flags:     *Z513*0-
                                                //            * PV as Z
                                                //            * Behaves much like r AND 2^n
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IX+n]&{2^b}
                                                y = PeekByte(WZ);
                                                x = y & 0x02;
                                                fs = 0;
                                                fz = ((x == 0) ? FZ : 0);
                                                f5 = y & F5;
                                                fh = FH;
                                                f3 = y & F3;
                                                fp = ((x == 0) ? FP : 0);
                                                fn = 0;
                                                f5 = (WZ >> 8) & F5;
                                                f3 = (WZ >> 8) & F3;
                                                break;
                                            case 0x4D:
                                                // Opcode:    BIT 1,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4|pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1
                                                // Flags:     *Z513*0-
                                                //            * PV as Z
                                                //            * Behaves much like r AND 2^n
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IX+n]&{2^b}
                                                y = PeekByte(WZ);
                                                x = y & 0x02;
                                                fs = 0;
                                                fz = ((x == 0) ? FZ : 0);
                                                f5 = y & F5;
                                                fh = FH;
                                                f3 = y & F3;
                                                fp = ((x == 0) ? FP : 0);
                                                fn = 0;
                                                f5 = (WZ >> 8) & F5;
                                                f3 = (WZ >> 8) & F3;
                                                break;
                                            case 0x4E:
                                                // Opcode:    BIT 1,(IX$x) 
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4|pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1
                                                // Flags:     *Z513*0-
                                                //            * PV as Z
                                                //            * Behaves much like r AND 2^n
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IX+n]&{2^b}
                                                y = PeekByte(WZ);
                                                x = y & 0x02;
                                                fs = 0;
                                                fz = ((x == 0) ? FZ : 0);
                                                f5 = y & F5;
                                                fh = FH;
                                                f3 = y & F3;
                                                fp = ((x == 0) ? FP : 0);
                                                fn = 0;
                                                f5 = (WZ >> 8) & F5;
                                                f3 = (WZ >> 8) & F3;
                                                break;
                                            case 0x4F:
                                                // Opcode:    BIT 1,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4|pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1
                                                // Flags:     *Z513*0-
                                                //            * PV as Z
                                                //            * Behaves much like r AND 2^n
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IX+n]&{2^b}
                                                y = PeekByte(WZ);
                                                x = y & 0x02;
                                                fs = 0;
                                                fz = ((x == 0) ? FZ : 0);
                                                f5 = y & F5;
                                                fh = FH;
                                                f3 = y & F3;
                                                fp = ((x == 0) ? FP : 0);
                                                fn = 0;
                                                f5 = (WZ >> 8) & F5;
                                                f3 = (WZ >> 8) & F3;
                                                break;
                                            case 0x50:
                                                // Opcode:    BIT 2,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4|pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1
                                                // Flags:     *Z513*0-
                                                //            * PV as Z
                                                //            * Behaves much like r AND 2^n
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IX+n]&{2^b}
                                                y = PeekByte(WZ);
                                                x = y & 0x04;
                                                fs = 0;
                                                fz = ((x == 0) ? FZ : 0);
                                                f5 = y & F5;
                                                fh = FH;
                                                f3 = y & F3;
                                                fp = ((x == 0) ? FP : 0);
                                                fn = 0;
                                                f5 = (WZ >> 8) & F5;
                                                f3 = (WZ >> 8) & F3;
                                                break;
                                            case 0x51:
                                                // Opcode:    BIT 2,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4|pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1
                                                // Flags:     *Z513*0-
                                                //            * PV as Z
                                                //            * Behaves much like r AND 2^n
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IX+n]&{2^b}
                                                y = PeekByte(WZ);
                                                x = y & 0x04;
                                                fs = 0;
                                                fz = ((x == 0) ? FZ : 0);
                                                f5 = y & F5;
                                                fh = FH;
                                                f3 = y & F3;
                                                fp = ((x == 0) ? FP : 0);
                                                fn = 0;
                                                f5 = (WZ >> 8) & F5;
                                                f3 = (WZ >> 8) & F3;
                                                break;
                                            case 0x52:
                                                // Opcode:    BIT 2,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4|pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1
                                                // Flags:     *Z513*0-
                                                //            * PV as Z
                                                //            * Behaves much like r AND 2^n
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IX+n]&{2^b}
                                                y = PeekByte(WZ);
                                                x = y & 0x04;
                                                fs = 0;
                                                fz = ((x == 0) ? FZ : 0);
                                                f5 = y & F5;
                                                fh = FH;
                                                f3 = y & F3;
                                                fp = ((x == 0) ? FP : 0);
                                                fn = 0;
                                                f5 = (WZ >> 8) & F5;
                                                f3 = (WZ >> 8) & F3;
                                                break;
                                            case 0x53:
                                                // Opcode:    BIT 2,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4|pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1
                                                // Flags:     *Z513*0-
                                                //            * PV as Z
                                                //            * Behaves much like r AND 2^n
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IX+n]&{2^b}
                                                y = PeekByte(WZ);
                                                x = y & 0x04;
                                                fs = 0;
                                                fz = ((x == 0) ? FZ : 0);
                                                f5 = y & F5;
                                                fh = FH;
                                                f3 = y & F3;
                                                fp = ((x == 0) ? FP : 0);
                                                fn = 0;
                                                f5 = (WZ >> 8) & F5;
                                                f3 = (WZ >> 8) & F3;
                                                break;
                                            case 0x54:
                                                // Opcode:    BIT 2,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4|pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1
                                                // Flags:     *Z513*0-
                                                //            * PV as Z
                                                //            * Behaves much like r AND 2^n
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IX+n]&{2^b}
                                                y = PeekByte(WZ);
                                                x = y & 0x04;
                                                fs = 0;
                                                fz = ((x == 0) ? FZ : 0);
                                                f5 = y & F5;
                                                fh = FH;
                                                f3 = y & F3;
                                                fp = ((x == 0) ? FP : 0);
                                                fn = 0;
                                                f5 = (WZ >> 8) & F5;
                                                f3 = (WZ >> 8) & F3;
                                                break;
                                            case 0x55:
                                                // Opcode:    BIT 2,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4|pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1
                                                // Flags:     *Z513*0-
                                                //            * PV as Z
                                                //            * Behaves much like r AND 2^n
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IX+n]&{2^b}
                                                y = PeekByte(WZ);
                                                x = y & 0x04;
                                                fs = 0;
                                                fz = ((x == 0) ? FZ : 0);
                                                f5 = y & F5;
                                                fh = FH;
                                                f3 = y & F3;
                                                fp = ((x == 0) ? FP : 0);
                                                fn = 0;
                                                f5 = (WZ >> 8) & F5;
                                                f3 = (WZ >> 8) & F3;
                                                break;
                                            case 0x56:
                                                // Opcode:    BIT 2,(IX$x) 
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4|pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1
                                                // Flags:     *Z513*0-
                                                //            * PV as Z
                                                //            * Behaves much like r AND 2^n
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IX+n]&{2^b}
                                                y = PeekByte(WZ);
                                                x = y & 0x04;
                                                fs = 0;
                                                fz = ((x == 0) ? FZ : 0);
                                                f5 = y & F5;
                                                fh = FH;
                                                f3 = y & F3;
                                                fp = ((x == 0) ? FP : 0);
                                                fn = 0;
                                                f5 = (WZ >> 8) & F5;
                                                f3 = (WZ >> 8) & F3;
                                                break;
                                            case 0x57:
                                                // Opcode:    BIT 2,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4|pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1
                                                // Flags:     *Z513*0-
                                                //            * PV as Z
                                                //            * Behaves much like r AND 2^n
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IX+n]&{2^b}
                                                y = PeekByte(WZ);
                                                x = y & 0x04;
                                                fs = 0;
                                                fz = ((x == 0) ? FZ : 0);
                                                f5 = y & F5;
                                                fh = FH;
                                                f3 = y & F3;
                                                fp = ((x == 0) ? FP : 0);
                                                fn = 0;
                                                f5 = (WZ >> 8) & F5;
                                                f3 = (WZ >> 8) & F3;
                                                break;
                                            case 0x58:
                                                // Opcode:    BIT 3,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4|pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1
                                                // Flags:     *Z513*0-
                                                //            * PV as Z
                                                //            * Behaves much like r AND 2^n
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IX+n]&{2^b}
                                                y = PeekByte(WZ);
                                                x = y & 0x08;
                                                fs = 0;
                                                fz = ((x == 0) ? FZ : 0);
                                                f5 = y & F5;
                                                fh = FH;
                                                f3 = y & F3;
                                                fp = ((x == 0) ? FP : 0);
                                                fn = 0;
                                                f5 = (WZ >> 8) & F5;
                                                f3 = (WZ >> 8) & F3;
                                                break;
                                            case 0x59:
                                                // Opcode:    BIT 3,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4|pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1
                                                // Flags:     *Z513*0-
                                                //            * PV as Z
                                                //            * Behaves much like r AND 2^n
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IX+n]&{2^b}
                                                y = PeekByte(WZ);
                                                x = y & 0x08;
                                                fs = 0;
                                                fz = ((x == 0) ? FZ : 0);
                                                f5 = y & F5;
                                                fh = FH;
                                                f3 = y & F3;
                                                fp = ((x == 0) ? FP : 0);
                                                fn = 0;
                                                f5 = (WZ >> 8) & F5;
                                                f3 = (WZ >> 8) & F3;
                                                break;
                                            case 0x5A:
                                                // Opcode:    BIT 3,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4|pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1
                                                // Flags:     *Z513*0-
                                                //            * PV as Z
                                                //            * Behaves much like r AND 2^n
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IX+n]&{2^b}
                                                y = PeekByte(WZ);
                                                x = y & 0x08;
                                                fs = 0;
                                                fz = ((x == 0) ? FZ : 0);
                                                f5 = y & F5;
                                                fh = FH;
                                                f3 = y & F3;
                                                fp = ((x == 0) ? FP : 0);
                                                fn = 0;
                                                f5 = (WZ >> 8) & F5;
                                                f3 = (WZ >> 8) & F3;
                                                break;
                                            case 0x5B:
                                                // Opcode:    BIT 3,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4|pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1
                                                // Flags:     *Z513*0-
                                                //            * PV as Z
                                                //            * Behaves much like r AND 2^n
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IX+n]&{2^b}
                                                y = PeekByte(WZ);
                                                x = y & 0x08;
                                                fs = 0;
                                                fz = ((x == 0) ? FZ : 0);
                                                f5 = y & F5;
                                                fh = FH;
                                                f3 = y & F3;
                                                fp = ((x == 0) ? FP : 0);
                                                fn = 0;
                                                f5 = (WZ >> 8) & F5;
                                                f3 = (WZ >> 8) & F3;
                                                break;
                                            case 0x5C:
                                                // Opcode:    BIT 3,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4|pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1
                                                // Flags:     *Z513*0-
                                                //            * PV as Z
                                                //            * Behaves much like r AND 2^n
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IX+n]&{2^b}
                                                y = PeekByte(WZ);
                                                x = y & 0x08;
                                                fs = 0;
                                                fz = ((x == 0) ? FZ : 0);
                                                f5 = y & F5;
                                                fh = FH;
                                                f3 = y & F3;
                                                fp = ((x == 0) ? FP : 0);
                                                fn = 0;
                                                f5 = (WZ >> 8) & F5;
                                                f3 = (WZ >> 8) & F3;
                                                break;
                                            case 0x5D:
                                                // Opcode:    BIT 3,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4|pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1
                                                // Flags:     *Z513*0-
                                                //            * PV as Z
                                                //            * Behaves much like r AND 2^n
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IX+n]&{2^b}
                                                y = PeekByte(WZ);
                                                x = y & 0x08;
                                                fs = 0;
                                                fz = ((x == 0) ? FZ : 0);
                                                f5 = y & F5;
                                                fh = FH;
                                                f3 = y & F3;
                                                fp = ((x == 0) ? FP : 0);
                                                fn = 0;
                                                f5 = (WZ >> 8) & F5;
                                                f3 = (WZ >> 8) & F3;
                                                break;
                                            case 0x5E:
                                                // Opcode:    BIT 3,(IX$x) 
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4|pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1
                                                // Flags:     *Z513*0-
                                                //            * PV as Z
                                                //            * Behaves much like r AND 2^n
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IX+n]&{2^b}
                                                y = PeekByte(WZ);
                                                x = y & 0x08;
                                                fs = 0;
                                                fz = ((x == 0) ? FZ : 0);
                                                f5 = y & F5;
                                                fh = FH;
                                                f3 = y & F3;
                                                fp = ((x == 0) ? FP : 0);
                                                fn = 0;
                                                f5 = (WZ >> 8) & F5;
                                                f3 = (WZ >> 8) & F3;
                                                break;
                                            case 0x5F:
                                                // Opcode:    BIT 3,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4|pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1
                                                // Flags:     *Z513*0-
                                                //            * PV as Z
                                                //            * Behaves much like r AND 2^n
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IX+n]&{2^b}
                                                y = PeekByte(WZ);
                                                x = y & 0x08;
                                                fs = 0;
                                                fz = ((x == 0) ? FZ : 0);
                                                f5 = y & F5;
                                                fh = FH;
                                                f3 = y & F3;
                                                fp = ((x == 0) ? FP : 0);
                                                fn = 0;
                                                f5 = (WZ >> 8) & F5;
                                                f3 = (WZ >> 8) & F3;
                                                break;
                                            case 0x60:
                                                // Opcode:    BIT 4,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4|pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1
                                                // Flags:     *Z513*0-
                                                //            * PV as Z
                                                //            * Behaves much like r AND 2^n
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IX+n]&{2^b}
                                                y = PeekByte(WZ);
                                                x = y & 0x10;
                                                fs = 0;
                                                fz = ((x == 0) ? FZ : 0);
                                                f5 = y & F5;
                                                fh = FH;
                                                f3 = y & F3;
                                                fp = ((x == 0) ? FP : 0);
                                                fn = 0;
                                                f5 = (WZ >> 8) & F5;
                                                f3 = (WZ >> 8) & F3;
                                                break;
                                            case 0x61:
                                                // Opcode:    BIT 4,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4|pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1
                                                // Flags:     *Z513*0-
                                                //            * PV as Z
                                                //            * Behaves much like r AND 2^n
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IX+n]&{2^b}
                                                y = PeekByte(WZ);
                                                x = y & 0x10;
                                                fs = 0;
                                                fz = ((x == 0) ? FZ : 0);
                                                f5 = y & F5;
                                                fh = FH;
                                                f3 = y & F3;
                                                fp = ((x == 0) ? FP : 0);
                                                fn = 0;
                                                f5 = (WZ >> 8) & F5;
                                                f3 = (WZ >> 8) & F3;
                                                break;
                                            case 0x62:
                                                // Opcode:    BIT 4,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4|pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1
                                                // Flags:     *Z513*0-
                                                //            * PV as Z
                                                //            * Behaves much like r AND 2^n
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IX+n]&{2^b}
                                                y = PeekByte(WZ);
                                                x = y & 0x10;
                                                fs = 0;
                                                fz = ((x == 0) ? FZ : 0);
                                                f5 = y & F5;
                                                fh = FH;
                                                f3 = y & F3;
                                                fp = ((x == 0) ? FP : 0);
                                                fn = 0;
                                                f5 = (WZ >> 8) & F5;
                                                f3 = (WZ >> 8) & F3;
                                                break;
                                            case 0x63:
                                                // Opcode:    BIT 4,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4|pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1
                                                // Flags:     *Z513*0-
                                                //            * PV as Z
                                                //            * Behaves much like r AND 2^n
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IX+n]&{2^b}
                                                y = PeekByte(WZ);
                                                x = y & 0x10;
                                                fs = 0;
                                                fz = ((x == 0) ? FZ : 0);
                                                f5 = y & F5;
                                                fh = FH;
                                                f3 = y & F3;
                                                fp = ((x == 0) ? FP : 0);
                                                fn = 0;
                                                f5 = (WZ >> 8) & F5;
                                                f3 = (WZ >> 8) & F3;
                                                break;
                                            case 0x64:
                                                // Opcode:    BIT 4,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4|pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1
                                                // Flags:     *Z513*0-
                                                //            * PV as Z
                                                //            * Behaves much like r AND 2^n
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IX+n]&{2^b}
                                                y = PeekByte(WZ);
                                                x = y & 0x10;
                                                fs = 0;
                                                fz = ((x == 0) ? FZ : 0);
                                                f5 = y & F5;
                                                fh = FH;
                                                f3 = y & F3;
                                                fp = ((x == 0) ? FP : 0);
                                                fn = 0;
                                                f5 = (WZ >> 8) & F5;
                                                f3 = (WZ >> 8) & F3;
                                                break;
                                            case 0x65:
                                                // Opcode:    BIT 4,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4|pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1
                                                // Flags:     *Z513*0-
                                                //            * PV as Z
                                                //            * Behaves much like r AND 2^n
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IX+n]&{2^b}
                                                y = PeekByte(WZ);
                                                x = y & 0x10;
                                                fs = 0;
                                                fz = ((x == 0) ? FZ : 0);
                                                f5 = y & F5;
                                                fh = FH;
                                                f3 = y & F3;
                                                fp = ((x == 0) ? FP : 0);
                                                fn = 0;
                                                f5 = (WZ >> 8) & F5;
                                                f3 = (WZ >> 8) & F3;
                                                break;
                                            case 0x66:
                                                // Opcode:    BIT 4,(IX$x) 
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4|pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1
                                                // Flags:     *Z513*0-
                                                //            * PV as Z
                                                //            * Behaves much like r AND 2^n
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IX+n]&{2^b}
                                                y = PeekByte(WZ);
                                                x = y & 0x10;
                                                fs = 0;
                                                fz = ((x == 0) ? FZ : 0);
                                                f5 = y & F5;
                                                fh = FH;
                                                f3 = y & F3;
                                                fp = ((x == 0) ? FP : 0);
                                                fn = 0;
                                                f5 = (WZ >> 8) & F5;
                                                f3 = (WZ >> 8) & F3;
                                                break;
                                            case 0x67:
                                                // Opcode:    BIT 4,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4|pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1
                                                // Flags:     *Z513*0-
                                                //            * PV as Z
                                                //            * Behaves much like r AND 2^n
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IX+n]&{2^b}
                                                y = PeekByte(WZ);
                                                x = y & 0x10;
                                                fs = 0;
                                                fz = ((x == 0) ? FZ : 0);
                                                f5 = y & F5;
                                                fh = FH;
                                                f3 = y & F3;
                                                fp = ((x == 0) ? FP : 0);
                                                fn = 0;
                                                f5 = (WZ >> 8) & F5;
                                                f3 = (WZ >> 8) & F3;
                                                break;
                                            case 0x68:
                                                // Opcode:    BIT 5,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4|pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1
                                                // Flags:     *Z513*0-
                                                //            * PV as Z
                                                //            * Behaves much like r AND 2^n
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IX+n]&{2^b}
                                                y = PeekByte(WZ);
                                                x = y & 0x20;
                                                fs = 0;
                                                fz = ((x == 0) ? FZ : 0);
                                                f5 = y & F5;
                                                fh = FH;
                                                f3 = y & F3;
                                                fp = ((x == 0) ? FP : 0);
                                                fn = 0;
                                                f5 = (WZ >> 8) & F5;
                                                f3 = (WZ >> 8) & F3;
                                                break;
                                            case 0x69:
                                                // Opcode:    BIT 5,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4|pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1
                                                // Flags:     *Z513*0-
                                                //            * PV as Z
                                                //            * Behaves much like r AND 2^n
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IX+n]&{2^b}
                                                y = PeekByte(WZ);
                                                x = y & 0x20;
                                                fs = 0;
                                                fz = ((x == 0) ? FZ : 0);
                                                f5 = y & F5;
                                                fh = FH;
                                                f3 = y & F3;
                                                fp = ((x == 0) ? FP : 0);
                                                fn = 0;
                                                f5 = (WZ >> 8) & F5;
                                                f3 = (WZ >> 8) & F3;
                                                break;
                                            case 0x6A:
                                                // Opcode:    BIT 5,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4|pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1
                                                // Flags:     *Z513*0-
                                                //            * PV as Z
                                                //            * Behaves much like r AND 2^n
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IX+n]&{2^b}
                                                y = PeekByte(WZ);
                                                x = y & 0x20;
                                                fs = 0;
                                                fz = ((x == 0) ? FZ : 0);
                                                f5 = y & F5;
                                                fh = FH;
                                                f3 = y & F3;
                                                fp = ((x == 0) ? FP : 0);
                                                fn = 0;
                                                f5 = (WZ >> 8) & F5;
                                                f3 = (WZ >> 8) & F3;
                                                break;
                                            case 0x6B:
                                                // Opcode:    BIT 5,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4|pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1
                                                // Flags:     *Z513*0-
                                                //            * PV as Z
                                                //            * Behaves much like r AND 2^n
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IX+n]&{2^b}
                                                y = PeekByte(WZ);
                                                x = y & 0x20;
                                                fs = 0;
                                                fz = ((x == 0) ? FZ : 0);
                                                f5 = y & F5;
                                                fh = FH;
                                                f3 = y & F3;
                                                fp = ((x == 0) ? FP : 0);
                                                fn = 0;
                                                f5 = (WZ >> 8) & F5;
                                                f3 = (WZ >> 8) & F3;
                                                break;
                                            case 0x6C:
                                                // Opcode:    BIT 5,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4|pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1
                                                // Flags:     *Z513*0-
                                                //            * PV as Z
                                                //            * Behaves much like r AND 2^n
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IX+n]&{2^b}
                                                y = PeekByte(WZ);
                                                x = y & 0x20;
                                                fs = 0;
                                                fz = ((x == 0) ? FZ : 0);
                                                f5 = y & F5;
                                                fh = FH;
                                                f3 = y & F3;
                                                fp = ((x == 0) ? FP : 0);
                                                fn = 0;
                                                f5 = (WZ >> 8) & F5;
                                                f3 = (WZ >> 8) & F3;
                                                break;
                                            case 0x6D:
                                                // Opcode:    BIT 5,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4|pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1
                                                // Flags:     *Z513*0-
                                                //            * PV as Z
                                                //            * Behaves much like r AND 2^n
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IX+n]&{2^b}
                                                y = PeekByte(WZ);
                                                x = y & 0x20;
                                                fs = 0;
                                                fz = ((x == 0) ? FZ : 0);
                                                f5 = y & F5;
                                                fh = FH;
                                                f3 = y & F3;
                                                fp = ((x == 0) ? FP : 0);
                                                fn = 0;
                                                f5 = (WZ >> 8) & F5;
                                                f3 = (WZ >> 8) & F3;
                                                break;
                                            case 0x6E:
                                                // Opcode:    BIT 5,(IX$x) 
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4|pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1
                                                // Flags:     *Z513*0-
                                                //            * PV as Z
                                                //            * Behaves much like r AND 2^n
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IX+n]&{2^b}
                                                y = PeekByte(WZ);
                                                x = y & 0x20;
                                                fs = 0;
                                                fz = ((x == 0) ? FZ : 0);
                                                f5 = y & F5;
                                                fh = FH;
                                                f3 = y & F3;
                                                fp = ((x == 0) ? FP : 0);
                                                fn = 0;
                                                f5 = (WZ >> 8) & F5;
                                                f3 = (WZ >> 8) & F3;
                                                break;
                                            case 0x6F:
                                                // Opcode:    BIT 5,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4|pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1
                                                // Flags:     *Z513*0-
                                                //            * PV as Z
                                                //            * Behaves much like r AND 2^n
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IX+n]&{2^b}
                                                y = PeekByte(WZ);
                                                x = y & 0x20;
                                                fs = 0;
                                                fz = ((x == 0) ? FZ : 0);
                                                f5 = y & F5;
                                                fh = FH;
                                                f3 = y & F3;
                                                fp = ((x == 0) ? FP : 0);
                                                fn = 0;
                                                f5 = (WZ >> 8) & F5;
                                                f3 = (WZ >> 8) & F3;
                                                break;
                                            case 0x70:
                                                // Opcode:    BIT 6,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4|pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1
                                                // Flags:     *Z513*0-
                                                //            * PV as Z
                                                //            * Behaves much like r AND 2^n
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IX+n]&{2^b}
                                                y = PeekByte(WZ);
                                                x = y & 0x40;
                                                fs = 0;
                                                fz = ((x == 0) ? FZ : 0);
                                                f5 = y & F5;
                                                fh = FH;
                                                f3 = y & F3;
                                                fp = ((x == 0) ? FP : 0);
                                                fn = 0;
                                                f5 = (WZ >> 8) & F5;
                                                f3 = (WZ >> 8) & F3;
                                                break;
                                            case 0x71:
                                                // Opcode:    BIT 6,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4|pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1
                                                // Flags:     *Z513*0-
                                                //            * PV as Z
                                                //            * Behaves much like r AND 2^n
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IX+n]&{2^b}
                                                y = PeekByte(WZ);
                                                x = y & 0x40;
                                                fs = 0;
                                                fz = ((x == 0) ? FZ : 0);
                                                f5 = y & F5;
                                                fh = FH;
                                                f3 = y & F3;
                                                fp = ((x == 0) ? FP : 0);
                                                fn = 0;
                                                f5 = (WZ >> 8) & F5;
                                                f3 = (WZ >> 8) & F3;
                                                break;
                                            case 0x72:
                                                // Opcode:    BIT 6,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4|pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1
                                                // Flags:     *Z513*0-
                                                //            * PV as Z
                                                //            * Behaves much like r AND 2^n
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IX+n]&{2^b}
                                                y = PeekByte(WZ);
                                                x = y & 0x40;
                                                fs = 0;
                                                fz = ((x == 0) ? FZ : 0);
                                                f5 = y & F5;
                                                fh = FH;
                                                f3 = y & F3;
                                                fp = ((x == 0) ? FP : 0);
                                                fn = 0;
                                                f5 = (WZ >> 8) & F5;
                                                f3 = (WZ >> 8) & F3;
                                                break;
                                            case 0x73:
                                                // Opcode:    BIT 6,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4|pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1
                                                // Flags:     *Z513*0-
                                                //            * PV as Z
                                                //            * Behaves much like r AND 2^n
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IX+n]&{2^b}
                                                y = PeekByte(WZ);
                                                x = y & 0x40;
                                                fs = 0;
                                                fz = ((x == 0) ? FZ : 0);
                                                f5 = y & F5;
                                                fh = FH;
                                                f3 = y & F3;
                                                fp = ((x == 0) ? FP : 0);
                                                fn = 0;
                                                f5 = (WZ >> 8) & F5;
                                                f3 = (WZ >> 8) & F3;
                                                break;
                                            case 0x74:
                                                // Opcode:    BIT 6,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4|pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1
                                                // Flags:     *Z513*0-
                                                //            * PV as Z
                                                //            * Behaves much like r AND 2^n
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IX+n]&{2^b}
                                                y = PeekByte(WZ);
                                                x = y & 0x40;
                                                fs = 0;
                                                fz = ((x == 0) ? FZ : 0);
                                                f5 = y & F5;
                                                fh = FH;
                                                f3 = y & F3;
                                                fp = ((x == 0) ? FP : 0);
                                                fn = 0;
                                                f5 = (WZ >> 8) & F5;
                                                f3 = (WZ >> 8) & F3;
                                                break;
                                            case 0x75:
                                                // Opcode:    BIT 6,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4|pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1
                                                // Flags:     *Z513*0-
                                                //            * PV as Z
                                                //            * Behaves much like r AND 2^n
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IX+n]&{2^b}
                                                y = PeekByte(WZ);
                                                x = y & 0x40;
                                                fs = 0;
                                                fz = ((x == 0) ? FZ : 0);
                                                f5 = y & F5;
                                                fh = FH;
                                                f3 = y & F3;
                                                fp = ((x == 0) ? FP : 0);
                                                fn = 0;
                                                f5 = (WZ >> 8) & F5;
                                                f3 = (WZ >> 8) & F3;
                                                break;
                                            case 0x76:
                                                // Opcode:    BIT 6,(IX$x) 
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4|pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1
                                                // Flags:     *Z513*0-
                                                //            * PV as Z
                                                //            * Behaves much like r AND 2^n
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IX+n]&{2^b}
                                                y = PeekByte(WZ);
                                                x = y & 0x40;
                                                fs = 0;
                                                fz = ((x == 0) ? FZ : 0);
                                                f5 = y & F5;
                                                fh = FH;
                                                f3 = y & F3;
                                                fp = ((x == 0) ? FP : 0);
                                                fn = 0;
                                                f5 = (WZ >> 8) & F5;
                                                f3 = (WZ >> 8) & F3;
                                                break;
                                            case 0x77:
                                                // Opcode:    BIT 6,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4|pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1
                                                // Flags:     *Z513*0-
                                                //            * PV as Z
                                                //            * Behaves much like r AND 2^n
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IX+n]&{2^b}
                                                y = PeekByte(WZ);
                                                x = y & 0x40;
                                                fs = 0;
                                                fz = ((x == 0) ? FZ : 0);
                                                f5 = y & F5;
                                                fh = FH;
                                                f3 = y & F3;
                                                fp = ((x == 0) ? FP : 0);
                                                fn = 0;
                                                f5 = (WZ >> 8) & F5;
                                                f3 = (WZ >> 8) & F3;
                                                break;
                                            case 0x78:
                                                // Opcode:    BIT 7,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4|pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1
                                                // Flags:     *Z513*0-
                                                //            * PV as Z
                                                //            * S set if b7 of r set
                                                //            * Behaves much like r AND 2^n
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IX+n]&{2^b}
                                                y = PeekByte(WZ);
                                                x = y & 0x80;
                                                fs = (x == 0 ? 0 : FS);
                                                fz = ((x == 0) ? FZ : 0);
                                                f5 = y & F5;
                                                fh = FH;
                                                f3 = y & F3;
                                                fp = ((x == 0) ? FP : 0);
                                                fn = 0;
                                                f5 = (WZ >> 8) & F5;
                                                f3 = (WZ >> 8) & F3;
                                                break;
                                            case 0x79:
                                                // Opcode:    BIT 7,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4|pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1
                                                // Flags:     *Z513*0-
                                                //            * PV as Z
                                                //            * S set if b7 of r set
                                                //            * Behaves much like r AND 2^n
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IX+n]&{2^b}
                                                y = PeekByte(WZ);
                                                x = y & 0x80;
                                                fs = (x == 0 ? 0 : FS);
                                                fz = ((x == 0) ? FZ : 0);
                                                f5 = y & F5;
                                                fh = FH;
                                                f3 = y & F3;
                                                fp = ((x == 0) ? FP : 0);
                                                fn = 0;
                                                f5 = (WZ >> 8) & F5;
                                                f3 = (WZ >> 8) & F3;
                                                break;
                                            case 0x7A:
                                                // Opcode:    BIT 7,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4|pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1
                                                // Flags:     *Z513*0-
                                                //            * PV as Z
                                                //            * S set if b7 of r set
                                                //            * Behaves much like r AND 2^n
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IX+n]&{2^b}
                                                y = PeekByte(WZ);
                                                x = y & 0x80;
                                                fs = (x == 0 ? 0 : FS);
                                                fz = ((x == 0) ? FZ : 0);
                                                f5 = y & F5;
                                                fh = FH;
                                                f3 = y & F3;
                                                fp = ((x == 0) ? FP : 0);
                                                fn = 0;
                                                f5 = (WZ >> 8) & F5;
                                                f3 = (WZ >> 8) & F3;
                                                break;
                                            case 0x7B:
                                                // Opcode:    BIT 7,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4|pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1
                                                // Flags:     *Z513*0-
                                                //            * PV as Z
                                                //            * S set if b7 of r set
                                                //            * Behaves much like r AND 2^n
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IX+n]&{2^b}
                                                y = PeekByte(WZ);
                                                x = y & 0x80;
                                                fs = (x == 0 ? 0 : FS);
                                                fz = ((x == 0) ? FZ : 0);
                                                f5 = y & F5;
                                                fh = FH;
                                                f3 = y & F3;
                                                fp = ((x == 0) ? FP : 0);
                                                fn = 0;
                                                f5 = (WZ >> 8) & F5;
                                                f3 = (WZ >> 8) & F3;
                                                break;
                                            case 0x7C:
                                                // Opcode:    BIT 7,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4|pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1
                                                // Flags:     *Z513*0-
                                                //            * PV as Z
                                                //            * S set if b7 of r set
                                                //            * Behaves much like r AND 2^n
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IX+n]&{2^b}
                                                y = PeekByte(WZ);
                                                x = y & 0x80;
                                                fs = (x == 0 ? 0 : FS);
                                                fz = ((x == 0) ? FZ : 0);
                                                f5 = y & F5;
                                                fh = FH;
                                                f3 = y & F3;
                                                fp = ((x == 0) ? FP : 0);
                                                fn = 0;
                                                f5 = (WZ >> 8) & F5;
                                                f3 = (WZ >> 8) & F3;
                                                break;
                                            case 0x7D:
                                                // Opcode:    BIT 7,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4|pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1
                                                // Flags:     *Z513*0-
                                                //            * PV as Z
                                                //            * S set if b7 of r set
                                                //            * Behaves much like r AND 2^n
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IX+n]&{2^b}
                                                y = PeekByte(WZ);
                                                x = y & 0x80;
                                                fs = (x == 0 ? 0 : FS);
                                                fz = ((x == 0) ? FZ : 0);
                                                f5 = y & F5;
                                                fh = FH;
                                                f3 = y & F3;
                                                fp = ((x == 0) ? FP : 0);
                                                fn = 0;
                                                f5 = (WZ >> 8) & F5;
                                                f3 = (WZ >> 8) & F3;
                                                break;
                                            case 0x7E:
                                                // Opcode:    BIT 7,(IX$x) 
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4|pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1
                                                // Flags:     *Z513*0-
                                                //            * PV as Z
                                                //            * S set if b7 of r set
                                                //            * Behaves much like r AND 2^n
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IX+n]&{2^b}
                                                y = PeekByte(WZ);
                                                x = y & 0x80;
                                                fs = (x == 0 ? 0 : FS);
                                                fz = ((x == 0) ? FZ : 0);
                                                f5 = y & F5;
                                                fh = FH;
                                                f3 = y & F3;
                                                fp = ((x == 0) ? FP : 0);
                                                fn = 0;
                                                f5 = (WZ >> 8) & F5;
                                                f3 = (WZ >> 8) & F3;
                                                break;
                                            case 0x7F:
                                                // Opcode:    BIT 7,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4|pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1
                                                // Flags:     *Z513*0-
                                                //            * PV as Z
                                                //            * S set if b7 of r set
                                                //            * Behaves much like r AND 2^n
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IX+n]&{2^b}
                                                y = PeekByte(WZ);
                                                x = y & 0x80;
                                                fs = (x == 0 ? 0 : FS);
                                                fz = ((x == 0) ? FZ : 0);
                                                f5 = y & F5;
                                                fh = FH;
                                                f3 = y & F3;
                                                fp = ((x == 0) ? FP : 0);
                                                fn = 0;
                                                f5 = (WZ >> 8) & F5;
                                                f3 = (WZ >> 8) & F3;
                                                break;
                                            case 0x80:
                                                // Opcode:    LD B,RES 0,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: B=[IX+n] / [IX+n]=[IX+n]&{~2^b} / [IX+n]=B
                                                B = PeekByte(WZ);
                                                B &= 0xFE;
                                                PokeByte(WZ, B);
                                                break;
                                            case 0x81:
                                                // Opcode:    LD C,RES 0,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: C=[IX+n] / [IX+n]=[IX+n]&{~2^b} / [IX+n]=C
                                                C = PeekByte(WZ);
                                                C &= 0xFE;
                                                PokeByte(WZ, C);
                                                break;
                                            case 0x82:
                                                // Opcode:    LD D,RES 0,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: D=[IX+n] / [IX+n]=[IX+n]&{~2^b} / [IX+n]=D
                                                D = PeekByte(WZ);
                                                D &= 0xFE;
                                                PokeByte(WZ, D);
                                                break;
                                            case 0x83:
                                                // Opcode:    LD E,RES 0,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: E=[IX+n] / [IX+n]=[IX+n]&{~2^b} / [IX+n]=E
                                                E = PeekByte(WZ);
                                                E &= 0xFE;
                                                PokeByte(WZ, E);
                                                break;
                                            case 0x84:
                                                // Opcode:    LD H,RES 0,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: H=[IX+n] / [IX+n]=[IX+n]&{~2^b} / [IX+n]=H
                                                H = PeekByte(WZ);
                                                H &= 0xFE;
                                                PokeByte(WZ, H);
                                                break;
                                            case 0x85:
                                                // Opcode:    LD L,RES 0,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: L=[IX+n] / [IX+n]=[IX+n]&{~2^b} / [IX+n]=L
                                                L = PeekByte(WZ);
                                                L &= 0xFE;
                                                PokeByte(WZ, L);
                                                break;
                                            case 0x86:
                                                // Opcode:    RES 0,(IX$x) 
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IX+n]=[IX+n]&{~2^b}
                                                x = PeekByte(WZ);
                                                x &= 0xFE;
                                                PokeByte(WZ, x);
                                                break;
                                            case 0x87:
                                                // Opcode:    LD A,RES 0,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: A=[IX+n] / [IX+n]=[IX+n]&{~2^b} / [IX+n]=A
                                                A = PeekByte(WZ);
                                                A &= 0xFE;
                                                PokeByte(WZ, A);
                                                break;
                                            case 0x88:
                                                // Opcode:    LD B,RES 1,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: B=[IX+n] / [IX+n]=[IX+n]&{~2^b} / [IX+n]=B
                                                B = PeekByte(WZ);
                                                B &= 0xFD;
                                                PokeByte(WZ, B);
                                                break;
                                            case 0x89:
                                                // Opcode:    LD C,RES 1,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: C=[IX+n] / [IX+n]=[IX+n]&{~2^b} / [IX+n]=C
                                                C = PeekByte(WZ);
                                                C &= 0xFD;
                                                PokeByte(WZ, C);
                                                break;
                                            case 0x8A:
                                                // Opcode:    LD D,RES 1,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: D=[IX+n] / [IX+n]=[IX+n]&{~2^b} / [IX+n]=D
                                                D = PeekByte(WZ);
                                                D &= 0xFD;
                                                PokeByte(WZ, D);
                                                break;
                                            case 0x8B:
                                                // Opcode:    LD E,RES 1,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: E=[IX+n] / [IX+n]=[IX+n]&{~2^b} / [IX+n]=E
                                                E = PeekByte(WZ);
                                                E &= 0xFD;
                                                PokeByte(WZ, E);
                                                break;
                                            case 0x8C:
                                                // Opcode:    LD H,RES 1,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: H=[IX+n] / [IX+n]=[IX+n]&{~2^b} / [IX+n]=H
                                                H = PeekByte(WZ);
                                                H &= 0xFD;
                                                PokeByte(WZ, H);
                                                break;
                                            case 0x8D:
                                                // Opcode:    LD L,RES 1,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: L=[IX+n] / [IX+n]=[IX+n]&{~2^b} / [IX+n]=L
                                                L = PeekByte(WZ);
                                                L &= 0xFD;
                                                PokeByte(WZ, L);
                                                break;
                                            case 0x8E:
                                                // Opcode:    RES 1,(IX$x) 
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IX+n]=[IX+n]&{~2^b}
                                                x = PeekByte(WZ);
                                                x &= 0xFD;
                                                PokeByte(WZ, x);
                                                break;
                                            case 0x8F:
                                                // Opcode:    LD A,RES 1,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: A=[IX+n] / [IX+n]=[IX+n]&{~2^b} / [IX+n]=A
                                                A = PeekByte(WZ);
                                                A &= 0xFD;
                                                PokeByte(WZ, A);
                                                break;
                                            case 0x90:
                                                // Opcode:    LD B,RES 2,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: B=[IX+n] / [IX+n]=[IX+n]&{~2^b} / [IX+n]=B
                                                B = PeekByte(WZ);
                                                B &= 0xFB;
                                                PokeByte(WZ, B);
                                                break;
                                            case 0x91:
                                                // Opcode:    LD C,RES 2,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: C=[IX+n] / [IX+n]=[IX+n]&{~2^b} / [IX+n]=C
                                                C = PeekByte(WZ);
                                                C &= 0xFB;
                                                PokeByte(WZ, C);
                                                break;
                                            case 0x92:
                                                // Opcode:    LD D,RES 2,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: D=[IX+n] / [IX+n]=[IX+n]&{~2^b} / [IX+n]=D
                                                D = PeekByte(WZ);
                                                D &= 0xFB;
                                                PokeByte(WZ, D);
                                                break;
                                            case 0x93:
                                                // Opcode:    LD E,RES 2,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: E=[IX+n] / [IX+n]=[IX+n]&{~2^b} / [IX+n]=E
                                                E = PeekByte(WZ);
                                                E &= 0xFB;
                                                PokeByte(WZ, E);
                                                break;
                                            case 0x94:
                                                // Opcode:    LD H,RES 2,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: H=[IX+n] / [IX+n]=[IX+n]&{~2^b} / [IX+n]=H
                                                H = PeekByte(WZ);
                                                H &= 0xFB;
                                                PokeByte(WZ, H);
                                                break;
                                            case 0x95:
                                                // Opcode:    LD L,RES 2,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: L=[IX+n] / [IX+n]=[IX+n]&{~2^b} / [IX+n]=L
                                                L = PeekByte(WZ);
                                                L &= 0xFB;
                                                PokeByte(WZ, L);
                                                break;
                                            case 0x96:
                                                // Opcode:    RES 2,(IX$x) 
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IX+n]=[IX+n]&{~2^b}
                                                x = PeekByte(WZ);
                                                x &= 0xFB;
                                                PokeByte(WZ, x);
                                                break;
                                            case 0x97:
                                                // Opcode:    LD A,RES 2,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: A=[IX+n] / [IX+n]=[IX+n]&{~2^b} / [IX+n]=A
                                                A = PeekByte(WZ);
                                                A &= 0xFB;
                                                PokeByte(WZ, A);
                                                break;
                                            case 0x98:
                                                // Opcode:    LD B,RES 3,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: B=[IX+n] / [IX+n]=[IX+n]&{~2^b} / [IX+n]=B
                                                B = PeekByte(WZ);
                                                B &= 0xF7;
                                                PokeByte(WZ, B);
                                                break;
                                            case 0x99:
                                                // Opcode:    LD C,RES 3,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: C=[IX+n] / [IX+n]=[IX+n]&{~2^b} / [IX+n]=C
                                                C = PeekByte(WZ);
                                                C &= 0xF7;
                                                PokeByte(WZ, C);
                                                break;
                                            case 0x9A:
                                                // Opcode:    LD D,RES 3,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: D=[IX+n] / [IX+n]=[IX+n]&{~2^b} / [IX+n]=D
                                                D = PeekByte(WZ);
                                                D &= 0xF7;
                                                PokeByte(WZ, D);
                                                break;
                                            case 0x9B:
                                                // Opcode:    LD E,RES 3,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: E=[IX+n] / [IX+n]=[IX+n]&{~2^b} / [IX+n]=E
                                                E = PeekByte(WZ);
                                                E &= 0xF7;
                                                PokeByte(WZ, E);
                                                break;
                                            case 0x9C:
                                                // Opcode:    LD H,RES 3,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: H=[IX+n] / [IX+n]=[IX+n]&{~2^b} / [IX+n]=H
                                                H = PeekByte(WZ);
                                                H &= 0xF7;
                                                PokeByte(WZ, H);
                                                break;
                                            case 0x9D:
                                                // Opcode:    LD L,RES 3,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: L=[IX+n] / [IX+n]=[IX+n]&{~2^b} / [IX+n]=L
                                                L = PeekByte(WZ);
                                                L &= 0xF7;
                                                PokeByte(WZ, L);
                                                break;
                                            case 0x9E:
                                                // Opcode:    RES 3,(IX$x) 
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IX+n]=[IX+n]&{~2^b}
                                                x = PeekByte(WZ);
                                                x &= 0xF7;
                                                PokeByte(WZ, x);
                                                break;
                                            case 0x9F:
                                                // Opcode:    LD A,RES 3,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: A=[IX+n] / [IX+n]=[IX+n]&{~2^b} / [IX+n]=A
                                                A = PeekByte(WZ);
                                                A &= 0xF7;
                                                PokeByte(WZ, A);
                                                break;
                                            case 0xA0:
                                                // Opcode:    LD B,RES 4,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: B=[IX+n] / [IX+n]=[IX+n]&{~2^b} / [IX+n]=B
                                                B = PeekByte(WZ);
                                                B &= 0xEF;
                                                PokeByte(WZ, B);
                                                break;
                                            case 0xA1:
                                                // Opcode:    LD C,RES 4,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: C=[IX+n] / [IX+n]=[IX+n]&{~2^b} / [IX+n]=C
                                                C = PeekByte(WZ);
                                                C &= 0xEF;
                                                PokeByte(WZ, C);
                                                break;
                                            case 0xA2:
                                                // Opcode:    LD D,RES 4,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: D=[IX+n] / [IX+n]=[IX+n]&{~2^b} / [IX+n]=D
                                                D = PeekByte(WZ);
                                                D &= 0xEF;
                                                PokeByte(WZ, D);
                                                break;
                                            case 0xA3:
                                                // Opcode:    LD E,RES 4,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: E=[IX+n] / [IX+n]=[IX+n]&{~2^b} / [IX+n]=E
                                                E = PeekByte(WZ);
                                                E &= 0xEF;
                                                PokeByte(WZ, E);
                                                break;
                                            case 0xA4:
                                                // Opcode:    LD H,RES 4,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: H=[IX+n] / [IX+n]=[IX+n]&{~2^b} / [IX+n]=H
                                                H = PeekByte(WZ);
                                                H &= 0xEF;
                                                PokeByte(WZ, H);
                                                break;
                                            case 0xA5:
                                                // Opcode:    LD L,RES 4,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: L=[IX+n] / [IX+n]=[IX+n]&{~2^b} / [IX+n]=L
                                                L = PeekByte(WZ);
                                                L &= 0xEF;
                                                PokeByte(WZ, L);
                                                break;
                                            case 0xA6:
                                                // Opcode:    RES 4,(IX$x) 
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IX+n]=[IX+n]&{~2^b}
                                                x = PeekByte(WZ);
                                                x &= 0xEF;
                                                PokeByte(WZ, x);
                                                break;
                                            case 0xA7:
                                                // Opcode:    LD A,RES 4,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: A=[IX+n] / [IX+n]=[IX+n]&{~2^b} / [IX+n]=A
                                                A = PeekByte(WZ);
                                                A &= 0xEF;
                                                PokeByte(WZ, A);
                                                break;
                                            case 0xA8:
                                                // Opcode:    LD B,RES 5,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: B=[IX+n] / [IX+n]=[IX+n]&{~2^b} / [IX+n]=B
                                                B = PeekByte(WZ);
                                                B &= 0xDF;
                                                PokeByte(WZ, B);
                                                break;
                                            case 0xA9:
                                                // Opcode:    LD C,RES 5,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: C=[IX+n] / [IX+n]=[IX+n]&{~2^b} / [IX+n]=C
                                                C = PeekByte(WZ);
                                                C &= 0xDF;
                                                PokeByte(WZ, C);
                                                break;
                                            case 0xAA:
                                                // Opcode:    LD D,RES 5,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: D=[IX+n] / [IX+n]=[IX+n]&{~2^b} / [IX+n]=D
                                                D = PeekByte(WZ);
                                                D &= 0xDF;
                                                PokeByte(WZ, D);
                                                break;
                                            case 0xAB:
                                                // Opcode:    LD E,RES 5,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: E=[IX+n] / [IX+n]=[IX+n]&{~2^b} / [IX+n]=E
                                                E = PeekByte(WZ);
                                                E &= 0xDF;
                                                PokeByte(WZ, E);
                                                break;
                                            case 0xAC:
                                                // Opcode:    LD H,RES 5,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: H=[IX+n] / [IX+n]=[IX+n]&{~2^b} / [IX+n]=H
                                                H = PeekByte(WZ);
                                                H &= 0xDF;
                                                PokeByte(WZ, H);
                                                break;
                                            case 0xAD:
                                                // Opcode:    LD L,RES 5,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: L=[IX+n] / [IX+n]=[IX+n]&{~2^b} / [IX+n]=L
                                                L = PeekByte(WZ);
                                                L &= 0xDF;
                                                PokeByte(WZ, L);
                                                break;
                                            case 0xAE:
                                                // Opcode:    RES 5,(IX$x) 
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IX+n]=[IX+n]&{~2^b}
                                                x = PeekByte(WZ);
                                                x &= 0xDF;
                                                PokeByte(WZ, x);
                                                break;
                                            case 0xAF:
                                                // Opcode:    LD A,RES 5,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: A=[IX+n] / [IX+n]=[IX+n]&{~2^b} / [IX+n]=A
                                                A = PeekByte(WZ);
                                                A &= 0xDF;
                                                PokeByte(WZ, A);
                                                break;
                                            case 0xB0:
                                                // Opcode:    LD B,RES 6,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: B=[IX+n] / [IX+n]=[IX+n]&{~2^b} / [IX+n]=B
                                                B = PeekByte(WZ);
                                                B &= 0xBF;
                                                PokeByte(WZ, B);
                                                break;
                                            case 0xB1:
                                                // Opcode:    LD C,RES 6,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: C=[IX+n] / [IX+n]=[IX+n]&{~2^b} / [IX+n]=C
                                                C = PeekByte(WZ);
                                                C &= 0xBF;
                                                PokeByte(WZ, C);
                                                break;
                                            case 0xB2:
                                                // Opcode:    LD D,RES 6,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: D=[IX+n] / [IX+n]=[IX+n]&{~2^b} / [IX+n]=D
                                                D = PeekByte(WZ);
                                                D &= 0xBF;
                                                PokeByte(WZ, D);
                                                break;
                                            case 0xB3:
                                                // Opcode:    LD E,RES 6,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: E=[IX+n] / [IX+n]=[IX+n]&{~2^b} / [IX+n]=E
                                                E = PeekByte(WZ);
                                                E &= 0xBF;
                                                PokeByte(WZ, E);
                                                break;
                                            case 0xB4:
                                                // Opcode:    LD H,RES 6,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: H=[IX+n] / [IX+n]=[IX+n]&{~2^b} / [IX+n]=H
                                                H = PeekByte(WZ);
                                                H &= 0xBF;
                                                PokeByte(WZ, H);
                                                break;
                                            case 0xB5:
                                                // Opcode:    LD L,RES 6,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: L=[IX+n] / [IX+n]=[IX+n]&{~2^b} / [IX+n]=L
                                                L = PeekByte(WZ);
                                                L &= 0xBF;
                                                PokeByte(WZ, L);
                                                break;
                                            case 0xB6:
                                                // Opcode:    RES 6,(IX$x) 
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IX+n]=[IX+n]&{~2^b}
                                                x = PeekByte(WZ);
                                                x &= 0xBF;
                                                PokeByte(WZ, x);
                                                break;
                                            case 0xB7:
                                                // Opcode:    LD A,RES 6,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: A=[IX+n] / [IX+n]=[IX+n]&{~2^b} / [IX+n]=A
                                                A = PeekByte(WZ);
                                                A &= 0xBF;
                                                PokeByte(WZ, A);
                                                break;
                                            case 0xB8:
                                                // Opcode:    LD B,RES 7,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: B=[IX+n] / [IX+n]=[IX+n]&{~2^b} / [IX+n]=B
                                                B = PeekByte(WZ);
                                                B &= 0x7F;
                                                PokeByte(WZ, B);
                                                break;
                                            case 0xB9:
                                                // Opcode:    LD C,RES 7,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: C=[IX+n] / [IX+n]=[IX+n]&{~2^b} / [IX+n]=C
                                                C = PeekByte(WZ);
                                                C &= 0x7F;
                                                PokeByte(WZ, C);
                                                break;
                                            case 0xBA:
                                                // Opcode:    LD D,RES 7,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: D=[IX+n] / [IX+n]=[IX+n]&{~2^b} / [IX+n]=D
                                                D = PeekByte(WZ);
                                                D &= 0x7F;
                                                PokeByte(WZ, D);
                                                break;
                                            case 0xBB:
                                                // Opcode:    LD E,RES 7,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: E=[IX+n] / [IX+n]=[IX+n]&{~2^b} / [IX+n]=E
                                                E = PeekByte(WZ);
                                                E &= 0x7F;
                                                PokeByte(WZ, E);
                                                break;
                                            case 0xBC:
                                                // Opcode:    LD H,RES 7,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: H=[IX+n] / [IX+n]=[IX+n]&{~2^b} / [IX+n]=H
                                                H = PeekByte(WZ);
                                                H &= 0x7F;
                                                PokeByte(WZ, H);
                                                break;
                                            case 0xBD:
                                                // Opcode:    LD L,RES 7,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: L=[IX+n] / [IX+n]=[IX+n]&{~2^b} / [IX+n]=L
                                                L = PeekByte(WZ);
                                                L &= 0x7F;
                                                PokeByte(WZ, L);
                                                break;
                                            case 0xBE:
                                                // Opcode:    RES 7,(IX$x) 
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IX+n]=[IX+n]&{~2^b}
                                                x = PeekByte(WZ);
                                                x &= 0x7F;
                                                PokeByte(WZ, x);
                                                break;
                                            case 0xBF:
                                                // Opcode:    LD A,RES 7,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: A=[IX+n] / [IX+n]=[IX+n]&{~2^b} / [IX+n]=A
                                                A = PeekByte(WZ);
                                                A &= 0x7F;
                                                PokeByte(WZ, A);
                                                break;
                                            case 0xC0:
                                                // Opcode:    LD B,SET 0,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: B=[IX+n] / [IX+n]=[IX+n]v{2^b} / [IX+n]=B
                                                B = PeekByte(WZ);
                                                B |= 0x01;
                                                PokeByte(WZ, B);
                                                break;
                                            case 0xC1:
                                                // Opcode:    LD C,SET 0,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: C=[IX+n] / [IX+n]=[IX+n]v{2^b} / [IX+n]=C
                                                C = PeekByte(WZ);
                                                C |= 0x01;
                                                PokeByte(WZ, C);
                                                break;
                                            case 0xC2:
                                                // Opcode:    LD D,SET 0,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: D=[IX+n] / [IX+n]=[IX+n]v{2^b} / [IX+n]=D
                                                D = PeekByte(WZ);
                                                D |= 0x01;
                                                PokeByte(WZ, D);
                                                break;
                                            case 0xC3:
                                                // Opcode:    LD E,SET 0,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: E=[IX+n] / [IX+n]=[IX+n]v{2^b} / [IX+n]=E
                                                E = PeekByte(WZ);
                                                E |= 0x01;
                                                PokeByte(WZ, E);
                                                break;
                                            case 0xC4:
                                                // Opcode:    LD H,SET 0,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: H=[IX+n] / [IX+n]=[IX+n]v{2^b} / [IX+n]=H
                                                H = PeekByte(WZ);
                                                H |= 0x01;
                                                PokeByte(WZ, H);
                                                break;
                                            case 0xC5:
                                                // Opcode:    LD L,SET 0,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: L=[IX+n] / [IX+n]=[IX+n]v{2^b} / [IX+n]=L
                                                L = PeekByte(WZ);
                                                L |= 0x01;
                                                PokeByte(WZ, L);
                                                break;
                                            case 0xC6:
                                                // Opcode:    SET 0,(IX$x) 
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IX+n]=[IX+n]v{2^b}
                                                x = PeekByte(WZ);
                                                x |= 0x01;
                                                PokeByte(WZ, x);
                                                break;
                                            case 0xC7:
                                                // Opcode:    LD A,SET 0,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: A=[IX+n] / [IX+n]=[IX+n]v{2^b} / [IX+n]=A
                                                A = PeekByte(WZ);
                                                A |= 0x01;
                                                PokeByte(WZ, A);
                                                break;
                                            case 0xC8:
                                                // Opcode:    LD B,SET 1,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: B=[IX+n] / [IX+n]=[IX+n]v{2^b} / [IX+n]=B
                                                B = PeekByte(WZ);
                                                B |= 0x02;
                                                PokeByte(WZ, B);
                                                break;
                                            case 0xC9:
                                                // Opcode:    LD C,SET 1,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: C=[IX+n] / [IX+n]=[IX+n]v{2^b} / [IX+n]=C
                                                C = PeekByte(WZ);
                                                C |= 0x02;
                                                PokeByte(WZ, C);
                                                break;
                                            case 0xCA:
                                                // Opcode:    LD D,SET 1,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: D=[IX+n] / [IX+n]=[IX+n]v{2^b} / [IX+n]=D
                                                D = PeekByte(WZ);
                                                D |= 0x02;
                                                PokeByte(WZ, D);
                                                break;
                                            case 0xCB:
                                                // Opcode:    LD E,SET 1,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: E=[IX+n] / [IX+n]=[IX+n]v{2^b} / [IX+n]=E
                                                E = PeekByte(WZ);
                                                E |= 0x02;
                                                PokeByte(WZ, E);
                                                break;
                                            case 0xCC:
                                                // Opcode:    LD H,SET 1,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: H=[IX+n] / [IX+n]=[IX+n]v{2^b} / [IX+n]=H
                                                H = PeekByte(WZ);
                                                H |= 0x02;
                                                PokeByte(WZ, H);
                                                break;
                                            case 0xCD:
                                                // Opcode:    LD L,SET 1,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: L=[IX+n] / [IX+n]=[IX+n]v{2^b} / [IX+n]=L
                                                L = PeekByte(WZ);
                                                L |= 0x02;
                                                PokeByte(WZ, L);
                                                break;
                                            case 0xCE:
                                                // Opcode:    SET 1,(IX$x) 
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IX+n]=[IX+n]v{2^b}
                                                x = PeekByte(WZ);
                                                x |= 0x02;
                                                PokeByte(WZ, x);
                                                break;
                                            case 0xCF:
                                                // Opcode:    LD A,SET 1,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: A=[IX+n] / [IX+n]=[IX+n]v{2^b} / [IX+n]=A
                                                A = PeekByte(WZ);
                                                A |= 0x02;
                                                PokeByte(WZ, A);
                                                break;
                                            case 0xD0:
                                                // Opcode:    LD B,SET 2,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: B=[IX+n] / [IX+n]=[IX+n]v{2^b} / [IX+n]=B
                                                B = PeekByte(WZ);
                                                B |= 0x04;
                                                PokeByte(WZ, B);
                                                break;
                                            case 0xD1:
                                                // Opcode:    LD C,SET 2,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: C=[IX+n] / [IX+n]=[IX+n]v{2^b} / [IX+n]=C
                                                C = PeekByte(WZ);
                                                C |= 0x04;
                                                PokeByte(WZ, C);
                                                break;
                                            case 0xD2:
                                                // Opcode:    LD D,SET 2,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: D=[IX+n] / [IX+n]=[IX+n]v{2^b} / [IX+n]=D
                                                D = PeekByte(WZ);
                                                D |= 0x04;
                                                PokeByte(WZ, D);
                                                break;
                                            case 0xD3:
                                                // Opcode:    LD E,SET 2,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: E=[IX+n] / [IX+n]=[IX+n]v{2^b} / [IX+n]=E
                                                E = PeekByte(WZ);
                                                E |= 0x04;
                                                PokeByte(WZ, E);
                                                break;
                                            case 0xD4:
                                                // Opcode:    LD H,SET 2,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: H=[IX+n] / [IX+n]=[IX+n]v{2^b} / [IX+n]=H
                                                H = PeekByte(WZ);
                                                H |= 0x04;
                                                PokeByte(WZ, H);
                                                break;
                                            case 0xD5:
                                                // Opcode:    LD L,SET 2,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: L=[IX+n] / [IX+n]=[IX+n]v{2^b} / [IX+n]=L
                                                L = PeekByte(WZ);
                                                L |= 0x04;
                                                PokeByte(WZ, L);
                                                break;
                                            case 0xD6:
                                                // Opcode:    SET 2,(IX$x) 
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IX+n]=[IX+n]v{2^b}
                                                x = PeekByte(WZ);
                                                x |= 0x04;
                                                PokeByte(WZ, x);
                                                break;
                                            case 0xD7:
                                                // Opcode:    LD A,SET 2,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: A=[IX+n] / [IX+n]=[IX+n]v{2^b} / [IX+n]=A
                                                A = PeekByte(WZ);
                                                A |= 0x04;
                                                PokeByte(WZ, A);
                                                break;
                                            case 0xD8:
                                                // Opcode:    LD B,SET 3,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: B=[IX+n] / [IX+n]=[IX+n]v{2^b} / [IX+n]=B
                                                B = PeekByte(WZ);
                                                B |= 0x08;
                                                PokeByte(WZ, B);
                                                break;
                                            case 0xD9:
                                                // Opcode:    LD C,SET 3,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: C=[IX+n] / [IX+n]=[IX+n]v{2^b} / [IX+n]=C
                                                C = PeekByte(WZ);
                                                C |= 0x08;
                                                PokeByte(WZ, C);
                                                break;
                                            case 0xDA:
                                                // Opcode:    LD D,SET 3,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: D=[IX+n] / [IX+n]=[IX+n]v{2^b} / [IX+n]=D
                                                D = PeekByte(WZ);
                                                D |= 0x08;
                                                PokeByte(WZ, D);
                                                break;
                                            case 0xDB:
                                                // Opcode:    LD E,SET 3,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: E=[IX+n] / [IX+n]=[IX+n]v{2^b} / [IX+n]=E
                                                E = PeekByte(WZ);
                                                E |= 0x08;
                                                PokeByte(WZ, E);
                                                break;
                                            case 0xDC:
                                                // Opcode:    LD H,SET 3,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: H=[IX+n] / [IX+n]=[IX+n]v{2^b} / [IX+n]=H
                                                H = PeekByte(WZ);
                                                H |= 0x08;
                                                PokeByte(WZ, H);
                                                break;
                                            case 0xDD:
                                                // Opcode:    LD L,SET 3,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: L=[IX+n] / [IX+n]=[IX+n]v{2^b} / [IX+n]=L
                                                L = PeekByte(WZ);
                                                L |= 0x08;
                                                PokeByte(WZ, L);
                                                break;
                                            case 0xDE:
                                                // Opcode:    SET 3,(IX$x) 
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IX+n]=[IX+n]v{2^b}
                                                x = PeekByte(WZ);
                                                x |= 0x08;
                                                PokeByte(WZ, x);
                                                break;
                                            case 0xDF:
                                                // Opcode:    LD A,SET 3,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: A=[IX+n] / [IX+n]=[IX+n]v{2^b} / [IX+n]=A
                                                A = PeekByte(WZ);
                                                A |= 0x08;
                                                PokeByte(WZ, A);
                                                break;
                                            case 0xE0:
                                                // Opcode:    LD B,SET 4,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: B=[IX+n] / [IX+n]=[IX+n]v{2^b} / [IX+n]=B
                                                B = PeekByte(WZ);
                                                B |= 0x10;
                                                PokeByte(WZ, B);
                                                break;
                                            case 0xE1:
                                                // Opcode:    LD C,SET 4,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: C=[IX+n] / [IX+n]=[IX+n]v{2^b} / [IX+n]=C
                                                C = PeekByte(WZ);
                                                C |= 0x10;
                                                PokeByte(WZ, C);
                                                break;
                                            case 0xE2:
                                                // Opcode:    LD D,SET 4,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: D=[IX+n] / [IX+n]=[IX+n]v{2^b} / [IX+n]=D
                                                D = PeekByte(WZ);
                                                D |= 0x10;
                                                PokeByte(WZ, D);
                                                break;
                                            case 0xE3:
                                                // Opcode:    LD E,SET 4,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: E=[IX+n] / [IX+n]=[IX+n]v{2^b} / [IX+n]=E
                                                E = PeekByte(WZ);
                                                E |= 0x10;
                                                PokeByte(WZ, E);
                                                break;
                                            case 0xE4:
                                                // Opcode:    LD H,SET 4,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: H=[IX+n] / [IX+n]=[IX+n]v{2^b} / [IX+n]=H
                                                H = PeekByte(WZ);
                                                H |= 0x10;
                                                PokeByte(WZ, H);
                                                break;
                                            case 0xE5:
                                                // Opcode:    LD L,SET 4,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: L=[IX+n] / [IX+n]=[IX+n]v{2^b} / [IX+n]=L
                                                L = PeekByte(WZ);
                                                L |= 0x10;
                                                PokeByte(WZ, L);
                                                break;
                                            case 0xE6:
                                                // Opcode:    SET 4,(IX$x) 
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IX+n]=[IX+n]v{2^b}
                                                x = PeekByte(WZ);
                                                x |= 0x10;
                                                PokeByte(WZ, x);
                                                break;
                                            case 0xE7:
                                                // Opcode:    LD A,SET 4,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: A=[IX+n] / [IX+n]=[IX+n]v{2^b} / [IX+n]=A
                                                A = PeekByte(WZ);
                                                A |= 0x10;
                                                PokeByte(WZ, A);
                                                break;
                                            case 0xE8:
                                                // Opcode:    LD B,SET 5,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: B=[IX+n] / [IX+n]=[IX+n]v{2^b} / [IX+n]=B
                                                B = PeekByte(WZ);
                                                B |= 0x20;
                                                PokeByte(WZ, B);
                                                break;
                                            case 0xE9:
                                                // Opcode:    LD C,SET 5,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: C=[IX+n] / [IX+n]=[IX+n]v{2^b} / [IX+n]=C
                                                C = PeekByte(WZ);
                                                C |= 0x20;
                                                PokeByte(WZ, C);
                                                break;
                                            case 0xEA:
                                                // Opcode:    LD D,SET 5,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: D=[IX+n] / [IX+n]=[IX+n]v{2^b} / [IX+n]=D
                                                D = PeekByte(WZ);
                                                D |= 0x20;
                                                PokeByte(WZ, D);
                                                break;
                                            case 0xEB:
                                                // Opcode:    LD E,SET 5,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: E=[IX+n] / [IX+n]=[IX+n]v{2^b} / [IX+n]=E
                                                E = PeekByte(WZ);
                                                E |= 0x20;
                                                PokeByte(WZ, E);
                                                break;
                                            case 0xEC:
                                                // Opcode:    LD H,SET 5,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: H=[IX+n] / [IX+n]=[IX+n]v{2^b} / [IX+n]=H
                                                H = PeekByte(WZ);
                                                H |= 0x20;
                                                PokeByte(WZ, H);
                                                break;
                                            case 0xED:
                                                // Opcode:    LD L,SET 5,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: L=[IX+n] / [IX+n]=[IX+n]v{2^b} / [IX+n]=L
                                                L = PeekByte(WZ);
                                                L |= 0x20;
                                                PokeByte(WZ, L);
                                                break;
                                            case 0xEE:
                                                // Opcode:    SET 5,(IX$x) 
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IX+n]=[IX+n]v{2^b}
                                                x = PeekByte(WZ);
                                                x |= 0x20;
                                                PokeByte(WZ, x);
                                                break;
                                            case 0xEF:
                                                // Opcode:    LD A,SET 5,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: A=[IX+n] / [IX+n]=[IX+n]v{2^b} / [IX+n]=A
                                                A = PeekByte(WZ);
                                                A |= 0x20;
                                                PokeByte(WZ, A);
                                                break;
                                            case 0xF0:
                                                // Opcode:    LD B,SET 6,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: B=[IX+n] / [IX+n]=[IX+n]v{2^b} / [IX+n]=B
                                                B = PeekByte(WZ);
                                                B |= 0x40;
                                                PokeByte(WZ, B);
                                                break;
                                            case 0xF1:
                                                // Opcode:    LD C,SET 6,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: C=[IX+n] / [IX+n]=[IX+n]v{2^b} / [IX+n]=C
                                                C = PeekByte(WZ);
                                                C |= 0x40;
                                                PokeByte(WZ, C);
                                                break;
                                            case 0xF2:
                                                // Opcode:    LD D,SET 6,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: D=[IX+n] / [IX+n]=[IX+n]v{2^b} / [IX+n]=D
                                                D = PeekByte(WZ);
                                                D |= 0x40;
                                                PokeByte(WZ, D);
                                                break;
                                            case 0xF3:
                                                // Opcode:    LD E,SET 6,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: E=[IX+n] / [IX+n]=[IX+n]v{2^b} / [IX+n]=E
                                                E = PeekByte(WZ);
                                                E |= 0x40;
                                                PokeByte(WZ, E);
                                                break;
                                            case 0xF4:
                                                // Opcode:    LD H,SET 6,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: H=[IX+n] / [IX+n]=[IX+n]v{2^b} / [IX+n]=H
                                                H = PeekByte(WZ);
                                                H |= 0x40;
                                                PokeByte(WZ, H);
                                                break;
                                            case 0xF5:
                                                // Opcode:    LD L,SET 6,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: L=[IX+n] / [IX+n]=[IX+n]v{2^b} / [IX+n]=L
                                                L = PeekByte(WZ);
                                                L |= 0x40;
                                                PokeByte(WZ, L);
                                                break;
                                            case 0xF6:
                                                // Opcode:    SET 6,(IX$x) 
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IX+n]=[IX+n]v{2^b}
                                                x = PeekByte(WZ);
                                                x |= 0x40;
                                                PokeByte(WZ, x);
                                                break;
                                            case 0xF7:
                                                // Opcode:    LD A,SET 6,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: A=[IX+n] / [IX+n]=[IX+n]v{2^b} / [IX+n]=A
                                                A = PeekByte(WZ);
                                                A |= 0x40;
                                                PokeByte(WZ, A);
                                                break;
                                            case 0xF8:
                                                // Opcode:    LD B,SET 7,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: B=[IX+n] / [IX+n]=[IX+n]v{2^b} / [IX+n]=B
                                                B = PeekByte(WZ);
                                                B |= 0x80;
                                                PokeByte(WZ, B);
                                                break;
                                            case 0xF9:
                                                // Opcode:    LD C,SET 7,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: C=[IX+n] / [IX+n]=[IX+n]v{2^b} / [IX+n]=C
                                                C = PeekByte(WZ);
                                                C |= 0x80;
                                                PokeByte(WZ, C);
                                                break;
                                            case 0xFA:
                                                // Opcode:    LD D,SET 7,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: D=[IX+n] / [IX+n]=[IX+n]v{2^b} / [IX+n]=D
                                                D = PeekByte(WZ);
                                                D |= 0x80;
                                                PokeByte(WZ, D);
                                                break;
                                            case 0xFB:
                                                // Opcode:    LD E,SET 7,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: E=[IX+n] / [IX+n]=[IX+n]v{2^b} / [IX+n]=E
                                                E = PeekByte(WZ);
                                                E |= 0x80;
                                                PokeByte(WZ, E);
                                                break;
                                            case 0xFC:
                                                // Opcode:    LD H,SET 7,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: H=[IX+n] / [IX+n]=[IX+n]v{2^b} / [IX+n]=H
                                                H = PeekByte(WZ);
                                                H |= 0x80;
                                                PokeByte(WZ, H);
                                                break;
                                            case 0xFD:
                                                // Opcode:    LD L,SET 7,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: L=[IX+n] / [IX+n]=[IX+n]v{2^b} / [IX+n]=L
                                                L = PeekByte(WZ);
                                                L |= 0x80;
                                                PokeByte(WZ, L);
                                                break;
                                            case 0xFE:
                                                // Opcode:    SET 7,(IX$x) 
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IX+n]=[IX+n]v{2^b}
                                                x = PeekByte(WZ);
                                                x |= 0x80;
                                                PokeByte(WZ, x);
                                                break;
                                            case 0xFF:
                                                // Opcode:    LD A,SET 7,(IX$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: A=[IX+n] / [IX+n]=[IX+n]v{2^b} / [IX+n]=A
                                                A = PeekByte(WZ);
                                                A |= 0x80;
                                                PokeByte(WZ, A);
                                                break;
                                        }
                                    }
                                    break;
                                #endregion  AfterCB
                                case 0xE1:
                                    // Opcode:    POP IX
                                    // TStates:   14
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    //            M2, 3 T States - Stack Read of High Byte
                                    //            M3, 3 T States - Stack Read of Low Byte
                                    // MCycles2:  pc:4,sp:3,sp+1:3
                                    // Operation: IX=[SP,SP+1],SP+,SP+
                                    IX = (PeekByte(SP++) + (PeekByte(SP++) << 8));
                                    break;
                                case 0xE3:
                                    // Opcode:    EX (SP),IX
                                    // TStates:   23
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    //            M2, 3 T States - Stack Read of Low Byte
                                    //            M3, 4 T States - Stack Read of High Byte
                                    //            M4, 3 T States - Stack Write of High Byte
                                    //            M5, 5 T States - Stack Write of Low byte
                                    // MCycles2:  pc:4,pc+1:4,sp:3,sp+1:4,sp(write):3,sp+1(write):5
                                    // Operation: [SP]<->IX
                                    WZ = IX;
                                    IX = (PeekByte(SP++) + (PeekByte(SP) << 8));
                                    AddCycles(SP, 1);
                                    PokeByte((SP--) & 0xffff, WZ >> 8);
                                    PokeByte(SP, WZ & 0xff);
                                    AddCycles(SP, 2);
                                    WZ = IX;
                                    break;
                                case 0xE5:
                                    // Opcode:    PUSH IX
                                    // TStates:   15
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 5 T States - Op Code Fetch
                                    //            M2, 3 T States - Stack Write of High Byte
                                    //            M3, 3 T States - Stack Write of Low byte
                                    // MCycles2:  pc:5,sp-1:3,sp-2:3
                                    // Operation: -SP,-SP,[SP,SP+1]=IX
                                    AddCycles(IR, 1);
                                    PokeByte(--SP, IX >> 8);
                                    PokeByte(--SP, IX & 0xff);
                                    break;
                                case 0xE9:
                                    // Opcode:    JP (IX) 
                                    // Attributes:Branch, Terminal
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1|4
                                    // Operation: PC=IX
                                    PC = IX;
                                    // Pass control to the Virtual function Jump
                                    Jump(Opcode, PreExecutePC);

                                    break;
                                case 0xF9:
                                    // Opcode:    LD SP,IX
                                    // TStates:   10
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 6 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:6
                                    // Operation: SP=IX
                                    AddCycles(IR, 2);
                                    SP = IX;
                                    break;
                                default:
                                    goto Decoder;
                            }
                        }
                        break;
                    #endregion  AfterDD
                    case 0xDE:
                        // Opcode:    SBC A,$b
                        // Attributes:Byte, Direct
                        // TStates:   7
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        //            M1, 3 T States - Operand Data Read
                        // MCycles2:  pc:4,pc+1:3
                        // Flags:     SZ5H3VNC
                        // Operation: A = A - N - CY
                        y = PeekByte(PC++);
                        x = (A - y - fc) & 0xff;
                        fs = x & FS;
                        fz = (x & 0xff) == 0 ? FZ : 0;
                        f5 = x & F5;
                        fh = (((A & 0x0f) - (y & 0x0f) - fc) & 0x10) != 0 ? FH : 0;
                        f3 = x & F3;
                        fp = (((A ^ y) & (A ^ x)) & 0x80) != 0 ? FV : 0;
                        fn = FN;
                        fc = ((A - y - fc) & 0x100) != 0 ? FC : 0;
                        A = x;
                        break;
                    case 0xDF:
                        // Opcode:    RST 18H
                        // Attributes:Restart
                        // TStates:   11
                        // MCycles:   M0, 5 T States - Op Code Fetch
                        //            M1, 3 T States - Stack Write of High Byte
                        //            M2, 3 T States - Stack Write of Low byte
                        // MCycles2:  pc:5,sp-1:3,sp-2:3
                        // MemPtr:    MEMPTR = addr
                        // Operation: -SP,-SP,[SP+1,SP] = PC,PC = 18
                        WZ = 0x18;
                        AddCycles(IR, 1);
                        // Pass control to the Virtual function Restart
                        Restart(Opcode, PC);
                        PokeByte(--SP, PC >> 8);
                        PokeByte(--SP, PC & 0xff);
                        PC = WZ;
                        break;
                    case 0xE0:
                        // Opcode:    RET PO
                        // Attributes:Conditional, Return
                        // TStates:   5 / 11
                        // MCycles:   M0, 5 T States - Op Code Fetch
                        //            If Condition
                        //            M1, 3 T States - Stack Read of Low Byte
                        //            M2, 3 T States - Stack Read of High Byte
                        // MCycles2:  pc:5,[sp:3,sp+1:3]
                        // MemPtr:    MEMPTR = addr
                        // Operation: If P then PC = [SP,SP+1],SP+ = 2
                        AddCycles(IR, 1);
                        if (fp == 0)
                        {
                            WZ = (PeekByte(SP++) + (PeekByte(SP++) << 8));
                            PC = WZ;
                            // Pass control to the Virtual function Return
                            Return(Opcode, PreExecutePC);
                        }
                        break;
                    case 0xE1:
                        // Opcode:    POP HL
                        // TStates:   10
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        //            M1, 3 T States - Stack Read of High Byte
                        //            M2, 3 T States - Stack Read of Low Byte
                        // MCycles2:  pc:4,sp:3,sp+1:3
                        // Operation: L = [SP],SP+,H = [SP],SP+
                        HL = (PeekByte(SP++) + (PeekByte(SP++) << 8));
                        break;
                    case 0xE2:
                        // Opcode:    JP PO,$aa
                        // Attributes:Branch, Conditional
                        // TStates:   10
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        //            M1, 3 T States - Operand Data Read of Low Byte
                        //            M2, 3 T States - Operand Data Read of High Byte
                        // MCycles2:  pc:4,pc+1:3,pc+2:3
                        // MemPtr:    MEMPTR = addr (independantly on condition satisfied or not)
                        // Operation: If P then PC = NN
                        WZ = (PeekByte(PC++) + (PeekByte(PC++) << 8));
                        if (fp == 0)
                        {
                            PC = WZ;
                            // Pass control to the Virtual function Jump
                            Jump(Opcode, PreExecutePC);
                        }
                        break;
                    case 0xE3:
                        // Opcode:    EX (SP),HL
                        // TStates:   19
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        //            M1, 3 T States - Stack Read of Low Byte
                        //            M2, 4 T States - Stack Read of High Byte
                        //            M3, 3 T States - Stack Write of High Byte
                        //            M4, 5 T States - Stack Write of Low byte
                        // MCycles2:  pc:4,sp:3,sp+1:4,sp(write):3,sp+1(write):3,sp+1(write):1 x 2
                        // MemPtr:    MEMPTR = rp value after the operation
                        // Operation: [SP]<->HL
                        WZ = HL;
                        HL = (PeekByte(SP++) + (PeekByte(SP) << 8));
                        AddCycles(SP, 1);
                        PokeByte((SP--) & 0xffff, WZ >> 8);
                        PokeByte(SP, WZ & 0xff);
                        AddCycles(SP, 2);
                        WZ = HL;
                        break;
                    case 0xE4:
                        // Opcode:    CALL PO,$aa
                        // Attributes:Branch, Call, Conditional
                        // TStates:   10 / 17
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        //            M1, 3 T States - Operand Data Read of Low Byte
                        //            M2, 4 T States - Operand Data Read of High Byte
                        //            If Condition
                        //            SP--
                        //            M3, 3 T States - Stack Write of High Byte
                        //            SP--
                        //            M4, 3 T States - Stack Write of Low byte
                        // MCycles2:  pc:4,pc+1:3,pc+2:3,[pc+2:1,sp-1:3,sp-2:3]
                        // MemPtr:    MEMPTR = addr (independantly on condition satisfied or not)
                        // Operation: If P then [SP- = 2] = PC,PC = NN
                        WZ = (PeekByte(PC++) + (PeekByte(PC++) << 8));
                        if (fp == 0)
                        {
                            AddCycles(PC + 1, 1);
                            // Pass control to the Virtual function Call
                            Call(Opcode, PC);
                            PokeByte(--SP, PC >> 8);
                            PokeByte(--SP, PC & 0xff);
                            PC = WZ;
                        }
                        break;
                    case 0xE5:
                        // Opcode:    PUSH HL
                        // TStates:   11
                        // MCycles:   M0, 5 T States - Op Code Fetch
                        //            M1, 3 T States - Stack Write of High Byte
                        //            M2, 3 T States - Stack Write of Low byte
                        // MCycles2:  pc:5,sp-1:3,sp-2:3
                        // Operation: -SP,[SP] = H,-SP,[SP] = L
                        {
                            AddCycles(IR, 1);
                            PokeByte(--SP, HL >> 8);
                            PokeByte(--SP, HL & 0xff);
                        }
                        break;
                    case 0xE6:
                        // Opcode:    AND $b
                        // Attributes:Byte, Direct
                        // TStates:   7
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        //            M1, 3 T States - Operand Data Read
                        // MCycles2:  pc:4,pc+1:3
                        // Flags:     SZ513P00
                        // Operation: A = A & N
                        x = A & PeekByte(PC++);
                        fs = x & FS;
                        fz = (x & 0xff) == 0 ? FZ : 0;
                        f5 = x & F5;
                        fh = FH;
                        f3 = x & F3;
                        fp = Parity[x & 0xff];
                        fn = 0;
                        fc = 0;
                        A = x;
                        break;
                    case 0xE7:
                        // Opcode:    RST 20H
                        // Attributes:Restart
                        // TStates:   11
                        // MCycles:   M0, 5 T States - Op Code Fetch
                        //            M1, 3 T States - Stack Write of High Byte
                        //            M2, 3 T States - Stack Write of Low byte
                        // MCycles2:  pc:5,sp-1:3,sp-2:3
                        // MemPtr:    MEMPTR = addr
                        // Operation: -SP,-SP,[SP+1,SP] = PC,PC = 20
                        WZ = 0x20;
                        AddCycles(IR, 1);
                        // Pass control to the Virtual function Restart
                        Restart(Opcode, PC);
                        PokeByte(--SP, PC >> 8);
                        PokeByte(--SP, PC & 0xff);
                        PC = WZ;
                        break;
                    case 0xE8:
                        // Opcode:    RET PE
                        // Attributes:Conditional, Return
                        // TStates:   5 / 11
                        // MCycles:   M0, 5 T States - Op Code Fetch
                        //            If Condition
                        //            M1, 3 T States - Stack Read of Low Byte
                        //            M2, 3 T States - Stack Read of High Byte
                        // MCycles2:  pc:5,[sp:3,sp+1:3]
                        // MemPtr:    MEMPTR = addr
                        // Operation: If !P then PC = [SP,SP+1],SP+ = 2
                        AddCycles(IR, 1);
                        if (fp != 0)
                        {
                            WZ = (PeekByte(SP++) + (PeekByte(SP++) << 8));
                            PC = WZ;
                            // Pass control to the Virtual function Return
                            Return(Opcode, PreExecutePC);
                        }
                        break;
                    case 0xE9:
                        // Opcode:    JP (HL) 
                        // Attributes:Branch, Terminal
                        // TStates:   4
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        // MCycles2:  pc:4
                        // Operation: PC = HL
                        PC = HL;
                        // Pass control to the Virtual function Jump
                        Jump(Opcode, PreExecutePC);

                        break;
                    case 0xEA:
                        // Opcode:    JP PE,$aa
                        // Attributes:Branch, Conditional
                        // TStates:   10
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        //            M1, 3 T States - Operand Data Read of Low Byte
                        //            M2, 3 T States - Operand Data Read of High Byte
                        // MCycles2:  pc:4,pc+1:3,pc+2:3
                        // MemPtr:    MEMPTR = addr (independantly on condition satisfied or not)
                        // Operation: If !P then PC = NN
                        WZ = (PeekByte(PC++) + (PeekByte(PC++) << 8));
                        if (fp != 0)
                        {
                            PC = WZ;
                            // Pass control to the Virtual function Jump
                            Jump(Opcode, PreExecutePC);
                        }
                        break;
                    case 0xEB:
                        // Opcode:    EX DE,HL
                        // TStates:   4
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        // MCycles2:  pc:4
                        // Operation: DE<->HL
                        x = DE;
                        DE = HL;
                        HL = x;
                        break;
                    case 0xEC:
                        // Opcode:    CALL PE,$aa
                        // Attributes:Branch, Call, Conditional
                        // TStates:   10 / 17
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        //            M1, 3 T States - Operand Data Read of Low Byte
                        //            M2, 4 T States - Operand Data Read of High Byte
                        //            If Condition
                        //            SP--
                        //            M3, 3 T States - Stack Write of High Byte
                        //            SP--
                        //            M4, 3 T States - Stack Write of Low byte
                        // MCycles2:  pc:4,pc+1:3,pc+2:3,[pc+2:1,sp-1:3,sp-2:3]
                        // MemPtr:    MEMPTR = addr (independantly on condition satisfied or not)
                        // Operation: If !P then [SP- = 2] = PC,PC = NN
                        WZ = (PeekByte(PC++) + (PeekByte(PC++) << 8));
                        if (fp != 0)
                        {
                            AddCycles(PC + 1, 1);
                            // Pass control to the Virtual function Call
                            Call(Opcode, PC);
                            PokeByte(--SP, PC >> 8);
                            PokeByte(--SP, PC & 0xff);
                            PC = WZ;
                        }
                        break;
                    #region  AfterED
                    case 0xED:
                        {
                            Opcode = FetchOpcode();
                            switch (Opcode)
                            {
                                case 0x40:
                                    // Opcode:    IN B,(C) 
                                    // Attributes:Port, Read
                                    // TStates:   12
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    //            M2, PR
                                    // MCycles2:  pc:4,pc+1:4,IO
                                    // Flags:     SZ503P0-
                                    // MemPtr:    MEMPTR = BC + 1
                                    // Operation: B=[C]
                                    WZ = BC + 1;
                                    B = IN();
                                    break;
                                case 0x41:
                                    // Opcode:    OUT (C),B
                                    // Attributes:Call, Port, Write
                                    // TStates:   12
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    //            M2, PW
                                    // MCycles2:  pc:4,pc+1:4,IO
                                    // MemPtr:    MEMPTR = BC + 1
                                    // Operation: [C]=B
                                    Out(BC, B);
                                    break;
                                case 0x42:
                                    // Opcode:    SBC HL,BC
                                    // TStates:   15
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    //            M2, 4 T States - Internal CPU Operation
                                    //            M3, 3 T States - Internal CPU Operation
                                    // MCycles2:  pc:4,pc+1:11
                                    // Flags:     SZ***VNC F5
                                    //            *H
                                    //            *F3 from higher bytes addition
                                    // MemPtr:    MEMPTR = rp1_before_operation + 1
                                    // Operation: HL=HL-BC-CY
                                    AddCycles(IR, 4);
                                    AddCycles(IR, 3);
                                    WZ = HL + 1;
                                    cy = fc;
                                    x = (HL - BC - cy) & 0xffff;
                                    fs = (x >> 8) & FS;
                                    fz = (x & 0xffff) == 0 ? FZ : 0;
                                    f5 = (x >> 8) & F5;
                                    fh = (((HL & 0xfff) - (BC & 0xfff) - cy) & 0x1000) != 0 ? FH : 0;
                                    f3 = (x >> 8) & F3;
                                    fp = (((HL ^ BC) & (HL ^ x)) & 0x8000) != 0 ? FV : 0;
                                    fn = FN;
                                    fc = ((HL - BC - fc) & 0x10000) != 0 ? FC : 0;
                                    HL = x;
                                    break;
                                case 0x43:
                                    // Opcode:    LD ($nn),BC
                                    // Attributes:Indirect, Word
                                    // TStates:   20
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    //            M2, 3 T States - Operand Data Read of Low Byte
                                    //            M3, 3 T States - Operand Data Read of High Byte
                                    //            M4, 3 T States - Memory Write of Low Byte
                                    //            M5, 3 T States - Memory Write of High Byte
                                    // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,nn:3,nn+1:3
                                    // MemPtr:    MEMPTR = addr + 1
                                    // Operation: [NN]=C, (NN+1)=B
                                    WZ = (PeekByte(PC++) + (PeekByte(PC++) << 8));
                                    PokeByte(WZ++, BC & 0xff);
                                    PokeByte(WZ, BC >> 8);
                                    break;
                                case 0x44:
                                    // Opcode:    NEG
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Flags:     
                                    // Operation: A=-A
                                    y = A;
                                    A = 0;
                                    x = (0 - y) & 0xff;
                                    fs = x & FS;
                                    fz = (x & 0xff) == 0 ? FZ : 0;
                                    f5 = x & F5;
                                    fh = ((0 - (y & 0x0f)) & 0x10) != 0 ? FH : 0;
                                    f3 = x & F3;
                                    fp = ((y & x) & 0x80) != 0 ? FV : 0;
                                    fn = FN;
                                    fc = ((0 - y) & 0x100) != 0 ? FC : 0;
                                    A = x;
                                    break;
                                case 0x45:
                                    // Opcode:    RETN
                                    // Attributes:Return, Terminal
                                    // TStates:   14
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    //            M2, 3 T States - Stack Read of Low Byte
                                    //            M3, 3 T States - Stack Read of High Byte
                                    // MCycles2:  pc:4,pc+1:4,sp:3,sp+1:3
                                    // MemPtr:    MEMPTR = addr
                                    // Operation: PC=[SP,SP+1],SP+,SP+
                                    WZ = (PeekByte(SP++) + (PeekByte(SP++) << 8));
                                    PC = WZ;
                                    iff1 = iff2;
                                    break;
                                case 0x46:
                                    // Opcode:    IM 0
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Operation: set interrupt 0
                                    IM = 0;
                                    break;
                                case 0x47:
                                    // Opcode:    LD I,A
                                    // TStates:   9
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 5 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:5
                                    // Operation: I=A
                                    AddCycles(IR, 1);
                                    i = A;
                                    break;
                                case 0x48:
                                    // Opcode:    IN C,(C) 
                                    // Attributes:Port, Read
                                    // TStates:   12
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    //            M2, PR
                                    // MCycles2:  pc:4,pc+1:4,IO
                                    // Flags:     SZ503P0-
                                    // MemPtr:    MEMPTR = BC + 1
                                    // Operation: C=[C]
                                    WZ = BC + 1;
                                    C = IN();
                                    break;
                                case 0x49:
                                    // Opcode:    OUT (C),C
                                    // Attributes:Call, Port, Write
                                    // TStates:   12
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    //            M2, PW
                                    // MCycles2:  pc:4,pc+1:4,IO
                                    // MemPtr:    MEMPTR = BC + 1
                                    // Operation: [C]=C
                                    Out(BC, C);
                                    break;
                                case 0x4A:
                                    // Opcode:    ADC HL,BC
                                    // TStates:   15
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    //            M2, 4 T States - Internal CPU Operation
                                    //            M3, 3 T States - Internal CPU Operation
                                    // MCycles2:  pc:4,pc+1:11
                                    // Flags:     SZ***VNC
                                    //            * F5 H F3 from higher bytes addition
                                    // MemPtr:    MEMPTR = rp1_before_operation + 1
                                    // Operation: HL=HL+BC+CY
                                    AddCycles(IR, 4);
                                    AddCycles(IR, 3);
                                    WZ = HL + 1;
                                    cy = fc;
                                    x = (HL + BC + cy) & 0xffff;
                                    fs = (x >> 8) & FS;
                                    fz = (x & 0xffff) == 0 ? FZ : 0;
                                    f5 = (x >> 8) & F5;
                                    fh = (((HL & 0xfff) + (BC & 0xfff) + cy) & 0x1000) != 0 ? FH : 0;
                                    f3 = (x >> 8) & F3;
                                    fp = (((HL ^ ~BC) & (HL ^ x)) & 0x8000) != 0 ? FP : 0;
                                    fn = 0;
                                    fc = ((HL + BC + cy) & 0x10000) != 0 ? FC : 0;
                                    HL = x;
                                    break;
                                case 0x4B:
                                    // Opcode:    LD BC,($nn) 
                                    // Attributes:Indirect, Word
                                    // TStates:   20
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    //            M2, 3 T States - Operand Data Read of Low Byte
                                    //            M3, 3 T States - Operand Data Read of High Byte
                                    //            M4, 3 T States - Memory Read of Low Byte
                                    //            M5, 3 T States - Memory Read of High Byte
                                    // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,nn:3,nn+1:3
                                    // MemPtr:    MEMPTR = addr + 1
                                    // Operation: C=[NN],B=[NN+1]
                                    WZ = (PeekByte(PC++) + (PeekByte(PC++) << 8));
                                    BC = (PeekByte(WZ++) + (PeekByte(WZ) << 8));
                                    break;
                                case 0x4C:
                                    // Opcode:    NEG (Undocumented)
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Operation: A=-A
                                    y = A;
                                    A = 0;
                                    x = (0 - y) & 0xff;
                                    fs = x & FS;
                                    fz = (x & 0xff) == 0 ? FZ : 0;
                                    f5 = x & F5;
                                    fh = ((0 - (y & 0x0f)) & 0x10) != 0 ? FH : 0;
                                    f3 = x & F3;
                                    fp = ((y & x) & 0x80) != 0 ? FV : 0;
                                    fn = FN;
                                    fc = ((0 - y) & 0x100) != 0 ? FC : 0;
                                    A = x;
                                    break;
                                case 0x4D:
                                    // Opcode:    RETI
                                    // Attributes:Return, Terminal
                                    // TStates:   14
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    //            M2, 3 T States - Stack Read of Low Byte
                                    //            M3, 3 T States - Stack Read of High Byte
                                    // MCycles2:  pc:4,pc+1:4,sp:3,sp+1:3
                                    // MemPtr:    MEMPTR = addr
                                    // Operation: PC=[SP,SP+1],SP+,SP+
                                    WZ = (PeekByte(SP++) + (PeekByte(SP++) << 8));
                                    PC = WZ;
                                    iff1 = iff2;
                                    break;
                                case 0x4E:
                                    // Opcode:    IM 0 (Undocumented)
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Operation: set interrupt 0
                                    IM = 0;
                                    break;
                                case 0x4F:
                                    // Opcode:    LD R,A
                                    // TStates:   9
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 5 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:5
                                    // Operation: R=A
                                    AddCycles(IR, 1);
                                    r7 = A & 0x80;
                                    r = A;
                                    break;
                                case 0x50:
                                    // Opcode:    IN D,(C) 
                                    // Attributes:Port, Read
                                    // TStates:   12
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    //            M2, PR
                                    // MCycles2:  pc:4,pc+1:4,IO
                                    // Flags:     SZ503P0-
                                    // MemPtr:    MEMPTR = BC + 1
                                    // Operation: D=[C]
                                    WZ = BC + 1;
                                    D = IN();
                                    break;
                                case 0x51:
                                    // Opcode:    OUT (C),D
                                    // Attributes:Call, Port, Write
                                    // TStates:   12
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    //            M2, PW
                                    // MCycles2:  pc:4,pc+1:4,IO
                                    // MemPtr:    MEMPTR = BC + 1
                                    // Operation: [C]=D
                                    Out(BC, D);
                                    break;
                                case 0x52:
                                    // Opcode:    SBC HL,DE
                                    // TStates:   15
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    //            M2, 4 T States - Internal CPU Operation
                                    //            M3, 3 T States - Internal CPU Operation
                                    // MCycles2:  pc:4,pc+1:11
                                    // Flags:     SZ***VNC F5
                                    //            *H
                                    //            *F3 from higher bytes addition
                                    // MemPtr:    MEMPTR = rp1_before_operation + 1
                                    // Operation: HL=HL-DE-CY
                                    AddCycles(IR, 4);
                                    AddCycles(IR, 3);
                                    WZ = HL + 1;
                                    cy = fc;
                                    x = (HL - DE - cy) & 0xffff;
                                    fs = (x >> 8) & FS;
                                    fz = (x & 0xffff) == 0 ? FZ : 0;
                                    f5 = (x >> 8) & F5;
                                    fh = (((HL & 0xfff) - (DE & 0xfff) - cy) & 0x1000) != 0 ? FH : 0;
                                    f3 = (x >> 8) & F3;
                                    fp = (((HL ^ DE) & (HL ^ x)) & 0x8000) != 0 ? FV : 0;
                                    fn = FN;
                                    fc = ((HL - DE - fc) & 0x10000) != 0 ? FC : 0;
                                    HL = x;
                                    break;
                                case 0x53:
                                    // Opcode:    LD ($nn),DE
                                    // Attributes:Indirect, Word
                                    // TStates:   20
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    //            M2, 3 T States - Operand Data Read of Low Byte
                                    //            M3, 3 T States - Operand Data Read of High Byte
                                    //            M4, 3 T States - Memory Write of Low Byte
                                    //            M5, 3 T States - Memory Write of High Byte
                                    // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,nn:3,nn+1:3
                                    // MemPtr:    MEMPTR = addr + 1
                                    // Operation: [NN]=E, (NN+1)=D
                                    WZ = (PeekByte(PC++) + (PeekByte(PC++) << 8));
                                    PokeByte(WZ++, DE & 0xff);
                                    PokeByte(WZ, DE >> 8);
                                    break;
                                case 0x54:
                                    // Opcode:    NEG (Undocumented)
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Operation: A=-A
                                    y = A;
                                    A = 0;
                                    x = (0 - y) & 0xff;
                                    fs = x & FS;
                                    fz = (x & 0xff) == 0 ? FZ : 0;
                                    f5 = x & F5;
                                    fh = ((0 - (y & 0x0f)) & 0x10) != 0 ? FH : 0;
                                    f3 = x & F3;
                                    fp = ((y & x) & 0x80) != 0 ? FV : 0;
                                    fn = FN;
                                    fc = ((0 - y) & 0x100) != 0 ? FC : 0;
                                    A = x;
                                    break;
                                case 0x55:
                                    // Opcode:    RETN (Undocumented)
                                    // Attributes:Return, Terminal
                                    // TStates:   14
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    //            M2, 3 T States - Stack Read of Low Byte
                                    //            M3, 3 T States - Stack Read of High Byte
                                    // MCycles2:  pc:4,pc+1:4,sp:3,sp+1:3
                                    // MemPtr:    MEMPTR = addr
                                    // Operation: PC=[SP,SP+1],SP+,SP+
                                    WZ = (PeekByte(SP++) + (PeekByte(SP++) << 8));
                                    PC = WZ;
                                    iff1 = iff2;
                                    break;
                                case 0x56:
                                    // Opcode:    IM 1
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Operation: set interrupt 1
                                    IM = 1;
                                    break;
                                case 0x57:
                                    // Opcode:    LD A,I
                                    // TStates:   9
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 5 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:5
                                    // Flags:     SZ503*0- PV as IFF2 [yaze doesn't affect F?]
                                    // Operation: A=I
                                    AddCycles(IR, 1);
                                    A = i;
                                    fs = A & FS;
                                    fz = ((A == 0) ? FZ : 0);
                                    f5 = A & F5;
                                    fh = 0;
                                    f3 = A & F3;
                                    fp = iff2 << 2;
                                    fn = 0;
                                    break;
                                case 0x58:
                                    // Opcode:    IN E,(C) 
                                    // Attributes:Port, Read
                                    // TStates:   12
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    //            M2, PR
                                    // MCycles2:  pc:4,pc+1:4,IO
                                    // Flags:     SZ503P0-
                                    // MemPtr:    MEMPTR = BC + 1
                                    // Operation: E=[C]
                                    WZ = BC + 1;
                                    E = IN();
                                    break;
                                case 0x59:
                                    // Opcode:    OUT (C),E
                                    // Attributes:Call, Port, Write
                                    // TStates:   12
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    //            M2, PW
                                    // MCycles2:  pc:4,pc+1:4,IO
                                    // MemPtr:    MEMPTR = BC + 1
                                    // Operation: [C]=E
                                    Out(BC, E);
                                    break;
                                case 0x5A:
                                    // Opcode:    ADC HL,DE
                                    // TStates:   15
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    //            M2, 4 T States - Internal CPU Operation
                                    //            M3, 3 T States - Internal CPU Operation
                                    // MCycles2:  pc:4,pc+1:11
                                    // Flags:     SZ***VNC
                                    //            * F5 H F3 from higher bytes addition
                                    // MemPtr:    MEMPTR = rp1_before_operation + 1
                                    // Operation: HL=HL+DE+CY
                                    AddCycles(IR, 4);
                                    AddCycles(IR, 3);
                                    WZ = HL + 1;
                                    cy = fc;
                                    x = (HL + DE + cy) & 0xffff;
                                    fs = (x >> 8) & FS;
                                    fz = (x & 0xffff) == 0 ? FZ : 0;
                                    f5 = (x >> 8) & F5;
                                    fh = (((HL & 0xfff) + (DE & 0xfff) + cy) & 0x1000) != 0 ? FH : 0;
                                    f3 = (x >> 8) & F3;
                                    fp = (((HL ^ ~DE) & (HL ^ x)) & 0x8000) != 0 ? FP : 0;
                                    fn = 0;
                                    fc = ((HL + DE + cy) & 0x10000) != 0 ? FC : 0;
                                    HL = x;
                                    break;
                                case 0x5B:
                                    // Opcode:    LD DE,($nn) 
                                    // Attributes:Indirect, Word
                                    // TStates:   20
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    //            M2, 3 T States - Operand Data Read of Low Byte
                                    //            M3, 3 T States - Operand Data Read of High Byte
                                    //            M4, 3 T States - Memory Read of Low Byte
                                    //            M5, 3 T States - Memory Read of High Byte
                                    // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,nn:3,nn+1:3
                                    // MemPtr:    MEMPTR = addr + 1
                                    // Operation: E=[NN],D=[NN+1]
                                    WZ = (PeekByte(PC++) + (PeekByte(PC++) << 8));
                                    DE = (PeekByte(WZ++) + (PeekByte(WZ) << 8));
                                    break;
                                case 0x5C:
                                    // Opcode:    NEG (Undocumented)
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Operation: A=-A
                                    y = A;
                                    A = 0;
                                    x = (0 - y) & 0xff;
                                    fs = x & FS;
                                    fz = (x & 0xff) == 0 ? FZ : 0;
                                    f5 = x & F5;
                                    fh = ((0 - (y & 0x0f)) & 0x10) != 0 ? FH : 0;
                                    f3 = x & F3;
                                    fp = ((y & x) & 0x80) != 0 ? FV : 0;
                                    fn = FN;
                                    fc = ((0 - y) & 0x100) != 0 ? FC : 0;
                                    A = x;
                                    break;
                                case 0x5D:
                                    // Opcode:    RETN (Undocumented)
                                    // Attributes:Return, Terminal
                                    // TStates:   14
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    //            M2, 3 T States - Stack Read of Low Byte
                                    //            M3, 3 T States - Stack Read of High Byte
                                    // MCycles2:  pc:4,pc+1:4,sp:3,sp+1:3
                                    // MemPtr:    MEMPTR = addr
                                    // Operation: PC=[SP,SP+1],SP+,SP+
                                    WZ = (PeekByte(SP++) + (PeekByte(SP++) << 8));
                                    PC = WZ;
                                    iff1 = iff2;
                                    break;
                                case 0x5E:
                                    // Opcode:    IM 2
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Operation: set interrupt 2
                                    IM = 2;
                                    break;
                                case 0x5F:
                                    // Opcode:    LD A,R
                                    // TStates:   9
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 5 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:5
                                    // Flags:     SZ503*0- PV as IFF2 [yaze doesn't affect F?]
                                    // Operation: A=R
                                    AddCycles(IR, 1);
                                    A = R;
                                    fs = A & FS;
                                    fz = ((A == 0) ? FZ : 0);
                                    f5 = A & F5;
                                    fh = 0;
                                    f3 = A & F3;
                                    fp = iff2 << 2;
                                    fn = 0;
                                    break;
                                case 0x60:
                                    // Opcode:    IN H,(C) 
                                    // Attributes:Port, Read
                                    // TStates:   12
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    //            M2, PR
                                    // MCycles2:  pc:4,pc+1:4,IO
                                    // Flags:     SZ503P0-
                                    // MemPtr:    MEMPTR = BC + 1
                                    // Operation: H=[C]
                                    WZ = BC + 1;
                                    H = IN();
                                    break;
                                case 0x61:
                                    // Opcode:    OUT (C),H
                                    // Attributes:Call, Port, Write
                                    // TStates:   12
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    //            M2, PW
                                    // MCycles2:  pc:4,pc+1:4,IO
                                    // MemPtr:    MEMPTR = BC + 1
                                    // Operation: [C]=H
                                    Out(BC, H);
                                    break;
                                case 0x62:
                                    // Opcode:    SBC HL,HL
                                    // TStates:   15
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    //            M2, 4 T States - Internal CPU Operation
                                    //            M3, 3 T States - Internal CPU Operation
                                    // MCycles2:  pc:4,pc+1:11
                                    // Flags:     SZ***VNC F5
                                    //            *H
                                    //            *F3 from higher bytes addition
                                    // MemPtr:    MEMPTR = rp1_before_operation + 1
                                    // Operation: HL=HL-HL-CY
                                    AddCycles(IR, 4);
                                    AddCycles(IR, 3);
                                    WZ = HL + 1;
                                    cy = fc;
                                    x = (HL - HL - cy) & 0xffff;
                                    fs = (x >> 8) & FS;
                                    fz = (x & 0xffff) == 0 ? FZ : 0;
                                    f5 = (x >> 8) & F5;
                                    fh = (((HL & 0xfff) - (HL & 0xfff) - cy) & 0x1000) != 0 ? FH : 0;
                                    f3 = (x >> 8) & F3;
                                    fp = (((HL ^ HL) & (HL ^ x)) & 0x8000) != 0 ? FV : 0;
                                    fn = FN;
                                    fc = ((HL - HL - fc) & 0x10000) != 0 ? FC : 0;
                                    HL = x;
                                    break;
                                case 0x63:
                                    // Opcode:    LD ($nn),HL
                                    // Attributes:Indirect, Word
                                    // TStates:   20
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    //            M2, 3 T States - Operand Data Read of Low Byte
                                    //            M3, 3 T States - Operand Data Read of High Byte
                                    //            M4, 3 T States - Memory Write of Low Byte
                                    //            M5, 3 T States - Memory Write of High Byte
                                    // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,nn:3,nn+1:3
                                    // MemPtr:    MEMPTR = addr + 1
                                    // Operation: [NN]=L, (NN+1)=H
                                    WZ = (PeekByte(PC++) + (PeekByte(PC++) << 8));
                                    PokeByte(WZ++, HL & 0xff);
                                    PokeByte(WZ, HL >> 8);
                                    break;
                                case 0x64:
                                    // Opcode:    NEG (Undocumented)
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Operation: A=-A
                                    y = A;
                                    A = 0;
                                    x = (0 - y) & 0xff;
                                    fs = x & FS;
                                    fz = (x & 0xff) == 0 ? FZ : 0;
                                    f5 = x & F5;
                                    fh = ((0 - (y & 0x0f)) & 0x10) != 0 ? FH : 0;
                                    f3 = x & F3;
                                    fp = ((y & x) & 0x80) != 0 ? FV : 0;
                                    fn = FN;
                                    fc = ((0 - y) & 0x100) != 0 ? FC : 0;
                                    A = x;
                                    break;
                                case 0x65:
                                    // Opcode:    RETN (Undocumented)
                                    // Attributes:Return, Terminal
                                    // TStates:   14
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    //            M2, 3 T States - Stack Read of Low Byte
                                    //            M3, 3 T States - Stack Read of High Byte
                                    // MCycles2:  pc:4,pc+1:4,sp:3,sp+1:3
                                    // MemPtr:    MEMPTR = addr
                                    // Operation: PC=[SP,SP+1],SP+,SP+
                                    WZ = (PeekByte(SP++) + (PeekByte(SP++) << 8));
                                    PC = WZ;
                                    iff1 = iff2;
                                    break;
                                case 0x66:
                                    // Opcode:    IM 0 (Undocumented)
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Operation: set interrupt 0
                                    IM = 0;
                                    break;
                                case 0x67:
                                    // Opcode:    RRD
                                    // TStates:   18
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    //            M2, 3 T States - Memory Read
                                    //            M3, 4 T States - Internal CPU Operation
                                    //            M4, 3 T States - Memory Write
                                    // MCycles2:  pc:4,pc+1:4,hl:3,hl:1 x 4,hl(write):3
                                    // Flags:     SZ503P0- Flags set on result in A
                                    // MemPtr:    MEMPTR = HL + 1
                                    // Operation: {A,[HL]}=4->{A,[HL]}
                                    x = A;
                                    y = PeekByte(HL);
                                    A = (A & 0xF0) | (y & 0x0f);
                                    y = ((y >> 4) | (x << 4)) & 0xff;
                                    AddCycles(HL, 4);
                                    PokeByte(HL, y);
                                    WZ = HL + 1;
                                    fs = A & FS;
                                    fz = ((A & 0xff)) == 0 ? FZ : 0;
                                    f5 = A & F5;
                                    fh = 0;
                                    f3 = A & F3;
                                    fp = Parity[A];
                                    fn = 0;
                                    break;
                                case 0x68:
                                    // Opcode:    IN L,(C) 
                                    // Attributes:Port, Read
                                    // TStates:   12
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    //            M2, PR
                                    // MCycles2:  pc:4,pc+1:4,IO
                                    // Flags:     SZ503P0-
                                    // MemPtr:    MEMPTR = BC + 1
                                    // Operation: L=[C]
                                    WZ = BC + 1;
                                    L = IN();
                                    break;
                                case 0x69:
                                    // Opcode:    OUT (C),L
                                    // Attributes:Call, Port, Write
                                    // TStates:   12
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    //            M2, PW
                                    // MCycles2:  pc:4,pc+1:4,IO
                                    // MemPtr:    MEMPTR = BC + 1
                                    // Operation: [C]=L
                                    Out(BC, L);
                                    break;
                                case 0x6A:
                                    // Opcode:    ADC HL,HL
                                    // TStates:   15
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    //            M2, 4 T States - Internal CPU Operation
                                    //            M3, 3 T States - Internal CPU Operation
                                    // MCycles2:  pc:4,pc+1:11
                                    // Flags:     SZ***VNC
                                    //            * F5 H F3 from higher bytes addition
                                    // MemPtr:    MEMPTR = rp1_before_operation + 1
                                    // Operation: HL=HL+HL+CY
                                    AddCycles(IR, 4);
                                    AddCycles(IR, 3);
                                    WZ = HL + 1;
                                    cy = fc;
                                    x = (HL + HL + cy) & 0xffff;
                                    fs = (x >> 8) & FS;
                                    fz = (x & 0xffff) == 0 ? FZ : 0;
                                    f5 = (x >> 8) & F5;
                                    fh = (((HL & 0xfff) + (HL & 0xfff) + cy) & 0x1000) != 0 ? FH : 0;
                                    f3 = (x >> 8) & F3;
                                    fp = (((HL ^ ~HL) & (HL ^ x)) & 0x8000) != 0 ? FP : 0;
                                    fn = 0;
                                    fc = ((HL + HL + cy) & 0x10000) != 0 ? FC : 0;
                                    HL = x;
                                    break;
                                case 0x6B:
                                    // Opcode:    LD HL,($nn) 
                                    // Attributes:Indirect, Word
                                    // TStates:   20
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    //            M2, 3 T States - Operand Data Read of Low Byte
                                    //            M3, 3 T States - Operand Data Read of High Byte
                                    //            M4, 3 T States - Memory Read of Low Byte
                                    //            M5, 3 T States - Memory Read of High Byte
                                    // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,nn:3,nn+1:3
                                    // MemPtr:    MEMPTR = addr + 1
                                    // Operation: L=[NN],H=[NN+1]
                                    WZ = (PeekByte(PC++) + (PeekByte(PC++) << 8));
                                    HL = (PeekByte(WZ++) + (PeekByte(WZ) << 8));
                                    break;
                                case 0x6C:
                                    // Opcode:    NEG (Undocumented)
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Operation: A=-A
                                    y = A;
                                    A = 0;
                                    x = (0 - y) & 0xff;
                                    fs = x & FS;
                                    fz = (x & 0xff) == 0 ? FZ : 0;
                                    f5 = x & F5;
                                    fh = ((0 - (y & 0x0f)) & 0x10) != 0 ? FH : 0;
                                    f3 = x & F3;
                                    fp = ((y & x) & 0x80) != 0 ? FV : 0;
                                    fn = FN;
                                    fc = ((0 - y) & 0x100) != 0 ? FC : 0;
                                    A = x;
                                    break;
                                case 0x6D:
                                    // Opcode:    RETN (Undocumented)
                                    // Attributes:Return, Terminal
                                    // TStates:   14
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    //            M2, 3 T States - Stack Read of Low Byte
                                    //            M3, 3 T States - Stack Read of High Byte
                                    // MCycles2:  pc:4,pc+1:4,sp:3,sp+1:3
                                    // MemPtr:    MEMPTR = addr
                                    // Operation: PC=[SP,SP+1],SP+,SP+
                                    WZ = (PeekByte(SP++) + (PeekByte(SP++) << 8));
                                    PC = WZ;
                                    iff1 = iff2;
                                    break;
                                case 0x6E:
                                    // Opcode:    IM 0 (Undocumented)
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Operation: set interrupt 0
                                    IM = 0;
                                    break;
                                case 0x6F:
                                    // Opcode:    RLD
                                    // TStates:   18
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    //            M2, 3 T States - Memory Read
                                    //            M3, 4 T States - Internal CPU Operation
                                    //            M4, 3 T States - Memory Write
                                    // MCycles2:  pc:4,pc+1:4,hl:3,hl:1 x 4,hl(write):3
                                    // Flags:     SZ503P0- Flags set on result in A
                                    // MemPtr:    MEMPTR = HL + 1
                                    // Operation: {A,[HL]}={A,[HL]}<-4
                                    x = A;
                                    y = PeekByte(HL);
                                    A = (A & 0xF0) | (y >> 4);
                                    y = ((y << 4) | (x & 0x0F)) & 0xff;
                                    AddCycles(HL, 4);
                                    PokeByte(HL, y);
                                    WZ = HL + 1;
                                    fs = A & FS;
                                    fz = ((A & 0xff)) == 0 ? FZ : 0;
                                    f5 = A & F5;
                                    fh = 0;
                                    f3 = A & F3;
                                    fp = Parity[A];
                                    fn = 0;
                                    break;
                                case 0x70:
                                    // Opcode:    IN F,(C)  (Undocumented)
                                    // Attributes:Port, Read
                                    // TStates:   12
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    //            M2, PR
                                    // MCycles2:  pc:4,pc+1:4,IO
                                    // MemPtr:    MEMPTR = BC + 1
                                    // Operation: F=[C]
                                    WZ = BC + 1;
                                    IN();
                                    break;
                                case 0x71:
                                    // Opcode:    OUT (C),0 (Undocumented)
                                    // Attributes:Call, Port, Write
                                    // TStates:   12
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    //            M2, PW
                                    // MCycles2:  pc:4,pc+1:4,IO
                                    // MemPtr:    MEMPTR = BC + 1
                                    // Operation: [C]=0
                                    Out(BC, 0);
                                    break;
                                case 0x72:
                                    // Opcode:    SBC HL,SP
                                    // TStates:   15
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    //            M2, 4 T States - Internal CPU Operation
                                    //            M3, 3 T States - Internal CPU Operation
                                    // MCycles2:  pc:4,pc+1:11
                                    // Flags:     SZ***VNC F5
                                    //            *H
                                    //            *F3 from higher bytes addition
                                    // MemPtr:    MEMPTR = rp1_before_operation + 1
                                    // Operation: HL=HL-SP-CY
                                    AddCycles(IR, 4);
                                    AddCycles(IR, 3);
                                    WZ = HL + 1;
                                    cy = fc;
                                    x = (HL - SP - cy) & 0xffff;
                                    fs = (x >> 8) & FS;
                                    fz = (x & 0xffff) == 0 ? FZ : 0;
                                    f5 = (x >> 8) & F5;
                                    fh = (((HL & 0xfff) - (SP & 0xfff) - cy) & 0x1000) != 0 ? FH : 0;
                                    f3 = (x >> 8) & F3;
                                    fp = (((HL ^ SP) & (HL ^ x)) & 0x8000) != 0 ? FV : 0;
                                    fn = FN;
                                    fc = ((HL - SP - fc) & 0x10000) != 0 ? FC : 0;
                                    HL = x;
                                    break;
                                case 0x73:
                                    // Opcode:    LD ($nn),SP
                                    // Attributes:Indirect, Word
                                    // TStates:   20
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    //            M2, 3 T States - Operand Data Read of Low Byte
                                    //            M3, 3 T States - Operand Data Read of High Byte
                                    //            M4, 3 T States - Memory Write of Low Byte
                                    //            M5, 3 T States - Memory Write of High Byte
                                    // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,nn:3,nn+1:3
                                    // MemPtr:    MEMPTR = addr + 1
                                    // Operation: [NN,NN+1]=SP
                                    WZ = (PeekByte(PC++) + (PeekByte(PC++) << 8));
                                    PokeByte(WZ++, SP & 0xff);
                                    PokeByte(WZ, SP >> 8);
                                    break;
                                case 0x74:
                                    // Opcode:    NEG (Undocumented)
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Operation: A=-A
                                    y = A;
                                    A = 0;
                                    x = (0 - y) & 0xff;
                                    fs = x & FS;
                                    fz = (x & 0xff) == 0 ? FZ : 0;
                                    f5 = x & F5;
                                    fh = ((0 - (y & 0x0f)) & 0x10) != 0 ? FH : 0;
                                    f3 = x & F3;
                                    fp = ((y & x) & 0x80) != 0 ? FV : 0;
                                    fn = FN;
                                    fc = ((0 - y) & 0x100) != 0 ? FC : 0;
                                    A = x;
                                    break;
                                case 0x75:
                                    // Opcode:    RETN (Undocumented)
                                    // Attributes:Return, Terminal
                                    // TStates:   14
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    //            M2, 3 T States - Stack Read of Low Byte
                                    //            M3, 3 T States - Stack Read of High Byte
                                    // MCycles2:  pc:4,pc+1:4,sp:3,sp+1:3
                                    // MemPtr:    MEMPTR = addr
                                    // Operation: PC=[SP,SP+1],SP+,SP+
                                    WZ = (PeekByte(SP++) + (PeekByte(SP++) << 8));
                                    PC = WZ;
                                    iff1 = iff2;
                                    break;
                                case 0x76:
                                    // Opcode:    IM 1 (Undocumented)
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Operation: set interrupt 1
                                    IM = 1;
                                    break;
                                case 0x78:
                                    // Opcode:    IN A,(C) 
                                    // Attributes:Port, Read
                                    // TStates:   12
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    //            M2, PR
                                    // MCycles2:  pc:4,pc+1:4,IO
                                    // Flags:     SZ503P0-
                                    // MemPtr:    MEMPTR = BC + 1
                                    // Operation: A=[C]
                                    WZ = BC + 1;
                                    A = IN();
                                    break;
                                case 0x79:
                                    // Opcode:    OUT (C),A
                                    // Attributes:Call, Port, Write
                                    // TStates:   12
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    //            M2, PW
                                    // MCycles2:  pc:4,pc+1:4,IO
                                    // MemPtr:    MEMPTR = BC + 1
                                    // Operation: [C]=A
                                    WZ = BC + 1;
                                    Out(BC, A);
                                    break;
                                case 0x7A:
                                    // Opcode:    ADC HL,SP
                                    // TStates:   15
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    //            M2, 4 T States - Internal CPU Operation
                                    //            M3, 3 T States - Internal CPU Operation
                                    // MCycles2:  pc:4,pc+1:11
                                    // Flags:     SZ***VNC
                                    //            * F5 H F3 from higher bytes addition
                                    // MemPtr:    MEMPTR = rp1_before_operation + 1
                                    // Operation: HL=HL+SP+CY
                                    AddCycles(IR, 4);
                                    AddCycles(IR, 3);
                                    WZ = HL + 1;
                                    cy = fc;
                                    x = (HL + SP + cy) & 0xffff;
                                    fs = (x >> 8) & FS;
                                    fz = (x & 0xffff) == 0 ? FZ : 0;
                                    f5 = (x >> 8) & F5;
                                    fh = (((HL & 0xfff) + (SP & 0xfff) + cy) & 0x1000) != 0 ? FH : 0;
                                    f3 = (x >> 8) & F3;
                                    fp = (((HL ^ ~SP) & (HL ^ x)) & 0x8000) != 0 ? FP : 0;
                                    fn = 0;
                                    fc = ((HL + SP + cy) & 0x10000) != 0 ? FC : 0;
                                    HL = x;
                                    break;
                                case 0x7B:
                                    // Opcode:    LD SP,($nn) 
                                    // Attributes:Indirect, Word
                                    // TStates:   20
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    //            M2, 3 T States - Operand Data Read of Low Byte
                                    //            M3, 3 T States - Operand Data Read of High Byte
                                    //            M4, 3 T States - Memory Read of Low Byte
                                    //            M5, 3 T States - Memory Read of High Byte
                                    // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,nn:3,nn+1:3
                                    // MemPtr:    MEMPTR = addr + 1
                                    // Operation: SP=[NN,NN+1]
                                    WZ = (PeekByte(PC++) + (PeekByte(PC++) << 8));
                                    SP = (PeekByte(WZ++) + (PeekByte(WZ) << 8));
                                    break;
                                case 0x7C:
                                    // Opcode:    NEG (Undocumented)
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Operation: A=-A
                                    y = A;
                                    A = 0;
                                    x = (0 - y) & 0xff;
                                    fs = x & FS;
                                    fz = (x & 0xff) == 0 ? FZ : 0;
                                    f5 = x & F5;
                                    fh = ((0 - (y & 0x0f)) & 0x10) != 0 ? FH : 0;
                                    f3 = x & F3;
                                    fp = ((y & x) & 0x80) != 0 ? FV : 0;
                                    fn = FN;
                                    fc = ((0 - y) & 0x100) != 0 ? FC : 0;
                                    A = x;
                                    break;
                                case 0x7D:
                                    // Opcode:    RETN (Undocumented)
                                    // Attributes:Return, Terminal
                                    // TStates:   14
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    //            M2, 3 T States - Stack Read of Low Byte
                                    //            M3, 3 T States - Stack Read of High Byte
                                    // MCycles2:  pc:4,pc+1:4,sp:3,sp+1:3
                                    // MemPtr:    MEMPTR = addr
                                    // Operation: PC=[SP,SP+1],SP+,SP+
                                    WZ = (PeekByte(SP++) + (PeekByte(SP++) << 8));
                                    PC = WZ;
                                    iff1 = iff2;
                                    break;
                                case 0x7E:
                                    // Opcode:    IM 2 (Undocumented)
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:4
                                    // Operation: set interrupt 2
                                    IM = 2;
                                    break;
                                case 0xA0:
                                    // Opcode:    LDI
                                    // TStates:   16
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    //            M2, 3 T States - Memory Read
                                    //            M3, 5 T States - Memory Write
                                    // MCycles2:  pc:4,pc+1:4,hl:3,de:3,de:1 x 2,[de:1 x 5]
                                    // Flags:     --*0**0-
                                    //            * PV set if BC not 0
                                    //            * F5 is bit 1 of (transferred byte + A)
                                    //            * F3 is bit 3 of (transferred byte + A)
                                    // Operation: [DE]=[HL],HL+=1,DE+=1,BC=-1
                                    x = PeekByte(HL);
                                    PokeByte(DE, x);
                                    AddCycles(DE, 2);
                                    HL++;
                                    DE++;
                                    BC--;
                                    x = (x + A) & 0xff;
                                    f5 = f3 = 0;
                                    if ((x & FN) != 0) f5 = F5;
                                    if ((x & F3) != 0) f3 = F3;
                                    fn = fh = fp = 0;
                                    if (BC != 0) fp = FP;
                                    break;
                                case 0xA1:
                                    // Opcode:    CPI
                                    // TStates:   16
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    //            M2, 3 T States - Memory Read
                                    //            M3, 5 T States - Memory Write
                                    // MCycles2:  pc:4,pc+1:4,hl:3,hl:1 x 5,[hl:1 x 5]
                                    // Flags:     SZ*H**1-
                                    //            * PV set if BC not 0
                                    //            * S
                                    //            *Z
                                    //            *H from (A - (HL) ) as in CP (HL)
                                    //            * F3 is bit 3 of (A - (HL) - H)
                                    //            * H as in F after instruction
                                    //            * F5 is bit 1 of (A - (HL) - H)
                                    //            * H as in F after instruction
                                    // MemPtr:    MEMPTR = MEMPTR + 1
                                    // Operation: A-[HL],HL=HL+1,BC=BC-1
                                    x = PeekByte(HL);
                                    y = (A - x) & 0xff;
                                    fs = y & FS;
                                    fz = (y & 0xff) == 0 ? FZ : 0;
                                    fh = (((A & 0x0f) - (x & 0x0f)) & 0x10) != 0 ? FH : 0;
                                    fn = FN;
                                    AddCycles(HL, 5);
                                    HL++;
                                    BC--;
                                    WZ++;
                                    f5 = ((((A - x) - ((F & 0x10) >> 4)) & 0xff) & 2) << 4;
                                    f3 = ((((A - x) - ((F & 0x10) >> 4)) & 0xff) & 8);
                                    fp = (BC != 0) ? FP : 0;
                                    break;
                                case 0xA2:
                                    // Opcode:    INI
                                    // TStates:   16
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 5 T States - Op Code Fetch
                                    //            M2, PR
                                    //            M3, 3 T States - Memory Write
                                    // MCycles2:  pc:4,pc+1:5,hl:3,IO,[hl:1 x 5]
                                    // Flags:     SZ5?3???
                                    //            * Flags affected as in DEC B
                                    // MemPtr:    MEMPTR = BC_before_decrementing_B + 1
                                    // Operation: [HL]=[C],HL=HL+1,B=B-1
                                    AddCycles(IR, 1);
                                    x = IN();
                                    PokeByte(HL, x);
                                    WZ = BC + 1;
                                    B--;
                                    fs = B & FS;
                                    fz = (B & 0xff) == 0 ? FZ : 0;
                                    f5 = B & F5;
                                    f3 = B & F3;
                                    HL++;
                                    fn = (x & FS) != 0 ? FN : 0;
                                    cy = (C + 1) + x;
                                    fc = cy > 0xff ? FC : 0;
                                    fh = (x & FC) != 0 ? FH : 0;
                                    fp = Parity[(cy & 0x07) ^ B];

                                    break;
                                case 0xA3:
                                    // Opcode:    OUTI
                                    // TStates:   16
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 5 T States - Op Code Fetch
                                    //            M2, 3 T States - Memory Read
                                    //            M3, PW
                                    // MCycles2:  pc:4,pc+1:5,hl:3,IO,[hl:1 x 5]
                                    // Flags:     SZ5?3??? Flags affected as in DEC B
                                    // MemPtr:    MEMPTR = BC_after_decrementing_B + 1
                                    // Operation: [C]=[HL],HL=HL+1,B=B-1
                                    AddCycles(IR, 1);
                                    B--;
                                    fs = B & FS;
                                    fz = (B & 0xff) == 0 ? FZ : 0;
                                    f5 = B & F5;
                                    f3 = B & F3;
                                    WZ = BC + 1;
                                    x = PeekByte(HL);
                                    Out(BC, x);
                                    HL++;
                                    cy = x + L;
                                    fn = (x & FS) != 0 ? FN : 0;
                                    fc = cy > 0xff ? FC : 0;
                                    fh = fc << 4;
                                    fp = Parity[((x + L) & 0x07) ^ B];
                                    break;
                                case 0xA8:
                                    // Opcode:    LDD
                                    // TStates:   16
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    //            M2, 3 T States - Memory Read
                                    //            M3, 5 T States - Memory Write
                                    // MCycles2:  pc:4,pc+1:4,hl:3,de:3,de:1 x 2,[de:1 x 5]
                                    // Flags:     --*0**0-
                                    //            * PV set if BC not 0
                                    //            * F5 is bit 1 of (transferred byte + A)
                                    //            * F3 is bit 3 of (transferred byte + A)
                                    // Operation: [DE]=[HL],HL-=1,DE-=1,BC-=1
                                    x = PeekByte(HL);
                                    PokeByte(DE, x);
                                    AddCycles(DE, 2);
                                    HL--;
                                    DE--;
                                    BC--;
                                    y = (x + A) & 0xff;
                                    f5 = f3 = 0;
                                    if ((y & FN) != 0) f5 = F5;
                                    if ((y & F3) != 0) f3 = F3;
                                    fn = 0;
                                    fh = 0;
                                    fp = 0;
                                    if (BC != 0) fp = FP;
                                    break;
                                case 0xA9:
                                    // Opcode:    CPD
                                    // TStates:   16
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    //            M2, 3 T States - Memory Read
                                    //            M3, 5 T States - Memory Write
                                    // MCycles2:  pc:4,pc+1:4,hl:3,hl:1 x 5,[hl:1 x 5]
                                    // Flags:     SZ*H**1-
                                    //            * PV set if BC not 0
                                    //            * S
                                    //            *Z
                                    //            *H from (A - (HL) ) as in CP (HL)
                                    //            * F3 is bit 3 of (A - (HL) - H)
                                    //            * H as in F after instruction
                                    //            * F5 is bit 1 of (A - (HL) - H)
                                    //            * H as in F after instruction
                                    // MemPtr:    MEMPTR = MEMPTR + 1
                                    // Operation: A-[HL],HL=HL-1,BC=BC-1
                                    x = PeekByte(HL);
                                    y = (A - x) & 0xff;
                                    fs = y & FS;
                                    fz = (y & 0xff) == 0 ? FZ : 0;
                                    fh = (((A & 0x0f) - (x & 0x0f)) & 0x10) != 0 ? FH : 0;
                                    fn = FN;
                                    AddCycles(HL, 5);
                                    HL--;
                                    BC--;
                                    WZ--;
                                    f5 = ((((A - x) - ((F & 0x10) >> 4)) & 0xff) & 2) << 4;
                                    f3 = ((((A - x) - ((F & 0x10) >> 4)) & 0xff) & 8);
                                    fp = BC != 0 ? FP : 0;
                                    break;
                                case 0xAA:
                                    // Opcode:    IND
                                    // TStates:   16
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 5 T States - Op Code Fetch
                                    //            M2, PR
                                    //            M3, 3 T States - Memory Write
                                    // MCycles2:  pc:4,pc+1:5,hl:3,IO,[hl:1 x 5]
                                    // Flags:     SZ5?3???
                                    //            * Flags affected as in DEC B
                                    // MemPtr:    MEMPTR = BC_before_decrementing_B - 1
                                    // Operation: [HL]=[C],HL=HL-1,B=B-1
                                    AddCycles(IR, 1);
                                    x = IN();
                                    PokeByte(HL, x);
                                    WZ = BC - 1;
                                    B--;
                                    fs = B & FS;
                                    fz = (B & 0xff) == 0 ? FZ : 0;
                                    f5 = B & F5;
                                    f3 = B & F3;
                                    HL--;
                                    fn = (x & FS) != 0 ? FN : 0;
                                    cy = ((C - 1) & 0xff) + x;
                                    fc = cy > 0xff ? FC : 0;
                                    fh = (fc == FC ? FH : 0);
                                    fp = Parity[((cy & 0x07) ^ B)];
                                    break;
                                case 0xAB:
                                    // Opcode:    OUTD
                                    // TStates:   16
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 5 T States - Op Code Fetch
                                    //            M2, 3 T States - Memory Read
                                    //            M3, PW
                                    // MCycles2:  pc:4,pc+1:5,hl:3,IO,[hl:1 x 5]
                                    // Flags:     SZ5?3??? Flags affected as in DEC B
                                    // MemPtr:    MEMPTR = BC_after_decrementing_B - 1
                                    // Operation: [C]=[HL],HL=HL-1,B=B-1
                                    AddCycles(IR, 1);
                                    B--;
                                    fs = B & FS;
                                    fz = (B & 0xff) == 0 ? FZ : 0;
                                    f5 = B & F5;
                                    f3 = B & F3;
                                    WZ = BC - 1;
                                    x = PeekByte(HL);
                                    Out(BC, x);
                                    HL--;
                                    cy = x + L;
                                    fn = (x & FS) != 0 ? FN : 0;
                                    fc = cy > 0xff ? FC : 0;
                                    fh = fc << 4;
                                    fp = Parity[(cy & 0x07) ^ B];
                                    break;
                                case 0xB0:
                                    // Opcode:    LDIR
                                    // TStates:   16 / 21
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    //            M2, 3 T States - Memory Read
                                    //            M3, 5 T States - Memory Write
                                    //            If Condition
                                    //            M4, 5 T States - Internal CPU Operation
                                    // MCycles2:  pc:4,pc+1:4,hl:3,de:3,de:1 x 2,[de:1 x 5]
                                    // Flags:     --*0**0-
                                    //            * PV set if BC not 0
                                    //            * F5 is bit 1 of (transferred byte + A)
                                    //            * F3 is bit 3 of (transferred byte + A)
                                    // MemPtr:    when BC == 1: MEMPTR is not changed, when BC <> 1: MEMPTR = PC + 1, where PC = instruction address
                                    // Operation: LDI until BC=0
                                    x = PeekByte(HL);
                                    PokeByte(DE, x);
                                    AddCycles(DE, 2);
                                    f3 = (((x + A) & F3) == F3) ? F3 : 0;
                                    f5 = (((x + A) & FN) == FN) ? F5 : 0;
                                    fh = fn = 0;
                                    if (BC != 1) WZ = PC - 1;
                                    BC--;
                                    if (BC != 0)
                                    {
                                        AddCycles(DE, 5);
                                        PC -= 2;
                                    }
                                    fp = (BC != 0) ? FP : 0;
                                    HL++;
                                    DE++;
                                    break;
                                case 0xB1:
                                    // Opcode:    CPIR
                                    // TStates:   16 / 21
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    //            M2, 3 T States - Memory Read
                                    //            M3, 5 T States - Memory Write
                                    //            If Condition
                                    //            M4, 5 T States - Internal CPU Operation
                                    // MCycles2:  pc:4,pc+1:4,hl:3,hl:1 x 5,[hl:1 x 5]
                                    // Flags:     SZ*H**1-
                                    //            * PV set if BC not 0
                                    //            * S
                                    //            *Z
                                    //            *H from (A - (HL) ) as in CP (HL)
                                    //            * F3 is bit 3 of (A - (HL) - H)
                                    //            * H as in F after instruction
                                    //            * F5 is bit 1 of (A - (HL) - H)
                                    //            * H as in F after instruction
                                    // MemPtr:    when BC=1 or A=(HL): exactly as CPI, In other cases MEMPTR = PC + 1 on each step, where PC = instruction address. Note* since at the last execution BC=1 or A=(HL), resulting MEMPTR = PC + 1 + 1, (if there were not interrupts during the execution)
                                    // Operation: CPI until A=[HL] or BC=0
                                    x = PeekByte(HL);
                                    y = (A - x) & 0xff;
                                    fs = y & FS;
                                    fz = (y & 0xff) == 0 ? FZ : 0;
                                    fh = (((A & 0x0f) - (x & 0x0f)) & 0x10) != 0 ? FH : 0;
                                    fn = FN;
                                    AddCycles(HL, 5);
                                    if (BC == 1 || A == x) WZ++;
                                    else WZ = PC - 1;
                                    BC--;
                                    HL++;
                                    f5 = ((((A - x) - ((F & 0x10) >> 4)) & 0xff) & 2) << 4;
                                    f3 = ((((A - x) - ((F & 0x10) >> 4)) & 0xff) & 8);
                                    fp = BC != 0 ? FP : 0;
                                    if ((BC != 0) && (fz == 0))
                                    {
                                        AddCycles(HL - 1, 5);
                                        PC -= 2;
                                    }
                                    break;
                                case 0xB2:
                                    // Opcode:    INIR
                                    // TStates:   16 / 21
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 5 T States - Op Code Fetch
                                    //            M2, PR
                                    //            M3, 3 T States - Memory Write
                                    //            If Condition
                                    //            M4, 5 T States - Internal CPU Operation
                                    // MCycles2:  pc:4,pc+1:5,hl:3,IO,[hl:1 x 5]
                                    // Flags:     SZ5?3???
                                    //            * Flags affected as in DEC B
                                    // MemPtr:    exactly as INI on each execution, I.e. resulting MEMPTR = ((1 << 8) + C) + 1
                                    // Operation: INI until B=0
                                    AddCycles(IR, 1);
                                    x = IN();
                                    PokeByte(HL, x);
                                    WZ = BC + 1;
                                    B--;
                                    fs = B & FS;
                                    fz = (B & 0xff) == 0 ? FZ : 0;
                                    f5 = B & F5;
                                    f3 = B & F3;
                                    HL++;
                                    fn = (x & FS) != 0 ? FN : 0;
                                    cy = (C + 1) + x;
                                    fc = cy > 0xff ? FC : 0;
                                    fh = (x & FC) != 0 ? FH : 0;
                                    fp = Parity[(cy & 0x07) ^ B];
                                    if (B == 0) return;
                                    AddCycles(HL, 5);
                                    PC -= 2;
                                    break;
                                case 0xB3:
                                    // Opcode:    OTIR
                                    // TStates:   16 / 21
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 5 T States - Op Code Fetch
                                    //            M2, 3 T States - Memory Read
                                    //            M3, PW
                                    //            If Condition
                                    //            M4, 5 T States - Internal CPU Operation
                                    // MCycles2:  pc:4,pc+1:5,hl:3,IO,[hl:1 x 5]
                                    // Flags:     SZ5?3??? Flags affected as in DEC B
                                    // MemPtr:    exactly as OUTI on each execution. I.e. resulting MEMPTR = C + 1
                                    // Operation: OUTI until B=0
                                    AddCycles(IR, 1);
                                    B--;
                                    fs = B & FS;
                                    fz = (B & 0xff) == 0 ? FZ : 0;
                                    f5 = B & F5;
                                    f3 = B & F3;
                                    WZ = BC + 1;
                                    x = PeekByte(HL);
                                    Out(BC, x);
                                    HL++;
                                    cy = x + L;
                                    fn = (x & FS) != 0 ? FN : 0;
                                    fc = cy > 0xff ? FC : 0;
                                    fh = fc << 4;
                                    fp = Parity[((x + L) & 0x07) ^ B];
                                    if (B == 0) return;
                                    AddCycles(BC, 5);
                                    PC -= 2;
                                    break;
                                case 0xB8:
                                    // Opcode:    LDDR
                                    // TStates:   16 / 21
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    //            M2, 3 T States - Memory Read
                                    //            M3, 5 T States - Memory Write
                                    //            If Condition
                                    //            M4, 5 T States - Internal CPU Operation
                                    // MCycles2:  pc:4,pc+1:4,hl:3,de:3,de:1 x 2,[de:1 x 5]
                                    // Flags:     --*0**0-
                                    //            * PV set if BC not 0
                                    //            * F5 is bit 1 of (transferred byte + A)
                                    //            * F3 is bit 3 of (transferred byte + A)
                                    // MemPtr:    when BC == 1: MEMPTR is not changed, when BC <> 1: MEMPTR = PC + 1, where PC = instruction address
                                    // Operation: LDD until BC=0
                                    x = PeekByte(HL);
                                    PokeByte(DE, x);
                                    AddCycles(DE, 2);
                                    HL--;
                                    DE--;
                                    if (BC != 1) WZ = PC - 1;
                                    BC--;
                                    y = (x + A) & 0xff;
                                    f5 = f3 = 0;
                                    if ((y & FN) != 0) f5 = F5;
                                    if ((y & F3) != 0) f3 = F3;
                                    fn = 0;
                                    fh = 0;
                                    fp = 0;
                                    if (BC != 0)
                                    {
                                        fp = FP;
                                        AddCycles(DE - 1, 5);
                                        PC -= 2;
                                        WZ = PC + 1;
                                    }
                                    break;
                                case 0xB9:
                                    // Opcode:    CPDR
                                    // TStates:   16 / 21
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    //            M2, 3 T States - Memory Read
                                    //            M3, 5 T States - Memory Write
                                    //            If Condition
                                    //            M4, 5 T States - Internal CPU Operation
                                    // MCycles2:  pc:4,pc+1:4,hl:3,hl:1 x 5,[hl:1 x 5]
                                    // Flags:     SZ*H**1-
                                    //            * PV set if BC not 0
                                    //            * S
                                    //            *Z
                                    //            *H from (A - (HL) ) as in CP (HL)
                                    //            * F3 is bit 3 of (A - (HL) - H)
                                    //            * H as in F after instruction
                                    //            * F5 is bit 1 of (A - (HL) - H)
                                    //            * H as in F after instruction
                                    // MemPtr:    when BC=1 or A=(HL): exactly as CPD, In other cases MEMPTR = PC + 1 on each step, where PC = instruction address. Note* since at the last execution BC=1 or A=(HL), resulting MEMPTR = PC + 1 - 1, (if there were not interrupts during the execution)
                                    // Operation: CPD until A=[HL] or BC=0
                                    x = PeekByte(HL);
                                    y = (A - x) & 0xff;
                                    fs = y & FS;
                                    fz = (y & 0xff) == 0 ? FZ : 0;
                                    fh = (((A & 0x0f) - (x & 0x0f)) & 0x10) != 0 ? FH : 0;
                                    fn = FN;
                                    AddCycles(HL, 5);
                                    WZ = BC != 1 && A != x ? PC - 1 : WZ - 1;
                                    BC--;
                                    HL--;
                                    f5 = ((((A - x) - ((F & 0x10) >> 4)) & 0xff) & 2) << 4;
                                    f3 = ((((A - x) - ((F & 0x10) >> 4)) & 0xff) & 8);
                                    fp = BC != 0 ? FP : 0;
                                    if ((BC != 0) && (fz == 0))
                                    {
                                        AddCycles(HL + 1, 5);
                                        PC -= 2;
                                    }
                                    break;
                                case 0xBA:
                                    // Opcode:    INDR
                                    // TStates:   16 / 21
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 5 T States - Op Code Fetch
                                    //            M2, PR
                                    //            M3, 3 T States - Memory Write
                                    //            If Condition
                                    //            M4, 5 T States - Internal CPU Operation
                                    // MCycles2:  pc:4,pc+1:5,hl:3,IO,[hl:1 x 5]
                                    // Flags:     SZ5?3???
                                    //            * Flags affected as in DEC B
                                    // MemPtr:    exactly as IND on each execution, I.e. resulting MEMPTR = ((1 << 8) + C) - 1
                                    // Operation: IND until B=0
                                    AddCycles(IR, 1);
                                    x = IN();
                                    PokeByte(HL, x);
                                    WZ = BC - 1;
                                    B--;
                                    fs = B & FS;
                                    fz = (B & 0xff) == 0 ? FZ : 0;
                                    f5 = B & F5;
                                    f3 = B & F3;
                                    HL--;
                                    fn = (x & FS) != 0 ? FN : 0;
                                    cy = ((C - 1) & 0xff) + x;
                                    fc = cy > 0xff ? FC : 0;
                                    fh = (fc == FC ? FH : 0);
                                    fp = Parity[((cy & 0x07) ^ B)];
                                    if (B == 0) return;
                                    AddCycles(HL, 5);
                                    PC -= 2;
                                    break;
                                case 0xBB:
                                    // Opcode:    OTDR
                                    // TStates:   16 / 21
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 5 T States - Op Code Fetch
                                    //            M2, 3 T States - Memory Read
                                    //            M3, PW
                                    //            If Condition
                                    //            M4, 5 T States - Internal CPU Operation
                                    // MCycles2:  pc:4,pc+1:5,hl:3,IO,[hl:1 x 5]
                                    // Flags:     SZ5?3??? Flags affected as in DEC B
                                    // MemPtr:    exactly as OUTD on each execution. I.e. resulting MEMPTR = C - 1
                                    // Operation: OUTD until B=0
                                    AddCycles(IR, 1);
                                    B--;
                                    fs = B & FS;
                                    fz = (B & 0xff) == 0 ? FZ : 0;
                                    f5 = B & F5;
                                    f3 = B & F3;
                                    WZ = BC - 1;
                                    x = PeekByte(HL);
                                    Out(BC, x);
                                    HL--;
                                    cy = x + L;
                                    fn = (x & FS) != 0 ? FN : 0;
                                    fc = cy > 0xff ? FC : 0;
                                    fh = fc << 4;
                                    fp = Parity[(cy & 0x07) ^ B];
                                    if (B == 0) return;
                                    AddCycles(BC, 5);
                                    PC -= 2;
                                    break;
                            }
                        }
                        break;
                    #endregion  AfterED
                    case 0xEE:
                        // Opcode:    XOR $b
                        // Attributes:Byte, Direct
                        // TStates:   7
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        //            M1, 3 T States - Operand Data Read
                        // MCycles2:  pc:4,pc+1:3
                        // Flags:     SZ503P00
                        // Operation: A = A x N
                        x = (A ^ PeekByte(PC++)) & 0xff;
                        fs = x & FS;
                        fz = (x & 0xff) == 0 ? FZ : 0;
                        f5 = x & F5;
                        fh = 0;
                        f3 = x & F3;
                        fp = Parity[x & 0xff];
                        fn = 0;
                        fc = 0;
                        A = x & 0xff;
                        break;
                    case 0xEF:
                        // Opcode:    RST 28H
                        // Attributes:Restart
                        // TStates:   11
                        // MCycles:   M0, 5 T States - Op Code Fetch
                        //            M1, 3 T States - Stack Write of High Byte
                        //            M2, 3 T States - Stack Write of Low byte
                        // MCycles2:  pc:5,sp-1:3,sp-2:3
                        // MemPtr:    MEMPTR = addr
                        // Operation: -SP,-SP,[SP+1,SP] = PC,PC = 28
                        WZ = 0x28;
                        AddCycles(IR, 1);
                        // Pass control to the Virtual function Restart
                        Restart(Opcode, PC);
                        PokeByte(--SP, PC >> 8);
                        PokeByte(--SP, PC & 0xff);
                        PC = WZ;
                        break;
                    case 0xF0:
                        // Opcode:    RET P
                        // Attributes:Conditional, Return
                        // TStates:   5 / 11
                        // MCycles:   M0, 5 T States - Op Code Fetch
                        //            If Condition
                        //            M1, 3 T States - Stack Read of Low Byte
                        //            M2, 3 T States - Stack Read of High Byte
                        // MCycles2:  pc:5,[sp:3,sp+1:3]
                        // MemPtr:    MEMPTR = addr
                        // Operation: If !S then PC = [SP,SP+1],SP+ = 2
                        AddCycles(IR, 1);
                        if (fs == 0)
                        {
                            WZ = (PeekByte(SP++) + (PeekByte(SP++) << 8));
                            PC = WZ;
                            // Pass control to the Virtual function Return
                            Return(Opcode, PreExecutePC);
                        }
                        break;
                    case 0xF1:
                        // Opcode:    POP AF
                        // TStates:   10
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        //            M1, 3 T States - Stack Read of High Byte
                        //            M2, 3 T States - Stack Read of Low Byte
                        // MCycles2:  pc:4,sp:3,sp+1:3
                        // Flags:     ********
                        //            * As preserved on the stack
                        // Operation: F = [SP],SP+,A = [SP],SP+
                        AF = (PeekByte(SP++) + (PeekByte(SP++) << 8));
                        break;
                    case 0xF2:
                        // Opcode:    JP P,$aa
                        // Attributes:Branch, Conditional
                        // TStates:   10
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        //            M1, 3 T States - Operand Data Read of Low Byte
                        //            M2, 3 T States - Operand Data Read of High Byte
                        // MCycles2:  pc:4,pc+1:3,pc+2:3
                        // MemPtr:    MEMPTR = addr (independantly on condition satisfied or not)
                        // Operation: If !S then PC = NN
                        WZ = (PeekByte(PC++) + (PeekByte(PC++) << 8));
                        if (fs == 0)
                        {
                            PC = WZ;
                            // Pass control to the Virtual function Jump
                            Jump(Opcode, PreExecutePC);
                        }
                        break;
                    case 0xF3:
                        // Opcode:    DI
                        // TStates:   4
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        // MCycles2:  pc:4
                        // Operation: disable interrupts
                        iff1 = iff2 = 0;
                        break;
                    case 0xF4:
                        // Opcode:    CALL P,$aa
                        // Attributes:Branch, Call, Conditional
                        // TStates:   10 / 17
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        //            M1, 3 T States - Operand Data Read of Low Byte
                        //            M2, 4 T States - Operand Data Read of High Byte
                        //            If Condition
                        //            SP--
                        //            M3, 3 T States - Stack Write of High Byte
                        //            SP--
                        //            M4, 3 T States - Stack Write of Low byte
                        // MCycles2:  pc:4,pc+1:3,pc+2:3,[pc+2:1,sp-1:3,sp-2:3]
                        // MemPtr:    MEMPTR = addr (independantly on condition satisfied or not)
                        // Operation: If !S then [SP- = 2] = PC,PC = NN
                        WZ = (PeekByte(PC++) + (PeekByte(PC++) << 8));
                        if (fs == 0)
                        {
                            AddCycles(PC + 1, 1);
                            // Pass control to the Virtual function Call
                            Call(Opcode, PC);
                            PokeByte(--SP, PC >> 8);
                            PokeByte(--SP, PC & 0xff);
                            PC = WZ;
                        }
                        break;
                    case 0xF5:
                        // Opcode:    PUSH AF
                        // TStates:   11
                        // MCycles:   M0, 5 T States - Op Code Fetch
                        //            M1, 3 T States - Stack Write of High Byte
                        //            M2, 3 T States - Stack Write of Low byte
                        // MCycles2:  pc:5,sp-1:3,sp-2:3
                        // Operation: -SP,[SP] = A,-SP,[SP] = F
                        {
                            AddCycles(IR, 1);
                            PokeByte(--SP, AF >> 8);
                            PokeByte(--SP, AF & 0xff);
                        }
                        break;
                    case 0xF6:
                        // Opcode:    OR $b
                        // Attributes:Byte, Direct
                        // TStates:   7
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        //            M1, 3 T States - Operand Data Read
                        // MCycles2:  pc:4,pc+1:3
                        // Flags:     SZ503P00
                        // Operation: A = A v N
                        x = (A | PeekByte(PC++)) & 0xff;
                        fs = x & FS;
                        fz = (x & 0xff) == 0 ? FZ : 0;
                        f5 = x & F5;
                        fh = 0;
                        f3 = x & F3;
                        fp = Parity[x & 0xff];
                        fn = 0;
                        fc = 0;
                        A = x & 0xff;
                        break;
                    case 0xF7:
                        // Opcode:    RST 30H
                        // Attributes:Restart
                        // TStates:   11
                        // MCycles:   M0, 5 T States - Op Code Fetch
                        //            M1, 3 T States - Stack Write of High Byte
                        //            M2, 3 T States - Stack Write of Low byte
                        // MCycles2:  pc:5,sp-1:3,sp-2:3
                        // MemPtr:    MEMPTR = addr
                        // Operation: -SP,-SP,[SP+1,SP] = PC,PC = 30
                        WZ = 0x30;
                        AddCycles(IR, 1);
                        // Pass control to the Virtual function Restart
                        Restart(Opcode, PC);
                        PokeByte(--SP, PC >> 8);
                        PokeByte(--SP, PC & 0xff);
                        PC = WZ;
                        break;
                    case 0xF8:
                        // Opcode:    RET M
                        // Attributes:Conditional, Return
                        // TStates:   5 / 11
                        // MCycles:   M0, 5 T States - Op Code Fetch
                        //            If Condition
                        //            M1, 3 T States - Stack Read of Low Byte
                        //            M2, 3 T States - Stack Read of High Byte
                        // MCycles2:  pc:5,[sp:3,sp+1:3]
                        // MemPtr:    MEMPTR = addr
                        // Operation: If S then PC = [SP,SP+1],SP+ = 2
                        AddCycles(IR, 1);
                        if (fs != 0)
                        {
                            WZ = (PeekByte(SP++) + (PeekByte(SP++) << 8));
                            PC = WZ;
                            // Pass control to the Virtual function Return
                            Return(Opcode, PreExecutePC);
                        }
                        break;
                    case 0xF9:
                        // Opcode:    LD SP,HL
                        // TStates:   6
                        // MCycles:   M0, 6 T States - Op Code Fetch
                        // MCycles2:  pc:6
                        // Operation: SP = HL
                        SP = HL;
                        AddCycles(IR, 2);

                        break;
                    case 0xFA:
                        // Opcode:    JP M,$aa
                        // Attributes:Branch, Conditional
                        // TStates:   10
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        //            M1, 3 T States - Operand Data Read of Low Byte
                        //            M2, 3 T States - Operand Data Read of High Byte
                        // MCycles2:  pc:4,pc+1:3,pc+2:3
                        // MemPtr:    MEMPTR = addr (independantly on condition satisfied or not)
                        // Operation: If S then PC = NN
                        WZ = (PeekByte(PC++) + (PeekByte(PC++) << 8));
                        if (fs != 0)
                        {
                            PC = WZ;
                            // Pass control to the Virtual function Jump
                            Jump(Opcode, PreExecutePC);
                        }
                        break;
                    case 0xFB:
                        // Opcode:    EI
                        // TStates:   4
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        // MCycles2:  pc:4
                        // Operation: enable interrupts
                        iff1 = iff2 = 1;
                        EIExecuted = 2;
                        break;
                    case 0xFC:
                        // Opcode:    CALL M,$aa
                        // Attributes:Branch, Call, Conditional
                        // TStates:   10 / 17
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        //            M1, 3 T States - Operand Data Read of Low Byte
                        //            M2, 4 T States - Operand Data Read of High Byte
                        //            If Condition
                        //            SP--
                        //            M3, 3 T States - Stack Write of High Byte
                        //            SP--
                        //            M4, 3 T States - Stack Write of Low byte
                        // MCycles2:  pc:4,pc+1:3,pc+2:3,[pc+2:1,sp-1:3,sp-2:3]
                        // MemPtr:    MEMPTR = addr (independantly on condition satisfied or not)
                        // Operation: If S then [SP- = 2] = PC,PC = NN
                        WZ = (PeekByte(PC++) + (PeekByte(PC++) << 8));
                        if (fs != 0)
                        {
                            AddCycles(PC + 1, 1);
                            // Pass control to the Virtual function Call
                            Call(Opcode, PC);
                            PokeByte(--SP, PC >> 8);
                            PokeByte(--SP, PC & 0xff);
                            PC = WZ;
                        }
                        break;
                    #region  AfterFD
                    case 0xFD:
                        {
                            Opcode = FetchOpcode();
                            switch (Opcode)
                            {
                                case 0x09:
                                    // Opcode:    ADD IY,BC
                                    // TStates:   15
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    //            M2, 4 T States - Internal CPU Operation
                                    //            M3, 3 T States - Internal CPU Operation
                                    // MCycles2:  pc:4,pc+1:11
                                    // Flags:     --***-0C
                                    //            * F5 H F3 from higher bytes addition
                                    // Operation: IY=IY+BC
                                    AddCycles(IR, 4);
                                    AddCycles(IR, 3);
                                    WZ = IY + 1;
                                    x = IY + BC;
                                    f5 = (x >> 8) & F5;
                                    fh = (((IY & 0xfff) + (BC & 0xfff)) & 0x1000) != 0 ? FH : 0;
                                    f3 = (x >> 8) & F3;
                                    fn = 0;
                                    fc = (x & 0x10000) != 0 ? FC : 0;
                                    IY = x;
                                    break;
                                case 0x19:
                                    // Opcode:    ADD IY,DE
                                    // TStates:   15
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    //            M2, 4 T States - Internal CPU Operation
                                    //            M3, 3 T States - Internal CPU Operation
                                    // MCycles2:  pc:4,pc+1:11
                                    // Flags:     --***-0C
                                    //            * F5 H F3 from higher bytes addition
                                    // Operation: IY=IY+DE
                                    AddCycles(IR, 4);
                                    AddCycles(IR, 3);
                                    WZ = IY + 1;
                                    x = IY + DE;
                                    f5 = (x >> 8) & F5;
                                    fh = (((IY & 0xfff) + (DE & 0xfff)) & 0x1000) != 0 ? FH : 0;
                                    f3 = (x >> 8) & F3;
                                    fn = 0;
                                    fc = (x & 0x10000) != 0 ? FC : 0;
                                    IY = x;
                                    break;
                                case 0x21:
                                    // Opcode:    LD IY,$nn
                                    // Attributes:Word, Direct
                                    // TStates:   14
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    //            M2, 3 T States - Operand Data Read of Low Byte
                                    //            M3, 3 T States - Operand Data Read of High Byte
                                    // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+2:3
                                    // Operation: IY=NN
                                    IY = (PeekByte(PC++) | (PeekByte(PC++) << 8));
                                    break;
                                case 0x22:
                                    // Opcode:    LD ($nn),IY
                                    // Attributes:Indirect, Word
                                    // TStates:   20
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    //            M2, 3 T States - Operand Data Read of Low Byte
                                    //            M3, 3 T States - Operand Data Read of High Byte
                                    //            M4, 3 T States - Memory Write of Low Byte
                                    //            M5, 3 T States - Memory Write of High Byte
                                    // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,nn:3,nn+1:3
                                    // MemPtr:    MEMPTR = addr + 1
                                    // Operation: [NN,NN+1]=IY
                                    WZ = (PeekByte(PC++) | (PeekByte(PC++) << 8));
                                    PokeByte(WZ++, IYL);
                                    PokeByte(WZ, IYH);
                                    break;
                                case 0x23:
                                    // Opcode:    INC IY
                                    // TStates:   10
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 6 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:6
                                    // Operation: IY=IY+1
                                    AddCycles(IR, 2);
                                    IY++;
                                    break;
                                case 0x24:
                                    // Opcode:    INC IYH (Undocumented)
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1|4
                                    // Flags:     SZ5H3VN-
                                    // Operation: IYH=IYH+1
                                    x = (IYH + 1) & 0xff;
                                    fs = x & FS;
                                    fz = (x & 0xff) == 0 ? FZ : 0;
                                    f5 = x & F5;
                                    fh = ((IYH & 0x0f) + 1) & 0x10;
                                    f3 = x & F3;
                                    fp = (IYH == 0x7f) ? FV : 0;
                                    fn = 0;
                                    IYH = x;

                                    break;
                                case 0x25:
                                    // Opcode:    DEC IYH (Undocumented)
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1|4
                                    // Flags:     SZ5H3VN-
                                    // Operation: IYH=IYH-1
                                    x = (IYH - 1) & 0xff;
                                    fs = x & FS;
                                    fz = (x & 0xff) == 0 ? FZ : 0;
                                    f5 = x & F5;
                                    fh = (((IYH & 0x0f) - 1) & 0x10) != 0 ? FH : 0;
                                    f3 = x & F3;
                                    fp = (IYH == 0x80) ? FV : 0;
                                    fn = FN;
                                    IYH = x;
                                    break;
                                case 0x26:
                                    // Opcode:    LD IYH,$b (Undocumented)
                                    // Attributes:Byte, Direct
                                    // TStates:   11
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    //            M2, 3 T States - Operand Data Read
                                    // MCycles2:  pc:4,pc+1:4,pc+2:3
                                    // Operation: IYH=N
                                    IYH = PeekByte(PC++);

                                    break;
                                case 0x29:
                                    // Opcode:    ADD IY,IY
                                    // TStates:   15
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    //            M2, 4 T States - Internal CPU Operation
                                    //            M3, 3 T States - Internal CPU Operation
                                    // MCycles2:  pc:4,pc+1:11
                                    // Flags:     --***-0C
                                    //            * F5 H F3 from higher bytes addition
                                    // Operation: IY=IY+IY
                                    AddCycles(IR, 4);
                                    AddCycles(IR, 3);
                                    WZ = IY + 1;
                                    x = IY + IY;
                                    f5 = (x >> 8) & F5;
                                    fh = (((IY & 0xfff) + (IY & 0xfff)) & 0x1000) != 0 ? FH : 0;
                                    f3 = (x >> 8) & F3;
                                    fn = 0;
                                    fc = (x & 0x10000) != 0 ? FC : 0;
                                    IY = x;
                                    break;
                                case 0x2A:
                                    // Opcode:    LD IY,($nn) 
                                    // Attributes:Indirect, Word
                                    // TStates:   20
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    //            M2, 3 T States - Operand Data Read of Low Byte
                                    //            M3, 3 T States - Operand Data Read of High Byte
                                    //            M4, 3 T States - Memory Read of Low Byte
                                    //            M5, 3 T States - Memory Read of High Byte
                                    // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,nn:3,nn+1:3
                                    // MemPtr:    MEMPTR = addr + 1
                                    // Operation: IY=[NN,NN+1]
                                    WZ = (PeekByte(PC++) | (PeekByte(PC++) << 8));
                                    IY = (PeekByte(WZ++) | (PeekByte(WZ) << 8));
                                    break;
                                case 0x2B:
                                    // Opcode:    DEC IY
                                    // TStates:   10
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 6 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:6
                                    // Operation: IY=IY-1
                                    AddCycles(IR, 2);
                                    IY--;
                                    break;
                                case 0x2C:
                                    // Opcode:    INC IYL (Undocumented)
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1|4
                                    // Flags:     SZ5H3VN-
                                    // Operation: IYL=IYL+1
                                    x = (IYL + 1) & 0xff;
                                    fs = x & FS;
                                    fz = (x & 0xff) == 0 ? FZ : 0;
                                    f5 = x & F5;
                                    fh = ((IYL & 0x0f) + 1) & 0x10;
                                    f3 = x & F3;
                                    fp = (IYL == 0x7f) ? FV : 0;
                                    fn = 0;
                                    IYL = x;

                                    break;
                                case 0x2D:
                                    // Opcode:    DEC IYL (Undocumented)
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1|4
                                    // Flags:     SZ5H3VN-
                                    // Operation: IYL=IYL-1
                                    x = (IYL - 1) & 0xff;
                                    fs = x & FS;
                                    fz = (x & 0xff) == 0 ? FZ : 0;
                                    f5 = x & F5;
                                    fh = (((IYL & 0x0f) - 1) & 0x10) != 0 ? FH : 0;
                                    f3 = x & F3;
                                    fp = (IYL == 0x80) ? FV : 0;
                                    fn = FN;
                                    IYL = x;
                                    break;
                                case 0x2E:
                                    // Opcode:    LD IYL,$b (Undocumented)
                                    // Attributes:Byte, Direct
                                    // TStates:   11
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    //            M2, 3 T States - Operand Data Read
                                    // MCycles2:  pc:4,pc+1:4,pc+2:3
                                    // Operation: IYL=N
                                    IYL = PeekByte(PC++);
                                    break;
                                case 0x34:
                                    // Opcode:    INC (IY$o) 
                                    // Attributes:Indexed
                                    // TStates:   23
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    //            M2, 3 T States - Operand Data Read
                                    //            M3, 5 T States - Internal CPU Operation
                                    //            M4, 4 T States - Memory Read
                                    //            M5, 3 T States - Memory Write
                                    // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+2:1 x 5,ii+n:3,ii+n:1,ii+n(write):3
                                    // Flags:     SZ5H3VN-
                                    // MemPtr:    MEMPTR = INDEX+d
                                    // Operation: [IY+n]=[IY+n]+1
                                    WZ = (IY + (sbyte)PeekByte(PC)) & 0xFFFF;
                                    AddCycles(PC, 5);
                                    y = PeekByte(WZ);
                                    x = (y + 1) & 0xff;
                                    fs = x & FS;
                                    fz = (x & 0xff) == 0 ? FZ : 0;
                                    f5 = x & F5;
                                    fh = ((y & 0x0f) + 1) & 0x10;
                                    f3 = x & F3;
                                    fp = (y == 0x7f) ? FV : 0;
                                    fn = 0;
                                    PokeByte(WZ, x);
                                    AddCycles(WZ, 1);
                                    PC++;
                                    break;
                                case 0x35:
                                    // Opcode:    DEC (IY$o) 
                                    // Attributes:Indexed
                                    // TStates:   23
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    //            M2, 3 T States - Operand Data Read
                                    //            M3, 5 T States - Internal CPU Operation
                                    //            M4, 4 T States - Memory Read
                                    //            M5, 3 T States - Memory Write
                                    // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+2:1 x 5,ii+n:3,ii+n:1,ii+n(write):3
                                    // Flags:     SZ5H3VN-
                                    // MemPtr:    MEMPTR = INDEX+d
                                    // Operation: [IY+n]=[IY+n]-1
                                    WZ = (IY + (sbyte)PeekByte(PC)) & 0xFFFF;
                                    AddCycles(PC, 5);
                                    y = PeekByte(WZ);
                                    x = (y - 1) & 0xff;
                                    fs = x & FS;
                                    fz = (x & 0xff) == 0 ? FZ : 0;
                                    f5 = x & F5;
                                    fh = (((y & 0x0f) - 1) & 0x10) != 0 ? FH : 0;
                                    f3 = x & F3;
                                    fp = (y == 0x80) ? FV : 0;
                                    fn = FN;
                                    PokeByte(WZ, x);
                                    AddCycles(WZ, 1);
                                    PC++;
                                    break;
                                case 0x36:
                                    // Opcode:    LD (IY$o),$b
                                    // Attributes:Indexed
                                    // TStates:   19
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    //            M2, 3 T States - Operand Data Read
                                    //            M3, 5 T States - Internal CPU Operation
                                    //            M4, 3 T States - Memory Write
                                    // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3
                                    // MemPtr:    MEMPTR = INDEX+d
                                    // Operation: [IY+n]=N
                                    WZ = (IY + (sbyte)PeekByte(PC)) & 0xFFFF;
                                    AddCycles(PC++, 2);
                                    PokeByte(WZ, PeekByte(PC++));
                                    break;
                                case 0x39:
                                    // Opcode:    ADD IY,SP
                                    // TStates:   15
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    //            M2, 4 T States - Internal CPU Operation
                                    //            M3, 3 T States - Internal CPU Operation
                                    // MCycles2:  pc:4,pc+1:11
                                    // Flags:     --***-0C
                                    //            * F5 H F3 from higher bytes addition
                                    // Operation: IY=IY+SP
                                    AddCycles(IR, 4);
                                    AddCycles(IR, 3);
                                    WZ = IY + 1;
                                    x = IY + SP;
                                    f5 = (x >> 8) & F5;
                                    fh = (((IY & 0xfff) + (SP & 0xfff)) & 0x1000) != 0 ? FH : 0;
                                    f3 = (x >> 8) & F3;
                                    fn = 0;
                                    fc = (x & 0x10000) != 0 ? FC : 0;
                                    IY = x;
                                    break;
                                case 0x44:
                                    // Opcode:    LD B,IYH (Undocumented)
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1|4
                                    // Operation: B=IYH
                                    B = IYH;
                                    break;
                                case 0x45:
                                    // Opcode:    LD B,IYL (Undocumented)
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1|4
                                    // Operation: B=IYL
                                    B = IYL;
                                    break;
                                case 0x46:
                                    // Opcode:    LD B,(IY$o) 
                                    // Attributes:Indexed
                                    // TStates:   19
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    //            M2, 3 T States - Operand Data Read
                                    //            M3, 5 T States - Internal CPU Operation
                                    //            M4, 3 T States - Memory Read
                                    // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+2:1 x 5,ii+n:3
                                    // MemPtr:    MEMPTR = INDEX+d
                                    // Operation: B=[IY+n]
                                    B = GetByteAtIndex(IY);
                                    break;
                                case 0x4C:
                                    // Opcode:    LD C,IYH (Undocumented)
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1|4
                                    // Operation: C=IYH
                                    C = IYH;
                                    break;
                                case 0x4D:
                                    // Opcode:    LD C,IYL (Undocumented)
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1|4
                                    // Operation: C=IYL
                                    C = IYL;
                                    break;
                                case 0x4E:
                                    // Opcode:    LD C,(IY$o) 
                                    // Attributes:Indexed
                                    // TStates:   19
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    //            M2, 3 T States - Operand Data Read
                                    //            M3, 5 T States - Internal CPU Operation
                                    //            M4, 3 T States - Memory Read
                                    // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+2:1 x 5,ii+n:3
                                    // MemPtr:    MEMPTR = INDEX+d
                                    // Operation: C=[IY+n]
                                    C = GetByteAtIndex(IY);
                                    break;
                                case 0x54:
                                    // Opcode:    LD D,IYH (Undocumented)
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1|4
                                    // Operation: D=IYH
                                    D = IYH;
                                    break;
                                case 0x55:
                                    // Opcode:    LD D,IYL (Undocumented)
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1|4
                                    // Operation: D=IYL
                                    D = IYL;
                                    break;
                                case 0x56:
                                    // Opcode:    LD D,(IY$o) 
                                    // Attributes:Indexed
                                    // TStates:   19
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    //            M2, 3 T States - Operand Data Read
                                    //            M3, 5 T States - Internal CPU Operation
                                    //            M4, 3 T States - Memory Read
                                    // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+2:1 x 5,ii+n:3
                                    // MemPtr:    MEMPTR = INDEX+d
                                    // Operation: D=[IY+n]
                                    D = GetByteAtIndex(IY);
                                    break;
                                case 0x5C:
                                    // Opcode:    LD E,IYH (Undocumented)
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1|4
                                    // Operation: E=IYH
                                    E = IYH;
                                    break;
                                case 0x5D:
                                    // Opcode:    LD E,IYL (Undocumented)
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1|4
                                    // Operation: E=IYL
                                    E = IYL;
                                    break;
                                case 0x5E:
                                    // Opcode:    LD E,(IY$o) 
                                    // Attributes:Indexed
                                    // TStates:   19
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    //            M2, 3 T States - Operand Data Read
                                    //            M3, 5 T States - Internal CPU Operation
                                    //            M4, 3 T States - Memory Read
                                    // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+2:1 x 5,ii+n:3
                                    // MemPtr:    MEMPTR = INDEX+d
                                    // Operation: E=[IY+n]
                                    E = GetByteAtIndex(IY);
                                    break;
                                case 0x60:
                                    // Opcode:    LD IYH,B (Undocumented)
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1|4
                                    // Operation: IYH=B
                                    IYH = B;
                                    break;
                                case 0x61:
                                    // Opcode:    LD IYH,C (Undocumented)
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1|4
                                    // Operation: IYH=C
                                    IYH = C;
                                    break;
                                case 0x62:
                                    // Opcode:    LD IYH,D (Undocumented)
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1|4
                                    // Operation: IYH=D
                                    IYH = D;
                                    break;
                                case 0x63:
                                    // Opcode:    LD IYH,E (Undocumented)
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1|4
                                    // Operation: IYH=E
                                    IYH = E;
                                    break;
                                case 0x64:
                                    // Opcode:    LD IYH,IYH (Undocumented)
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1|4
                                    // Operation: IYH=IYH
                                    break;
                                case 0x65:
                                    // Opcode:    LD IYH,IYL (Undocumented)
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1|4
                                    // Operation: IYH=IYL
                                    IYH = IYL;
                                    break;
                                case 0x66:
                                    // Opcode:    LD H,(IY$o) 
                                    // Attributes:Indexed
                                    // TStates:   19
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    //            M2, 3 T States - Operand Data Read
                                    //            M3, 5 T States - Internal CPU Operation
                                    //            M4, 3 T States - Memory Read
                                    // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+2:1 x 5,ii+n:3
                                    // MemPtr:    MEMPTR = INDEX+d
                                    // Operation: H=[IY+n]
                                    H = GetByteAtIndex(IY);
                                    break;
                                case 0x67:
                                    // Opcode:    LD IYH,A (Undocumented)
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1|4
                                    // Operation: IYH=A
                                    IYH = A;
                                    break;
                                case 0x68:
                                    // Opcode:    LD IYL,B (Undocumented)
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1|4
                                    // Operation: IYL=B
                                    IYL = B;
                                    break;
                                case 0x69:
                                    // Opcode:    LD IYL,C (Undocumented)
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1|4
                                    // Operation: IYL=C
                                    IYL = C;
                                    break;
                                case 0x6A:
                                    // Opcode:    LD IYL,D (Undocumented)
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1|4
                                    // Operation: IYL=D
                                    IYL = D;
                                    break;
                                case 0x6B:
                                    // Opcode:    LD IYL,E (Undocumented)
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1|4
                                    // Operation: IYL=E
                                    IYL = E;
                                    break;
                                case 0x6C:
                                    // Opcode:    LD IYL,IYH (Undocumented)
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1|4
                                    // Operation: IYL=IYH
                                    IYL = IYH;
                                    break;
                                case 0x6D:
                                    // Opcode:    LD IYL,IYL (Undocumented)
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1|4
                                    // Operation: IYL=IYL
                                    break;
                                case 0x6E:
                                    // Opcode:    LD L,(IY$o) 
                                    // Attributes:Indexed
                                    // TStates:   19
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    //            M2, 3 T States - Operand Data Read
                                    //            M3, 5 T States - Internal CPU Operation
                                    //            M4, 3 T States - Memory Read
                                    // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+2:1 x 5,ii+n:3
                                    // MemPtr:    MEMPTR = INDEX+d
                                    // Operation: L=[IY+n]
                                    L = GetByteAtIndex(IY);
                                    break;
                                case 0x6F:
                                    // Opcode:    LD IYL,A (Undocumented)
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1|4
                                    // Operation: IYL=A
                                    IYL = A;
                                    break;
                                case 0x70:
                                    // Opcode:    LD (IY$o),B
                                    // Attributes:Indexed
                                    // TStates:   19
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    //            M2, 3 T States - Operand Data Read
                                    //            M3, 5 T States - Internal CPU Operation
                                    //            M4, 3 T States - Memory Write
                                    // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+2:1 x 5,ii+n:3
                                    // MemPtr:    MEMPTR = INDEX+d
                                    // Operation: [IY+n]=r
                                    WZ = (IY + (sbyte)PeekByte(PC)) & 0xFFFF;
                                    AddCycles(PC, 5);
                                    PokeByte(WZ, B);
                                    PC++;
                                    break;
                                case 0x71:
                                    // Opcode:    LD (IY$o),C
                                    // Attributes:Indexed
                                    // TStates:   19
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    //            M2, 3 T States - Operand Data Read
                                    //            M3, 5 T States - Internal CPU Operation
                                    //            M4, 3 T States - Memory Write
                                    // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+2:1 x 5,ii+n:3
                                    // MemPtr:    MEMPTR = INDEX+d
                                    // Operation: [IY+n]=r
                                    WZ = (IY + (sbyte)PeekByte(PC)) & 0xFFFF;
                                    AddCycles(PC, 5);
                                    PokeByte(WZ, C);
                                    PC++;
                                    break;
                                case 0x72:
                                    // Opcode:    LD (IY$o),D
                                    // Attributes:Indexed
                                    // TStates:   19
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    //            M2, 3 T States - Operand Data Read
                                    //            M3, 5 T States - Internal CPU Operation
                                    //            M4, 3 T States - Memory Write
                                    // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+2:1 x 5,ii+n:3
                                    // MemPtr:    MEMPTR = INDEX+d
                                    // Operation: [IY+n]=r
                                    WZ = (IY + (sbyte)PeekByte(PC)) & 0xFFFF;
                                    AddCycles(PC, 5);
                                    PokeByte(WZ, D);
                                    PC++;
                                    break;
                                case 0x73:
                                    // Opcode:    LD (IY$o),E
                                    // Attributes:Indexed
                                    // TStates:   19
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    //            M2, 3 T States - Operand Data Read
                                    //            M3, 5 T States - Internal CPU Operation
                                    //            M4, 3 T States - Memory Write
                                    // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+2:1 x 5,ii+n:3
                                    // MemPtr:    MEMPTR = INDEX+d
                                    // Operation: [IY+n]=r
                                    WZ = (IY + (sbyte)PeekByte(PC)) & 0xFFFF;
                                    AddCycles(PC, 5);
                                    PokeByte(WZ, E);
                                    PC++;
                                    break;
                                case 0x74:
                                    // Opcode:    LD (IY$o),H
                                    // Attributes:Indexed
                                    // TStates:   19
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    //            M2, 3 T States - Operand Data Read
                                    //            M3, 5 T States - Internal CPU Operation
                                    //            M4, 3 T States - Memory Write
                                    // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+2:1 x 5,ii+n:3
                                    // MemPtr:    MEMPTR = INDEX+d
                                    // Operation: [IY+n]=r
                                    WZ = (IY + (sbyte)PeekByte(PC)) & 0xFFFF;
                                    AddCycles(PC, 5);
                                    PokeByte(WZ, H);
                                    PC++;
                                    break;
                                case 0x75:
                                    // Opcode:    LD (IY$o),L
                                    // Attributes:Indexed
                                    // TStates:   19
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    //            M2, 3 T States - Operand Data Read
                                    //            M3, 5 T States - Internal CPU Operation
                                    //            M4, 3 T States - Memory Write
                                    // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+2:1 x 5,ii+n:3
                                    // MemPtr:    MEMPTR = INDEX+d
                                    // Operation: [IY+n]=r
                                    WZ = (IY + (sbyte)PeekByte(PC)) & 0xFFFF;
                                    AddCycles(PC, 5);
                                    PokeByte(WZ, L);
                                    PC++;
                                    break;
                                case 0x77:
                                    // Opcode:    LD (IY$o),A
                                    // Attributes:Indexed
                                    // TStates:   19
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    //            M2, 3 T States - Operand Data Read
                                    //            M3, 5 T States - Internal CPU Operation
                                    //            M4, 3 T States - Memory Write
                                    // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+2:1 x 5,ii+n:3
                                    // MemPtr:    MEMPTR = INDEX+d
                                    // Operation: [IY+n]=r
                                    WZ = (IY + (sbyte)PeekByte(PC)) & 0xFFFF;
                                    AddCycles(PC, 5);
                                    PokeByte(WZ, A);
                                    PC++;
                                    break;
                                case 0x7C:
                                    // Opcode:    LD A,IYH (Undocumented)
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1|4
                                    // Operation: A=IYH
                                    A = IYH;
                                    break;
                                case 0x7D:
                                    // Opcode:    LD A,IYL (Undocumented)
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1|4
                                    // Operation: A=IYL
                                    A = IYL;
                                    break;
                                case 0x7E:
                                    // Opcode:    LD A,(IY$o) 
                                    // Attributes:Indexed
                                    // TStates:   19
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    //            M2, 3 T States - Operand Data Read
                                    //            M3, 5 T States - Internal CPU Operation
                                    //            M4, 3 T States - Memory Read
                                    // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+2:1 x 5,ii+n:3
                                    // MemPtr:    MEMPTR = INDEX+d
                                    // Operation: A=[IY+n]
                                    A = GetByteAtIndex(IY);
                                    break;
                                case 0x84:
                                    // Opcode:    ADD A,IYH (Undocumented)
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1|4
                                    // Flags:     --***-0C
                                    //            * F5 H F3 from higher bytes addition
                                    // Operation: A=A+IYH
                                    x = (A + IYH) & 0xff;
                                    fs = x & FS;
                                    fz = (x & 0xff) == 0 ? FZ : 0;
                                    f5 = x & F5;
                                    fh = ((((A & 0x0f) + (IYH & 0x0f))) & 0x10);
                                    f3 = x & F3;
                                    fp = (((A ^ ~IYH) & (A ^ x)) & 0x80) != 0 ? FV : 0;
                                    fn = 0;
                                    fc = (A + IYH) > 0xff ? FC : 0;
                                    A = x;
                                    break;
                                case 0x85:
                                    // Opcode:    ADD A,IYL (Undocumented)
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1|4
                                    // Flags:     --***-0C
                                    //            * F5 H F3 from higher bytes addition
                                    // Operation: A=A+IYL
                                    x = (A + IYL) & 0xff;
                                    fs = x & FS;
                                    fz = (x & 0xff) == 0 ? FZ : 0;
                                    f5 = x & F5;
                                    fh = ((((A & 0x0f) + (IYL & 0x0f))) & 0x10);
                                    f3 = x & F3;
                                    fp = (((A ^ ~IYL) & (A ^ x)) & 0x80) != 0 ? FV : 0;
                                    fn = 0;
                                    fc = (A + IYL) > 0xff ? FC : 0;
                                    A = x;
                                    break;
                                case 0x86:
                                    // Opcode:    ADD A,(IY$o) 
                                    // Attributes:Indexed
                                    // TStates:   19
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    //            M2, 3 T States - Operand Data Read
                                    //            M3, 5 T States - Internal CPU Operation
                                    //            M4, 3 T States - Memory Read
                                    // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+2:1 x 5,ii+n:3
                                    // Flags:     --***-0C
                                    //            * F5 H F3 from higher bytes addition
                                    // MemPtr:    MEMPTR = INDEX+d
                                    // Operation: A=A+[IY+n]
                                    y = GetByteAtIndex(IY);
                                    x = (A + y) & 0xff;
                                    fs = x & FS;
                                    fz = (x & 0xff) == 0 ? FZ : 0;
                                    f5 = x & F5;
                                    fh = ((((A & 0x0f) + (y & 0x0f))) & 0x10);
                                    f3 = x & F3;
                                    fp = (((A ^ ~y) & (A ^ x)) & 0x80) != 0 ? FV : 0;
                                    fn = 0;
                                    fc = (A + y) > 0xff ? FC : 0;
                                    A = x;
                                    break;
                                case 0x8C:
                                    // Opcode:    ADC A,IYH (Undocumented)
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1|4
                                    // Flags:     SZ***VNC
                                    //            *  F5 H F3 from higher bytes addition
                                    // Operation: A=A+IYH+CY
                                    x = (A + IYH + fc) & 0xff;
                                    fs = x & FS;
                                    fz = (x & 0xff) == 0 ? FZ : 0;
                                    f5 = x & F5;
                                    fh = ((((A & 0x0f) + (IYH & 0x0f)) + fc) & 0x10);
                                    f3 = x & F3;
                                    fp = (((A ^ ~IYH) & (A ^ x)) & 0x80) != 0 ? FV : 0;
                                    fn = 0;
                                    fc = (A + IYH + fc) > 0xff ? FC : 0;
                                    A = x;
                                    break;
                                case 0x8D:
                                    // Opcode:    ADC A,IYL (Undocumented)
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1|4
                                    // Flags:     SZ***VNC
                                    //            *  F5 H F3 from higher bytes addition
                                    // Operation: A=A+IYL+CY
                                    x = (A + IYL + fc) & 0xff;
                                    fs = x & FS;
                                    fz = (x & 0xff) == 0 ? FZ : 0;
                                    f5 = x & F5;
                                    fh = ((((A & 0x0f) + (IYL & 0x0f)) + fc) & 0x10);
                                    f3 = x & F3;
                                    fp = (((A ^ ~IYL) & (A ^ x)) & 0x80) != 0 ? FV : 0;
                                    fn = 0;
                                    fc = (A + IYL + fc) > 0xff ? FC : 0;
                                    A = x;
                                    break;
                                case 0x8E:
                                    // Opcode:    ADC A,(IY$o) 
                                    // Attributes:Indexed
                                    // TStates:   19
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    //            M2, 3 T States - Operand Data Read
                                    //            M3, 5 T States - Internal CPU Operation
                                    //            M4, 3 T States - Memory Read
                                    // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+2:1 x 5,ii+n:3
                                    // Flags:     SZ***VNC
                                    //            *  F5 H F3 from higher bytes addition
                                    // MemPtr:    MEMPTR = INDEX+d
                                    // Operation: A=A+[IY+n]+CY
                                    y = GetByteAtIndex(IY);
                                    x = (A + y + fc) & 0xff;
                                    fs = x & FS;
                                    fz = (x & 0xff) == 0 ? FZ : 0;
                                    f5 = x & F5;
                                    fh = ((((A & 0x0f) + (y & 0x0f)) + fc) & 0x10);
                                    f3 = x & F3;
                                    fp = (((A ^ ~y) & (A ^ x)) & 0x80) != 0 ? FV : 0;
                                    fn = 0;
                                    fc = (A + y + fc) > 0xff ? FC : 0;
                                    A = x;
                                    break;
                                case 0x94:
                                    // Opcode:    SUB IYH (Undocumented)
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1|4
                                    // Flags:     SZ5H3VNC
                                    // Operation: A=A-IYH
                                    x = (A - IYH) & 0xff;
                                    fs = x & FS;
                                    fz = (x & 0xff) == 0 ? FZ : 0;
                                    f5 = x & F5;
                                    fh = (((A & 0x0f) - (IYH & 0x0f)) & 0x10) != 0 ? FH : 0;
                                    f3 = x & F3;
                                    fp = (((A ^ IYH) & (A ^ x)) & 0x80) != 0 ? FV : 0;
                                    fn = FN;
                                    fc = ((A - IYH) & 0x100) != 0 ? FC : 0;
                                    A = x;
                                    break;
                                case 0x95:
                                    // Opcode:    SUB IYL (Undocumented)
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1|4
                                    // Flags:     SZ5H3VNC
                                    // Operation: A=A-IYL
                                    x = (A - IYL) & 0xff;
                                    fs = x & FS;
                                    fz = (x & 0xff) == 0 ? FZ : 0;
                                    f5 = x & F5;
                                    fh = (((A & 0x0f) - (IYL & 0x0f)) & 0x10) != 0 ? FH : 0;
                                    f3 = x & F3;
                                    fp = (((A ^ IYL) & (A ^ x)) & 0x80) != 0 ? FV : 0;
                                    fn = FN;
                                    fc = ((A - IYL) & 0x100) != 0 ? FC : 0;
                                    A = x;
                                    break;
                                case 0x96:
                                    // Opcode:    SUB (IY$o) 
                                    // Attributes:Indexed
                                    // TStates:   19
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    //            M2, 3 T States - Operand Data Read
                                    //            M3, 5 T States - Internal CPU Operation
                                    //            M4, 3 T States - Memory Read
                                    // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+2:1 x 5,ii+n:3
                                    // Flags:     SZ5H3VNC
                                    // MemPtr:    MEMPTR = INDEX+d
                                    // Operation: A=A-[IY+n]
                                    y = GetByteAtIndex(IY);
                                    x = (A - y) & 0xff;
                                    fs = x & FS;
                                    fz = (x & 0xff) == 0 ? FZ : 0;
                                    f5 = x & F5;
                                    fh = (((A & 0x0f) - (y & 0x0f)) & 0x10) != 0 ? FH : 0;
                                    f3 = x & F3;
                                    fp = (((A ^ y) & (A ^ x)) & 0x80) != 0 ? FV : 0;
                                    fn = FN;
                                    fc = ((A - y) & 0x100) != 0 ? FC : 0;
                                    A = x;
                                    break;
                                case 0x9C:
                                    // Opcode:    SBC A,IYH (Undocumented)
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1|4
                                    // Flags:     SZ5H3VNC
                                    // Operation: A=A-IYH-CY
                                    x = (A - IYH - fc) & 0xff;
                                    fs = x & FS;
                                    fz = (x & 0xff) == 0 ? FZ : 0;
                                    f5 = x & F5;
                                    fh = (((A & 0x0f) - (IYH & 0x0f) - fc) & 0x10) != 0 ? FH : 0;
                                    f3 = x & F3;
                                    fp = (((A ^ IYH) & (A ^ x)) & 0x80) != 0 ? FV : 0;
                                    fn = FN;
                                    fc = ((A - IYH - fc) & 0x100) != 0 ? FC : 0;
                                    A = x;
                                    break;
                                case 0x9D:
                                    // Opcode:    SBC A,IYL (Undocumented)
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1|4
                                    // Flags:     SZ5H3VNC
                                    // Operation: A=A-IYL-CY
                                    x = (A - IYL - fc) & 0xff;
                                    fs = x & FS;
                                    fz = (x & 0xff) == 0 ? FZ : 0;
                                    f5 = x & F5;
                                    fh = (((A & 0x0f) - (IYL & 0x0f) - fc) & 0x10) != 0 ? FH : 0;
                                    f3 = x & F3;
                                    fp = (((A ^ IYL) & (A ^ x)) & 0x80) != 0 ? FV : 0;
                                    fn = FN;
                                    fc = ((A - IYL - fc) & 0x100) != 0 ? FC : 0;
                                    A = x;
                                    break;
                                case 0x9E:
                                    // Opcode:    SBC A,(IY$o) 
                                    // Attributes:Indexed
                                    // TStates:   19
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    //            M2, 3 T States - Operand Data Read
                                    //            M3, 5 T States - Internal CPU Operation
                                    //            M4, 3 T States - Memory Read
                                    // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+2:1 x 5,ii+n:3
                                    // Flags:     SZ5H3VNC
                                    // MemPtr:    MEMPTR = INDEX+d
                                    // Operation: A=A-[IY+n]-CY
                                    y = GetByteAtIndex(IY);
                                    x = (A - y - fc) & 0xff;
                                    fs = x & FS;
                                    fz = (x & 0xff) == 0 ? FZ : 0;
                                    f5 = x & F5;
                                    fh = (((A & 0x0f) - (y & 0x0f) - fc) & 0x10) != 0 ? FH : 0;
                                    f3 = x & F3;
                                    fp = (((A ^ y) & (A ^ x)) & 0x80) != 0 ? FV : 0;
                                    fn = FN;
                                    fc = ((A - y - fc) & 0x100) != 0 ? FC : 0;
                                    A = x;
                                    break;
                                case 0xA4:
                                    // Opcode:    AND IYH (Undocumented)
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1|4
                                    // Flags:     SZ513P00
                                    // Operation: A=A&IYH
                                    x = A & IYH;
                                    fs = x & FS;
                                    fz = (x & 0xff) == 0 ? FZ : 0;
                                    f5 = x & F5;
                                    fh = FH;
                                    f3 = x & F3;
                                    fp = Parity[x & 0xff];
                                    fn = 0;
                                    fc = 0;
                                    A = x;
                                    break;
                                case 0xA5:
                                    // Opcode:    AND IYL (Undocumented)
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1|4
                                    // Flags:     SZ513P00
                                    // Operation: A=A&IYL
                                    x = A & IYL;
                                    fs = x & FS;
                                    fz = (x & 0xff) == 0 ? FZ : 0;
                                    f5 = x & F5;
                                    fh = FH;
                                    f3 = x & F3;
                                    fp = Parity[x & 0xff];
                                    fn = 0;
                                    fc = 0;
                                    A = x;
                                    break;
                                case 0xA6:
                                    // Opcode:    AND (IY$o) 
                                    // Attributes:Indexed
                                    // TStates:   19
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    //            M2, 3 T States - Operand Data Read
                                    //            M3, 5 T States - Internal CPU Operation
                                    //            M4, 3 T States - Memory Read
                                    // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+2:1 x 5,ii+n:3
                                    // Flags:     SZ513P00
                                    // MemPtr:    MEMPTR = INDEX+d
                                    // Operation: A=A&[IY+n]
                                    x = A & GetByteAtIndex(IY);
                                    fs = x & FS;
                                    fz = (x & 0xff) == 0 ? FZ : 0;
                                    f5 = x & F5;
                                    fh = FH;
                                    f3 = x & F3;
                                    fp = Parity[x & 0xff];
                                    fn = 0;
                                    fc = 0;
                                    A = x;
                                    break;
                                case 0xAC:
                                    // Opcode:    XOR IYH (Undocumented)
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1|4
                                    // Flags:     SZ503P00
                                    // Operation: A=AxIYH
                                    x = (A ^ IYH) & 0xff;
                                    fs = x & FS;
                                    fz = (x & 0xff) == 0 ? FZ : 0;
                                    f5 = x & F5;
                                    fh = 0;
                                    f3 = x & F3;
                                    fp = Parity[x & 0xff];
                                    fn = 0;
                                    fc = 0;
                                    A = x & 0xff;
                                    break;
                                case 0xAD:
                                    // Opcode:    XOR IYL (Undocumented)
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1|4
                                    // Flags:     SZ503P00
                                    // Operation: A=AxIYL
                                    x = (A ^ IYL) & 0xff;
                                    fs = x & FS;
                                    fz = (x & 0xff) == 0 ? FZ : 0;
                                    f5 = x & F5;
                                    fh = 0;
                                    f3 = x & F3;
                                    fp = Parity[x & 0xff];
                                    fn = 0;
                                    fc = 0;
                                    A = x & 0xff;
                                    break;
                                case 0xAE:
                                    // Opcode:    XOR (IY$o) 
                                    // Attributes:Indexed
                                    // TStates:   19
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    //            M2, 3 T States - Operand Data Read
                                    //            M3, 5 T States - Internal CPU Operation
                                    //            M4, 3 T States - Memory Read
                                    // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+2:1 x 5,ii+n:3
                                    // Flags:     SZ503P00
                                    // MemPtr:    MEMPTR = INDEX+d
                                    // Operation: A=Ax[IY+n]
                                    x = (A ^ GetByteAtIndex(IY)) & 0xff;
                                    fs = x & FS;
                                    fz = (x & 0xff) == 0 ? FZ : 0;
                                    f5 = x & F5;
                                    fh = 0;
                                    f3 = x & F3;
                                    fp = Parity[x & 0xff];
                                    fn = 0;
                                    fc = 0;
                                    A = x & 0xff;
                                    break;
                                case 0xB4:
                                    // Opcode:    OR IYH (Undocumented)
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1|4
                                    // Flags:     SZ503P00
                                    // Operation: A=AvIYH
                                    x = (A | IYH) & 0xff;
                                    fs = x & FS;
                                    fz = (x & 0xff) == 0 ? FZ : 0;
                                    f5 = x & F5;
                                    fh = 0;
                                    f3 = x & F3;
                                    fp = Parity[x & 0xff];
                                    fn = 0;
                                    fc = 0;
                                    A = x & 0xff;
                                    break;
                                case 0xB5:
                                    // Opcode:    OR IYL (Undocumented)
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1|4
                                    // Flags:     SZ503P00
                                    // Operation: A=AvIYL
                                    x = (A | IYL) & 0xff;
                                    fs = x & FS;
                                    fz = (x & 0xff) == 0 ? FZ : 0;
                                    f5 = x & F5;
                                    fh = 0;
                                    f3 = x & F3;
                                    fp = Parity[x & 0xff];
                                    fn = 0;
                                    fc = 0;
                                    A = x & 0xff;
                                    break;
                                case 0xB6:
                                    // Opcode:    OR (IY$o) 
                                    // Attributes:Indexed
                                    // TStates:   19
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    //            M2, 3 T States - Operand Data Read
                                    //            M3, 5 T States - Internal CPU Operation
                                    //            M4, 3 T States - Memory Read
                                    // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+2:1 x 5,ii+n:3
                                    // Flags:     SZ503P00
                                    // MemPtr:    MEMPTR = INDEX+d
                                    // Operation: A=Av[IY+n]
                                    x = (A | GetByteAtIndex(IY)) & 0xff;
                                    fs = x & FS;
                                    fz = (x & 0xff) == 0 ? FZ : 0;
                                    f5 = x & F5;
                                    fh = 0;
                                    f3 = x & F3;
                                    fp = Parity[x & 0xff];
                                    fn = 0;
                                    fc = 0;
                                    A = x & 0xff;
                                    break;
                                case 0xBC:
                                    // Opcode:    CP IYH (Undocumented)
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1|4
                                    // Flags:     SZ*H*VNC CP
                                    //            * is just SUB with the result thrown away
                                    //            * F5 and F3 are copied from the operand not the result
                                    // Operation: A-IYH
                                    x = (A - IYH) & 0xff;
                                    fs = x & FS;
                                    fz = (x & 0xff) == 0 ? FZ : 0;
                                    f5 = IYH & F5;
                                    fh = (((A & 0x0f) - (IYH & 0x0f)) & 0x10) != 0 ? FH : 0;
                                    f3 = IYH & F3;
                                    fp = (((A ^ IYH) & (A ^ x)) & 0x80) != 0 ? FV : 0;
                                    fn = FN;
                                    fc = ((A - IYH) & 0x100) != 0 ? FC : 0;
                                    break;
                                case 0xBD:
                                    // Opcode:    CP IYL (Undocumented)
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1|4
                                    // Flags:     SZ*H*VNC CP
                                    //            * is just SUB with the result thrown away
                                    //            * F5 and F3 are copied from the operand not the result
                                    // Operation: A-IYL
                                    x = (A - IYL) & 0xff;
                                    fs = x & FS;
                                    fz = (x & 0xff) == 0 ? FZ : 0;
                                    f5 = IYL & F5;
                                    fh = (((A & 0x0f) - (IYL & 0x0f)) & 0x10) != 0 ? FH : 0;
                                    f3 = IYL & F3;
                                    fp = (((A ^ IYL) & (A ^ x)) & 0x80) != 0 ? FV : 0;
                                    fn = FN;
                                    fc = ((A - IYL) & 0x100) != 0 ? FC : 0;
                                    break;
                                case 0xBE:
                                    // Opcode:    CP (IY$o) 
                                    // Attributes:Indexed
                                    // TStates:   19
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    //            M2, 3 T States - Operand Data Read
                                    //            M3, 5 T States - Internal CPU Operation
                                    //            M4, 3 T States - Memory Read
                                    // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+2:1 x 5,ii+n:3
                                    // Flags:     SZ*H*VNC CP
                                    //            * is just SUB with the result thrown away
                                    //            * F5 and F3 are copied from the operand not the result
                                    // MemPtr:    MEMPTR = INDEX+d
                                    // Operation: A-[IY+n]
                                    y = GetByteAtIndex(IY);
                                    x = (A - y) & 0xff;
                                    fs = x & FS;
                                    fz = (x & 0xff) == 0 ? FZ : 0;
                                    f5 = y & F5;
                                    fh = (((A & 0x0f) - (y & 0x0f)) & 0x10) != 0 ? FH : 0;
                                    f3 = y & F3;
                                    fp = (((A ^ y) & (A ^ x)) & 0x80) != 0 ? FV : 0;
                                    fn = FN;
                                    fc = ((A - y) & 0x100) != 0 ? FC : 0;
                                    break;
                                #region  AfterFDCB
                                case 0xCB:
                                    {
                                        WZ = (IY + (sbyte)PeekByte(PC++)) & 0xFFFF;
                                        Opcode = PeekByte(PC);
                                        AddCycles(PC++, 2);
                                        AddCycles(WZ, 1);
                                        switch (Opcode)
                                        {
                                            case 0x00:
                                                // Opcode:    LD B,RLC (IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // Flags:     SZ503P0C
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: B=[IY+n] / [IY+n]={[IY+n]}<< / [IY+n]=B
                                                B = PeekByte(WZ);
                                                fc = (B & 0x80) >> 7;
                                                B = (((B << 1) & 0xfE) | fc) & 0xff;
                                                fs = B & FS;
                                                fz = (B == 0) ? FZ : 0;
                                                fp = Parity[B];
                                                f5 = B & F5;
                                                fh = 0;
                                                f3 = B & F3;
                                                fn = 0;
                                                PokeByte(WZ, B);
                                                break;
                                            case 0x01:
                                                // Opcode:    LD C,RLC (IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // Flags:     SZ503P0C
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: C=[IY+n] / [IY+n]={[IY+n]}<< / [IY+n]=C
                                                C = PeekByte(WZ);
                                                fc = (C & 0x80) >> 7;
                                                C = (((C << 1) & 0xfE) | fc) & 0xff;
                                                fs = C & FS;
                                                fz = (C == 0) ? FZ : 0;
                                                fp = Parity[C];
                                                f5 = C & F5;
                                                fh = 0;
                                                f3 = C & F3;
                                                fn = 0;
                                                PokeByte(WZ, C);
                                                break;
                                            case 0x02:
                                                // Opcode:    LD D,RLC (IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // Flags:     SZ503P0C
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: D=[IY+n] / [IY+n]={[IY+n]}<< / [IY+n]=D
                                                D = PeekByte(WZ);
                                                fc = (D & 0x80) >> 7;
                                                D = (((D << 1) & 0xfE) | fc) & 0xff;
                                                fs = D & FS;
                                                fz = (D == 0) ? FZ : 0;
                                                fp = Parity[D];
                                                f5 = D & F5;
                                                fh = 0;
                                                f3 = D & F3;
                                                fn = 0;
                                                PokeByte(WZ, D);
                                                break;
                                            case 0x03:
                                                // Opcode:    LD E,RLC (IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // Flags:     SZ503P0C
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: E=[IY+n] / [IY+n]={[IY+n]}<< / [IY+n]=E
                                                E = PeekByte(WZ);
                                                fc = (E & 0x80) >> 7;
                                                E = (((E << 1) & 0xfE) | fc) & 0xff;
                                                fs = E & FS;
                                                fz = (E == 0) ? FZ : 0;
                                                fp = Parity[E];
                                                f5 = E & F5;
                                                fh = 0;
                                                f3 = E & F3;
                                                fn = 0;
                                                PokeByte(WZ, E);
                                                break;
                                            case 0x04:
                                                // Opcode:    LD H,RLC (IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // Flags:     SZ503P0C
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: H=[IY+n] / [IY+n]={[IY+n]}<< / [IY+n]=H
                                                H = PeekByte(WZ);
                                                fc = (H & 0x80) >> 7;
                                                H = (((H << 1) & 0xfE) | fc) & 0xff;
                                                fs = H & FS;
                                                fz = (H == 0) ? FZ : 0;
                                                fp = Parity[H];
                                                f5 = H & F5;
                                                fh = 0;
                                                f3 = H & F3;
                                                fn = 0;
                                                PokeByte(WZ, H);
                                                break;
                                            case 0x05:
                                                // Opcode:    LD L,RLC (IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // Flags:     SZ503P0C
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: L=[IY+n] / [IY+n]={[IY+n]}<< / [IY+n]=L
                                                L = PeekByte(WZ);
                                                fc = (L & 0x80) >> 7;
                                                L = (((L << 1) & 0xfE) | fc) & 0xff;
                                                fs = L & FS;
                                                fz = (L == 0) ? FZ : 0;
                                                fp = Parity[L];
                                                f5 = L & F5;
                                                fh = 0;
                                                f3 = L & F3;
                                                fn = 0;
                                                PokeByte(WZ, L);
                                                break;
                                            case 0x06:
                                                // Opcode:    RLC (IY$x) 
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // Flags:     SZ503P0C
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IY+n]={[IY+n]}<<
                                                y = PeekByte(WZ);
                                                fc = (y & 0x80) >> 7;
                                                y = (((y << 1) & 0xfE) | fc) & 0xff;
                                                fs = y & FS;
                                                fz = (y == 0) ? FZ : 0;
                                                fp = Parity[y];
                                                f5 = y & F5;
                                                fh = 0;
                                                f3 = y & F3;
                                                fn = 0;
                                                PokeByte(WZ, y);
                                                break;
                                            case 0x07:
                                                // Opcode:    LD A,RLC (IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // Flags:     SZ503P0C
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: A=[IY+n] / [IY+n]={[IY+n]}<< / [IY+n]=A
                                                A = PeekByte(WZ);
                                                fc = (A & 0x80) >> 7;
                                                A = (((A << 1) & 0xfE) | fc) & 0xff;
                                                fs = A & FS;
                                                fz = (A == 0) ? FZ : 0;
                                                fp = Parity[A];
                                                f5 = A & F5;
                                                fh = 0;
                                                f3 = A & F3;
                                                fn = 0;
                                                PokeByte(WZ, A);
                                                break;
                                            case 0x08:
                                                // Opcode:    LD B,RRC (IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // Flags:     SZ503P0C
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: B=[IY+n] / [IY+n]=>>{[IY+n]} / [IY+n]=B
                                                B = PeekByte(WZ);
                                                cy = B & FC;
                                                B = ((B >> 1) & 0x7f) | (cy << 7);
                                                fs = B & FS;
                                                fz = (B == 0) ? FZ : 0;
                                                fp = Parity[B];
                                                f5 = B & F5;
                                                fh = 0;
                                                f3 = B & F3;
                                                fn = 0;
                                                fc = cy;
                                                PokeByte(WZ, B);
                                                break;
                                            case 0x09:
                                                // Opcode:    LD C,RRC (IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // Flags:     SZ503P0C
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: C=[IY+n] / [IY+n]=>>{[IY+n]} / [IY+n]=C
                                                C = PeekByte(WZ);
                                                cy = C & FC;
                                                C = ((C >> 1) & 0x7f) | (cy << 7);
                                                fs = C & FS;
                                                fz = (C == 0) ? FZ : 0;
                                                fp = Parity[C];
                                                f5 = C & F5;
                                                fh = 0;
                                                f3 = C & F3;
                                                fn = 0;
                                                fc = cy;
                                                PokeByte(WZ, C);
                                                break;
                                            case 0x0A:
                                                // Opcode:    LD D,RRC (IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // Flags:     SZ503P0C
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: D=[IY+n] / [IY+n]=>>{[IY+n]} / [IY+n]=D
                                                D = PeekByte(WZ);
                                                cy = D & FC;
                                                D = ((D >> 1) & 0x7f) | (cy << 7);
                                                fs = D & FS;
                                                fz = (D == 0) ? FZ : 0;
                                                fp = Parity[D];
                                                f5 = D & F5;
                                                fh = 0;
                                                f3 = D & F3;
                                                fn = 0;
                                                fc = cy;
                                                PokeByte(WZ, D);
                                                break;
                                            case 0x0B:
                                                // Opcode:    LD E,RRC (IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // Flags:     SZ503P0C
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: E=[IY+n] / [IY+n]=>>{[IY+n]} / [IY+n]=E
                                                E = PeekByte(WZ);
                                                cy = E & FC;
                                                E = ((E >> 1) & 0x7f) | (cy << 7);
                                                fs = E & FS;
                                                fz = (E == 0) ? FZ : 0;
                                                fp = Parity[E];
                                                f5 = E & F5;
                                                fh = 0;
                                                f3 = E & F3;
                                                fn = 0;
                                                fc = cy;
                                                PokeByte(WZ, E);
                                                break;
                                            case 0x0C:
                                                // Opcode:    LD H,RRC (IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // Flags:     SZ503P0C
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: H=[IY+n] / [IY+n]=>>{[IY+n]} / [IY+n]=H
                                                H = PeekByte(WZ);
                                                cy = H & FC;
                                                H = ((H >> 1) & 0x7f) | (cy << 7);
                                                fs = H & FS;
                                                fz = (H == 0) ? FZ : 0;
                                                fp = Parity[H];
                                                f5 = H & F5;
                                                fh = 0;
                                                f3 = H & F3;
                                                fn = 0;
                                                fc = cy;
                                                PokeByte(WZ, H);
                                                break;
                                            case 0x0D:
                                                // Opcode:    LD L,RRC (IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // Flags:     SZ503P0C
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: L=[IY+n] / [IY+n]=>>{[IY+n]} / [IY+n]=L
                                                L = PeekByte(WZ);
                                                cy = L & FC;
                                                L = ((L >> 1) & 0x7f) | (cy << 7);
                                                fs = L & FS;
                                                fz = (L == 0) ? FZ : 0;
                                                fp = Parity[L];
                                                f5 = L & F5;
                                                fh = 0;
                                                f3 = L & F3;
                                                fn = 0;
                                                fc = cy;
                                                PokeByte(WZ, L);
                                                break;
                                            case 0x0E:
                                                // Opcode:    RRC (IY$x) 
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // Flags:     SZ503P0C
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IY+n]=>>{[IY+n]}
                                                y = PeekByte(WZ);
                                                cy = y & FC;
                                                y = ((y >> 1) & 0x7f) | (cy << 7);
                                                fs = y & FS;
                                                fz = (y == 0) ? FZ : 0;
                                                fp = Parity[y];
                                                f5 = y & F5;
                                                fh = 0;
                                                f3 = y & F3;
                                                fn = 0;
                                                fc = cy;
                                                PokeByte(WZ, y);
                                                break;
                                            case 0x0F:
                                                // Opcode:    LD A,RRC (IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // Flags:     SZ503P0C
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: A=[IY+n] / [IY+n]=>>{[IY+n]} / [IY+n]=A
                                                A = PeekByte(WZ);
                                                cy = A & FC;
                                                A = ((A >> 1) & 0x7f) | (cy << 7);
                                                fs = A & FS;
                                                fz = (A == 0) ? FZ : 0;
                                                fp = Parity[A];
                                                f5 = A & F5;
                                                fh = 0;
                                                f3 = A & F3;
                                                fn = 0;
                                                fc = cy;
                                                PokeByte(WZ, A);
                                                break;
                                            case 0x10:
                                                // Opcode:    LD B,RL (IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // Flags:     SZ503P0C
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: B=[IY+n] / [IY+n]={CY,[IY+n]}<<CY / [IY+n]=B
                                                B = PeekByte(WZ);
                                                cy = (B & 0x80) >> 7;
                                                B = (((B << 1) & 0xfe) | fc) & 0xff;
                                                fs = B & FS;
                                                fz = (B == 0) ? FZ : 0;
                                                fp = Parity[B];
                                                f5 = B & F5;
                                                fh = 0;
                                                f3 = B & F3;
                                                fn = 0;
                                                fc = cy;
                                                PokeByte(WZ, B);
                                                break;
                                            case 0x11:
                                                // Opcode:    LD C,RL (IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // Flags:     SZ503P0C
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: C=[IY+n] / [IY+n]={CY,[IY+n]}<<CY / [IY+n]=C
                                                C = PeekByte(WZ);
                                                cy = (C & 0x80) >> 7;
                                                C = (((C << 1) & 0xfe) | fc) & 0xff;
                                                fs = C & FS;
                                                fz = (C == 0) ? FZ : 0;
                                                fp = Parity[C];
                                                f5 = C & F5;
                                                fh = 0;
                                                f3 = C & F3;
                                                fn = 0;
                                                fc = cy;
                                                PokeByte(WZ, C);
                                                break;
                                            case 0x12:
                                                // Opcode:    LD D,RL (IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // Flags:     SZ503P0C
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: D=[IY+n] / [IY+n]={CY,[IY+n]}<<CY / [IY+n]=D
                                                D = PeekByte(WZ);
                                                cy = (D & 0x80) >> 7;
                                                D = (((D << 1) & 0xfe) | fc) & 0xff;
                                                fs = D & FS;
                                                fz = (D == 0) ? FZ : 0;
                                                fp = Parity[D];
                                                f5 = D & F5;
                                                fh = 0;
                                                f3 = D & F3;
                                                fn = 0;
                                                fc = cy;
                                                PokeByte(WZ, D);
                                                break;
                                            case 0x13:
                                                // Opcode:    LD E,RL (IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // Flags:     SZ503P0C
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: E=[IY+n] / [IY+n]={CY,[IY+n]}<<CY / [IY+n]=E
                                                E = PeekByte(WZ);
                                                cy = (E & 0x80) >> 7;
                                                E = (((E << 1) & 0xfe) | fc) & 0xff;
                                                fs = E & FS;
                                                fz = (E == 0) ? FZ : 0;
                                                fp = Parity[E];
                                                f5 = E & F5;
                                                fh = 0;
                                                f3 = E & F3;
                                                fn = 0;
                                                fc = cy;
                                                PokeByte(WZ, E);
                                                break;
                                            case 0x14:
                                                // Opcode:    LD H,RL (IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // Flags:     SZ503P0C
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: H=[IY+n] / [IY+n]={CY,[IY+n]}<<CY / [IY+n]=H
                                                H = PeekByte(WZ);
                                                cy = (H & 0x80) >> 7;
                                                H = (((H << 1) & 0xfe) | fc) & 0xff;
                                                fs = H & FS;
                                                fz = (H == 0) ? FZ : 0;
                                                fp = Parity[H];
                                                f5 = H & F5;
                                                fh = 0;
                                                f3 = H & F3;
                                                fn = 0;
                                                fc = cy;
                                                PokeByte(WZ, H);
                                                break;
                                            case 0x15:
                                                // Opcode:    LD L,RL (IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // Flags:     SZ503P0C
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: L=[IY+n] / [IY+n]={CY,[IY+n]}<<CY / [IY+n]=L
                                                L = PeekByte(WZ);
                                                cy = (L & 0x80) >> 7;
                                                L = (((L << 1) & 0xfe) | fc) & 0xff;
                                                fs = L & FS;
                                                fz = (L == 0) ? FZ : 0;
                                                fp = Parity[L];
                                                f5 = L & F5;
                                                fh = 0;
                                                f3 = L & F3;
                                                fn = 0;
                                                fc = cy;
                                                PokeByte(WZ, L);
                                                break;
                                            case 0x16:
                                                // Opcode:    RL (IY$x) 
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // Flags:     SZ503P0C
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IY+n]={CY,[IY+n]}<<CY
                                                y = PeekByte(WZ);
                                                cy = (y & 0x80) >> 7;
                                                y = (((y << 1) & 0xfe) | fc) & 0xff;
                                                fs = y & FS;
                                                fz = (y == 0) ? FZ : 0;
                                                fp = Parity[y];
                                                f5 = y & F5;
                                                fh = 0;
                                                f3 = y & F3;
                                                fn = 0;
                                                fc = cy;
                                                PokeByte(WZ, y);
                                                break;
                                            case 0x17:
                                                // Opcode:    LD A,RL (IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // Flags:     SZ503P0C
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: A=[IY+n] / [IY+n]={CY,[IY+n]}<<CY / [IY+n]=A
                                                A = PeekByte(WZ);
                                                cy = (A & 0x80) >> 7;
                                                A = (((A << 1) & 0xfe) | fc) & 0xff;
                                                fs = A & FS;
                                                fz = (A == 0) ? FZ : 0;
                                                fp = Parity[A];
                                                f5 = A & F5;
                                                fh = 0;
                                                f3 = A & F3;
                                                fn = 0;
                                                fc = cy;
                                                PokeByte(WZ, A);
                                                break;
                                            case 0x18:
                                                // Opcode:    LD B,RR (IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // Flags:     SZ503P0C
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: B=[IY+n] / [IY+n]=CY>>{CY,[IY+n]} / [IY+n]=B
                                                B = PeekByte(WZ);
                                                cy = B & FC;
                                                B = ((B >> 1) & 0x7f) | (fc << 7);
                                                fs = B & FS;
                                                fz = (B == 0) ? FZ : 0;
                                                fp = Parity[B];
                                                f5 = B & F5;
                                                fh = 0;
                                                f3 = B & F3;
                                                fn = 0;
                                                fc = cy;
                                                PokeByte(WZ, B);
                                                break;
                                            case 0x19:
                                                // Opcode:    LD C,RR (IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // Flags:     SZ503P0C
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: C=[IY+n] / [IY+n]=CY>>{CY,[IY+n]} / [IY+n]=C
                                                C = PeekByte(WZ);
                                                cy = C & FC;
                                                C = ((C >> 1) & 0x7f) | (fc << 7);
                                                fs = C & FS;
                                                fz = (C == 0) ? FZ : 0;
                                                fp = Parity[C];
                                                f5 = C & F5;
                                                fh = 0;
                                                f3 = C & F3;
                                                fn = 0;
                                                fc = cy;
                                                PokeByte(WZ, C);
                                                break;
                                            case 0x1A:
                                                // Opcode:    LD D,RR (IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // Flags:     SZ503P0C
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: D=[IY+n] / [IY+n]=CY>>{CY,[IY+n]} / [IY+n]=D
                                                D = PeekByte(WZ);
                                                cy = D & FC;
                                                D = ((D >> 1) & 0x7f) | (fc << 7);
                                                fs = D & FS;
                                                fz = (D == 0) ? FZ : 0;
                                                fp = Parity[D];
                                                f5 = D & F5;
                                                fh = 0;
                                                f3 = D & F3;
                                                fn = 0;
                                                fc = cy;
                                                PokeByte(WZ, D);
                                                break;
                                            case 0x1B:
                                                // Opcode:    LD E,RR (IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // Flags:     SZ503P0C
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: E=[IY+n] / [IY+n]=CY>>{CY,[IY+n]} / [IY+n]=E
                                                E = PeekByte(WZ);
                                                cy = E & FC;
                                                E = ((E >> 1) & 0x7f) | (fc << 7);
                                                fs = E & FS;
                                                fz = (E == 0) ? FZ : 0;
                                                fp = Parity[E];
                                                f5 = E & F5;
                                                fh = 0;
                                                f3 = E & F3;
                                                fn = 0;
                                                fc = cy;
                                                PokeByte(WZ, E);
                                                break;
                                            case 0x1C:
                                                // Opcode:    LD H,RR (IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // Flags:     SZ503P0C
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: H=[IY+n] / [IY+n]=CY>>{CY,[IY+n]} / [IY+n]=H
                                                H = PeekByte(WZ);
                                                cy = H & FC;
                                                H = ((H >> 1) & 0x7f) | (fc << 7);
                                                fs = H & FS;
                                                fz = (H == 0) ? FZ : 0;
                                                fp = Parity[H];
                                                f5 = H & F5;
                                                fh = 0;
                                                f3 = H & F3;
                                                fn = 0;
                                                fc = cy;
                                                PokeByte(WZ, H);
                                                break;
                                            case 0x1D:
                                                // Opcode:    LD L,RR (IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // Flags:     SZ503P0C
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: L=[IY+n] / [IY+n]=CY>>{CY,[IY+n]} / [IY+n]=L
                                                L = PeekByte(WZ);
                                                cy = L & FC;
                                                L = ((L >> 1) & 0x7f) | (fc << 7);
                                                fs = L & FS;
                                                fz = (L == 0) ? FZ : 0;
                                                fp = Parity[L];
                                                f5 = L & F5;
                                                fh = 0;
                                                f3 = L & F3;
                                                fn = 0;
                                                fc = cy;
                                                PokeByte(WZ, L);
                                                break;
                                            case 0x1E:
                                                // Opcode:    RR (IY$x) 
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // Flags:     SZ503P0C
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IY+n]=CY>>{CY,[IY+n]}
                                                y = PeekByte(WZ);
                                                cy = y & FC;
                                                y = ((y >> 1) & 0x7f) | (fc << 7);
                                                fs = y & FS;
                                                fz = (y == 0) ? FZ : 0;
                                                fp = Parity[y];
                                                f5 = y & F5;
                                                fh = 0;
                                                f3 = y & F3;
                                                fn = 0;
                                                fc = cy;
                                                PokeByte(WZ, y);
                                                break;
                                            case 0x1F:
                                                // Opcode:    LD A,RR (IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // Flags:     SZ503P0C
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: A=[IY+n] / [IY+n]=CY>>{CY,[IY+n]} / [IY+n]=A
                                                A = PeekByte(WZ);
                                                cy = A & FC;
                                                A = ((A >> 1) & 0x7f) | (fc << 7);
                                                fs = A & FS;
                                                fz = (A == 0) ? FZ : 0;
                                                fp = Parity[A];
                                                f5 = A & F5;
                                                fh = 0;
                                                f3 = A & F3;
                                                fn = 0;
                                                fc = cy;
                                                PokeByte(WZ, A);
                                                break;
                                            case 0x20:
                                                // Opcode:    LD B,SLA (IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // Flags:     SZ503P0C
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: B=[IY+n] / [IY+n]=[IY+n]*2 / [IY+n]=B
                                                B = PeekByte(WZ);
                                                cy = ((B & 0x80) >> 7) & 0xff;
                                                x = ((B << 1) & 0xff);
                                                fs = x & FS;
                                                fz = ((x & 0xff) == 0) ? FZ : 0;
                                                f5 = x & F5;
                                                fh = 0;
                                                f3 = x & F3;
                                                fp = Parity[x & 0xff];
                                                fn = 0;
                                                fc = cy;
                                                B = x;
                                                PokeByte(WZ, B);
                                                break;
                                            case 0x21:
                                                // Opcode:    LD C,SLA (IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // Flags:     SZ503P0C
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: C=[IY+n] / [IY+n]=[IY+n]*2 / [IY+n]=C
                                                C = PeekByte(WZ);
                                                cy = ((C & 0x80) >> 7) & 0xff;
                                                x = ((C << 1) & 0xff);
                                                fs = x & FS;
                                                fz = ((x & 0xff) == 0) ? FZ : 0;
                                                f5 = x & F5;
                                                fh = 0;
                                                f3 = x & F3;
                                                fp = Parity[x & 0xff];
                                                fn = 0;
                                                fc = cy;
                                                C = x;
                                                PokeByte(WZ, C);
                                                break;
                                            case 0x22:
                                                // Opcode:    LD D,SLA (IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // Flags:     SZ503P0C
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: D=[IY+n] / [IY+n]=[IY+n]*2 / [IY+n]=D
                                                D = PeekByte(WZ);
                                                cy = ((D & 0x80) >> 7) & 0xff;
                                                x = ((D << 1) & 0xff);
                                                fs = x & FS;
                                                fz = ((x & 0xff) == 0) ? FZ : 0;
                                                f5 = x & F5;
                                                fh = 0;
                                                f3 = x & F3;
                                                fp = Parity[x & 0xff];
                                                fn = 0;
                                                fc = cy;
                                                D = x;
                                                PokeByte(WZ, D);
                                                break;
                                            case 0x23:
                                                // Opcode:    LD E,SLA (IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // Flags:     SZ503P0C
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: E=[IY+n] / [IY+n]=[IY+n]*2 / [IY+n]=E
                                                E = PeekByte(WZ);
                                                cy = ((E & 0x80) >> 7) & 0xff;
                                                x = ((E << 1) & 0xff);
                                                fs = x & FS;
                                                fz = ((x & 0xff) == 0) ? FZ : 0;
                                                f5 = x & F5;
                                                fh = 0;
                                                f3 = x & F3;
                                                fp = Parity[x & 0xff];
                                                fn = 0;
                                                fc = cy;
                                                E = x;
                                                PokeByte(WZ, E);
                                                break;
                                            case 0x24:
                                                // Opcode:    LD H,SLA (IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // Flags:     SZ503P0C
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: H=[IY+n] / [IY+n]=[IY+n]*2 / [IY+n]=H
                                                H = PeekByte(WZ);
                                                cy = ((H & 0x80) >> 7) & 0xff;
                                                x = ((H << 1) & 0xff);
                                                fs = x & FS;
                                                fz = ((x & 0xff) == 0) ? FZ : 0;
                                                f5 = x & F5;
                                                fh = 0;
                                                f3 = x & F3;
                                                fp = Parity[x & 0xff];
                                                fn = 0;
                                                fc = cy;
                                                H = x;
                                                PokeByte(WZ, H);
                                                break;
                                            case 0x25:
                                                // Opcode:    LD L,SLA (IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // Flags:     SZ503P0C
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: L=[IY+n] / [IY+n]=[IY+n]*2 / [IY+n]=L
                                                L = PeekByte(WZ);
                                                cy = ((L & 0x80) >> 7) & 0xff;
                                                x = ((L << 1) & 0xff);
                                                fs = x & FS;
                                                fz = ((x & 0xff) == 0) ? FZ : 0;
                                                f5 = x & F5;
                                                fh = 0;
                                                f3 = x & F3;
                                                fp = Parity[x & 0xff];
                                                fn = 0;
                                                fc = cy;
                                                L = x;
                                                PokeByte(WZ, L);
                                                break;
                                            case 0x26:
                                                // Opcode:    SLA (IY$x) 
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // Flags:     SZ503P0C
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IY+n]=[IY+n]*2
                                                y = PeekByte(WZ);
                                                cy = ((y & 0x80) >> 7) & 0xff;
                                                x = ((y << 1) & 0xff);
                                                fs = x & FS;
                                                fz = ((x & 0xff) == 0) ? FZ : 0;
                                                f5 = x & F5;
                                                fh = 0;
                                                f3 = x & F3;
                                                fp = Parity[x & 0xff];
                                                fn = 0;
                                                fc = cy;
                                                PokeByte(WZ, x);
                                                break;
                                            case 0x27:
                                                // Opcode:    LD A,SLA (IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // Flags:     SZ503P0C
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: A=[IY+n] / [IY+n]=[IY+n]*2 / [IY+n]=A
                                                A = PeekByte(WZ);
                                                cy = ((A & 0x80) >> 7) & 0xff;
                                                x = ((A << 1) & 0xff);
                                                fs = x & FS;
                                                fz = ((x & 0xff) == 0) ? FZ : 0;
                                                f5 = x & F5;
                                                fh = 0;
                                                f3 = x & F3;
                                                fp = Parity[x & 0xff];
                                                fn = 0;
                                                fc = cy;
                                                A = x;
                                                PokeByte(WZ, A);
                                                break;
                                            case 0x28:
                                                // Opcode:    LD B,SRA (IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // Flags:     SZ503P0C
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: B=[IY+n] / [IY+n]=(signed)[IY+n]/2 / [IY+n]=B
                                                B = PeekByte(WZ);
                                                b7 = B & 0x80;
                                                cy = B & FC;
                                                x = ((B >> 1) & 0xff) | b7;
                                                fs = x & FS;
                                                fz = ((x & 0xff) == 0) ? FZ : 0;
                                                f5 = x & F5;
                                                fh = 0;
                                                f3 = x & F3;
                                                fp = Parity[x & 0xff];
                                                fn = 0;
                                                fc = cy;
                                                B = x;
                                                PokeByte(WZ, B);
                                                break;
                                            case 0x29:
                                                // Opcode:    LD C,SRA (IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // Flags:     SZ503P0C
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: C=[IY+n] / [IY+n]=(signed)[IY+n]/2 / [IY+n]=C
                                                C = PeekByte(WZ);
                                                b7 = C & 0x80;
                                                cy = C & FC;
                                                x = ((C >> 1) & 0xff) | b7;
                                                fs = x & FS;
                                                fz = ((x & 0xff) == 0) ? FZ : 0;
                                                f5 = x & F5;
                                                fh = 0;
                                                f3 = x & F3;
                                                fp = Parity[x & 0xff];
                                                fn = 0;
                                                fc = cy;
                                                C = x;
                                                PokeByte(WZ, C);
                                                break;
                                            case 0x2A:
                                                // Opcode:    LD D,SRA (IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // Flags:     SZ503P0C
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: D=[IY+n] / [IY+n]=(signed)[IY+n]/2 / [IY+n]=D
                                                D = PeekByte(WZ);
                                                b7 = D & 0x80;
                                                cy = D & FC;
                                                x = ((D >> 1) & 0xff) | b7;
                                                fs = x & FS;
                                                fz = ((x & 0xff) == 0) ? FZ : 0;
                                                f5 = x & F5;
                                                fh = 0;
                                                f3 = x & F3;
                                                fp = Parity[x & 0xff];
                                                fn = 0;
                                                fc = cy;
                                                D = x;
                                                PokeByte(WZ, D);
                                                break;
                                            case 0x2B:
                                                // Opcode:    LD E,SRA (IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // Flags:     SZ503P0C
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: E=[IY+n] / [IY+n]=(signed)[IY+n]/2 / [IY+n]=E
                                                E = PeekByte(WZ);
                                                b7 = E & 0x80;
                                                cy = E & FC;
                                                x = ((E >> 1) & 0xff) | b7;
                                                fs = x & FS;
                                                fz = ((x & 0xff) == 0) ? FZ : 0;
                                                f5 = x & F5;
                                                fh = 0;
                                                f3 = x & F3;
                                                fp = Parity[x & 0xff];
                                                fn = 0;
                                                fc = cy;
                                                E = x;
                                                PokeByte(WZ, E);
                                                break;
                                            case 0x2C:
                                                // Opcode:    LD H,SRA (IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // Flags:     SZ503P0C
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: H=[IY+n] / [IY+n]=(signed)[IY+n]/2 / [IY+n]=H
                                                H = PeekByte(WZ);
                                                b7 = H & 0x80;
                                                cy = H & FC;
                                                x = ((H >> 1) & 0xff) | b7;
                                                fs = x & FS;
                                                fz = ((x & 0xff) == 0) ? FZ : 0;
                                                f5 = x & F5;
                                                fh = 0;
                                                f3 = x & F3;
                                                fp = Parity[x & 0xff];
                                                fn = 0;
                                                fc = cy;
                                                H = x;
                                                PokeByte(WZ, H);
                                                break;
                                            case 0x2D:
                                                // Opcode:    LD L,SRA (IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // Flags:     SZ503P0C
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: L=[IY+n] / [IY+n]=(signed)[IY+n]/2 / [IY+n]=L
                                                L = PeekByte(WZ);
                                                b7 = L & 0x80;
                                                cy = L & FC;
                                                x = ((L >> 1) & 0xff) | b7;
                                                fs = x & FS;
                                                fz = ((x & 0xff) == 0) ? FZ : 0;
                                                f5 = x & F5;
                                                fh = 0;
                                                f3 = x & F3;
                                                fp = Parity[x & 0xff];
                                                fn = 0;
                                                fc = cy;
                                                L = x;
                                                PokeByte(WZ, L);
                                                break;
                                            case 0x2E:
                                                // Opcode:    SRA (IY$x) 
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // Flags:     SZ503P0C
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IY+n]=(signed)[IY+n]/2
                                                y = PeekByte(WZ);
                                                b7 = y & 0x80;
                                                cy = y & FC;
                                                x = ((y >> 1) & 0xff) | b7;
                                                fs = x & FS;
                                                fz = ((x & 0xff) == 0) ? FZ : 0;
                                                f5 = x & F5;
                                                fh = 0;
                                                f3 = x & F3;
                                                fp = Parity[x & 0xff];
                                                fn = 0;
                                                fc = cy;
                                                PokeByte(WZ, x);
                                                break;
                                            case 0x2F:
                                                // Opcode:    LD A,SRA (IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // Flags:     SZ503P0C
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: A=[IY+n] / [IY+n]=(signed)[IY+n]/2 / [IY+n]=A
                                                A = PeekByte(WZ);
                                                b7 = A & 0x80;
                                                cy = A & FC;
                                                x = ((A >> 1) & 0xff) | b7;
                                                fs = x & FS;
                                                fz = ((x & 0xff) == 0) ? FZ : 0;
                                                f5 = x & F5;
                                                fh = 0;
                                                f3 = x & F3;
                                                fp = Parity[x & 0xff];
                                                fn = 0;
                                                fc = cy;
                                                A = x;
                                                PokeByte(WZ, A);
                                                break;
                                            case 0x30:
                                                // Opcode:    LD B,SLL (IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // Flags:     SZ503P0C
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: B=[IY+n] / [IY+n]=[IY+n]*2+1 / [IY+n]=B
                                                B = PeekByte(WZ);
                                                cy = (B & 0x80) >> 7;
                                                x = ((B << 1) & 0xff) | 1;
                                                fs = x & FS;
                                                fz = ((x & 0xff) == 0) ? FZ : 0;
                                                f5 = x & F5;
                                                fh = 0;
                                                f3 = x & F3;
                                                fp = Parity[x & 0xff];
                                                fn = 0;
                                                fc = cy;
                                                B = x;
                                                PokeByte(WZ, B);
                                                break;
                                            case 0x31:
                                                // Opcode:    LD C,SLL (IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // Flags:     SZ503P0C
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: C=[IY+n] / [IY+n]=[IY+n]*2+1 / [IY+n]=C
                                                C = PeekByte(WZ);
                                                cy = (C & 0x80) >> 7;
                                                x = ((C << 1) & 0xff) | 1;
                                                fs = x & FS;
                                                fz = ((x & 0xff) == 0) ? FZ : 0;
                                                f5 = x & F5;
                                                fh = 0;
                                                f3 = x & F3;
                                                fp = Parity[x & 0xff];
                                                fn = 0;
                                                fc = cy;
                                                C = x;
                                                PokeByte(WZ, C);
                                                break;
                                            case 0x32:
                                                // Opcode:    LD D,SLL (IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // Flags:     SZ503P0C
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: D=[IY+n] / [IY+n]=[IY+n]*2+1 / [IY+n]=D
                                                D = PeekByte(WZ);
                                                cy = (D & 0x80) >> 7;
                                                x = ((D << 1) & 0xff) | 1;
                                                fs = x & FS;
                                                fz = ((x & 0xff) == 0) ? FZ : 0;
                                                f5 = x & F5;
                                                fh = 0;
                                                f3 = x & F3;
                                                fp = Parity[x & 0xff];
                                                fn = 0;
                                                fc = cy;
                                                D = x;
                                                PokeByte(WZ, D);
                                                break;
                                            case 0x33:
                                                // Opcode:    LD E,SLL (IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // Flags:     SZ503P0C
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: E=[IY+n] / [IY+n]=[IY+n]*2+1 / [IY+n]=E
                                                E = PeekByte(WZ);
                                                cy = (E & 0x80) >> 7;
                                                x = ((E << 1) & 0xff) | 1;
                                                fs = x & FS;
                                                fz = ((x & 0xff) == 0) ? FZ : 0;
                                                f5 = x & F5;
                                                fh = 0;
                                                f3 = x & F3;
                                                fp = Parity[x & 0xff];
                                                fn = 0;
                                                fc = cy;
                                                E = x;
                                                PokeByte(WZ, E);
                                                break;
                                            case 0x34:
                                                // Opcode:    LD H,SLL (IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // Flags:     SZ503P0C
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: H=[IY+n] / [IY+n]=[IY+n]*2+1 / [IY+n]=H
                                                H = PeekByte(WZ);
                                                cy = (H & 0x80) >> 7;
                                                x = ((H << 1) & 0xff) | 1;
                                                fs = x & FS;
                                                fz = ((x & 0xff) == 0) ? FZ : 0;
                                                f5 = x & F5;
                                                fh = 0;
                                                f3 = x & F3;
                                                fp = Parity[x & 0xff];
                                                fn = 0;
                                                fc = cy;
                                                H = x;
                                                PokeByte(WZ, H);
                                                break;
                                            case 0x35:
                                                // Opcode:    LD L,SLL (IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // Flags:     SZ503P0C
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: L=[IY+n] / [IY+n]=[IY+n]*2+1 / [IY+n]=L
                                                L = PeekByte(WZ);
                                                cy = (L & 0x80) >> 7;
                                                x = ((L << 1) & 0xff) | 1;
                                                fs = x & FS;
                                                fz = ((x & 0xff) == 0) ? FZ : 0;
                                                f5 = x & F5;
                                                fh = 0;
                                                f3 = x & F3;
                                                fp = Parity[x & 0xff];
                                                fn = 0;
                                                fc = cy;
                                                L = x;
                                                PokeByte(WZ, L);
                                                break;
                                            case 0x36:
                                                // Opcode:    SLL (IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // Flags:     SZ503P0C
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IY+n]=[IY+n]*2+1
                                                y = PeekByte(WZ);
                                                cy = (y & 0x80) >> 7;
                                                x = ((y << 1) & 0xff) | 1;
                                                fs = x & FS;
                                                fz = ((x & 0xff) == 0) ? FZ : 0;
                                                f5 = x & F5;
                                                fh = 0;
                                                f3 = x & F3;
                                                fp = Parity[x & 0xff];
                                                fn = 0;
                                                fc = cy;
                                                PokeByte(WZ, x);
                                                break;
                                            case 0x37:
                                                // Opcode:    LD A,SLL (IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // Flags:     SZ503P0C
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: A=[IY+n] / [IY+n]=[IY+n]*2+1 / [IY+n]=A
                                                A = PeekByte(WZ);
                                                cy = (A & 0x80) >> 7;
                                                x = ((A << 1) & 0xff) | 1;
                                                fs = x & FS;
                                                fz = ((x & 0xff) == 0) ? FZ : 0;
                                                f5 = x & F5;
                                                fh = 0;
                                                f3 = x & F3;
                                                fp = Parity[x & 0xff];
                                                fn = 0;
                                                fc = cy;
                                                A = x;
                                                PokeByte(WZ, A);
                                                break;
                                            case 0x38:
                                                // Opcode:    LD B,SRL (IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // Flags:     SZ503P0C
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: B=[IY+n] / [IY+n]=(unsigned)[IY+n]/2 / [IY+n]=B
                                                B = PeekByte(WZ);
                                                cy = B & FC;
                                                x = ((B >> 1) & 0xff);
                                                fs = x & FS;
                                                fz = ((x & 0xff) == 0) ? FZ : 0;
                                                f5 = x & F5;
                                                fh = 0;
                                                f3 = x & F3;
                                                fp = Parity[x & 0xff];
                                                fn = 0;
                                                fc = cy;
                                                B = x;
                                                PokeByte(WZ, B);
                                                break;
                                            case 0x39:
                                                // Opcode:    LD C,SRL (IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // Flags:     SZ503P0C
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: C=[IY+n] / [IY+n]=(unsigned)[IY+n]/2 / [IY+n]=C
                                                C = PeekByte(WZ);
                                                cy = C & FC;
                                                x = ((C >> 1) & 0xff);
                                                fs = x & FS;
                                                fz = ((x & 0xff) == 0) ? FZ : 0;
                                                f5 = x & F5;
                                                fh = 0;
                                                f3 = x & F3;
                                                fp = Parity[x & 0xff];
                                                fn = 0;
                                                fc = cy;
                                                C = x;
                                                PokeByte(WZ, C);
                                                break;
                                            case 0x3A:
                                                // Opcode:    LD D,SRL (IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // Flags:     SZ503P0C
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: D=[IY+n] / [IY+n]=(unsigned)[IY+n]/2 / [IY+n]=D
                                                D = PeekByte(WZ);
                                                cy = D & FC;
                                                x = ((D >> 1) & 0xff);
                                                fs = x & FS;
                                                fz = ((x & 0xff) == 0) ? FZ : 0;
                                                f5 = x & F5;
                                                fh = 0;
                                                f3 = x & F3;
                                                fp = Parity[x & 0xff];
                                                fn = 0;
                                                fc = cy;
                                                D = x;
                                                PokeByte(WZ, D);
                                                break;
                                            case 0x3B:
                                                // Opcode:    LD E,SRL (IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // Flags:     SZ503P0C
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: E=[IY+n] / [IY+n]=(unsigned)[IY+n]/2 / [IY+n]=E
                                                E = PeekByte(WZ);
                                                cy = E & FC;
                                                x = ((E >> 1) & 0xff);
                                                fs = x & FS;
                                                fz = ((x & 0xff) == 0) ? FZ : 0;
                                                f5 = x & F5;
                                                fh = 0;
                                                f3 = x & F3;
                                                fp = Parity[x & 0xff];
                                                fn = 0;
                                                fc = cy;
                                                E = x;
                                                PokeByte(WZ, E);
                                                break;
                                            case 0x3C:
                                                // Opcode:    LD H,SRL (IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // Flags:     SZ503P0C
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: H=[IY+n] / [IY+n]=(unsigned)[IY+n]/2 / [IY+n]=H
                                                H = PeekByte(WZ);
                                                cy = H & FC;
                                                x = ((H >> 1) & 0xff);
                                                fs = x & FS;
                                                fz = ((x & 0xff) == 0) ? FZ : 0;
                                                f5 = x & F5;
                                                fh = 0;
                                                f3 = x & F3;
                                                fp = Parity[x & 0xff];
                                                fn = 0;
                                                fc = cy;
                                                H = x;
                                                PokeByte(WZ, H);
                                                break;
                                            case 0x3D:
                                                // Opcode:    LD L,SRL (IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // Flags:     SZ503P0C
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: L=[IY+n] / [IY+n]=(unsigned)[IY+n]/2 / [IY+n]=L
                                                L = PeekByte(WZ);
                                                cy = L & FC;
                                                x = ((L >> 1) & 0xff);
                                                fs = x & FS;
                                                fz = ((x & 0xff) == 0) ? FZ : 0;
                                                f5 = x & F5;
                                                fh = 0;
                                                f3 = x & F3;
                                                fp = Parity[x & 0xff];
                                                fn = 0;
                                                fc = cy;
                                                L = x;
                                                PokeByte(WZ, L);
                                                break;
                                            case 0x3E:
                                                // Opcode:    SRL (IY$x) 
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // Flags:     SZ503P0C
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IY+n]=(unsigned)[IY+n]/2
                                                y = PeekByte(WZ);
                                                cy = y & FC;
                                                x = ((y >> 1) & 0xff);
                                                fs = x & FS;
                                                fz = ((x & 0xff) == 0) ? FZ : 0;
                                                f5 = x & F5;
                                                fh = 0;
                                                f3 = x & F3;
                                                fp = Parity[x & 0xff];
                                                fn = 0;
                                                fc = cy;
                                                PokeByte(WZ, x);
                                                break;
                                            case 0x3F:
                                                // Opcode:    LD A,SRL (IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // Flags:     SZ503P0C
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: A=[IY+n] / [IY+n]=(unsigned)[IY+n]/2 / [IY+n]=A
                                                A = PeekByte(WZ);
                                                cy = A & FC;
                                                x = ((A >> 1) & 0xff);
                                                fs = x & FS;
                                                fz = ((x & 0xff) == 0) ? FZ : 0;
                                                f5 = x & F5;
                                                fh = 0;
                                                f3 = x & F3;
                                                fp = Parity[x & 0xff];
                                                fn = 0;
                                                fc = cy;
                                                A = x;
                                                PokeByte(WZ, A);
                                                break;
                                            case 0x40:
                                                // Opcode:    BIT 0,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4|pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1
                                                // Flags:     *Z513*0-
                                                //            * PV as Z
                                                //            * Behaves much like r AND 2^n
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IY+n]&{2^b}
                                                y = PeekByte(WZ);
                                                x = y & 0x01;
                                                fs = 0;
                                                fz = ((x == 0) ? FZ : 0);
                                                f5 = y & F5;
                                                fh = FH;
                                                f3 = y & F3;
                                                fp = ((x == 0) ? FP : 0);
                                                fn = 0;
                                                f5 = (WZ >> 8) & F5;
                                                f3 = (WZ >> 8) & F3;
                                                break;
                                            case 0x41:
                                                // Opcode:    BIT 0,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4|pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1
                                                // Flags:     *Z513*0-
                                                //            * PV as Z
                                                //            * Behaves much like r AND 2^n
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IY+n]&{2^b}
                                                y = PeekByte(WZ);
                                                x = y & 0x01;
                                                fs = 0;
                                                fz = ((x == 0) ? FZ : 0);
                                                f5 = y & F5;
                                                fh = FH;
                                                f3 = y & F3;
                                                fp = ((x == 0) ? FP : 0);
                                                fn = 0;
                                                f5 = (WZ >> 8) & F5;
                                                f3 = (WZ >> 8) & F3;
                                                break;
                                            case 0x42:
                                                // Opcode:    BIT 0,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4|pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1
                                                // Flags:     *Z513*0-
                                                //            * PV as Z
                                                //            * Behaves much like r AND 2^n
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IY+n]&{2^b}
                                                y = PeekByte(WZ);
                                                x = y & 0x01;
                                                fs = 0;
                                                fz = ((x == 0) ? FZ : 0);
                                                f5 = y & F5;
                                                fh = FH;
                                                f3 = y & F3;
                                                fp = ((x == 0) ? FP : 0);
                                                fn = 0;
                                                f5 = (WZ >> 8) & F5;
                                                f3 = (WZ >> 8) & F3;
                                                break;
                                            case 0x43:
                                                // Opcode:    BIT 0,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4|pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1
                                                // Flags:     *Z513*0-
                                                //            * PV as Z
                                                //            * Behaves much like r AND 2^n
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IY+n]&{2^b}
                                                y = PeekByte(WZ);
                                                x = y & 0x01;
                                                fs = 0;
                                                fz = ((x == 0) ? FZ : 0);
                                                f5 = y & F5;
                                                fh = FH;
                                                f3 = y & F3;
                                                fp = ((x == 0) ? FP : 0);
                                                fn = 0;
                                                f5 = (WZ >> 8) & F5;
                                                f3 = (WZ >> 8) & F3;
                                                break;
                                            case 0x44:
                                                // Opcode:    BIT 0,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4|pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1
                                                // Flags:     *Z513*0-
                                                //            * PV as Z
                                                //            * Behaves much like r AND 2^n
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IY+n]&{2^b}
                                                y = PeekByte(WZ);
                                                x = y & 0x01;
                                                fs = 0;
                                                fz = ((x == 0) ? FZ : 0);
                                                f5 = y & F5;
                                                fh = FH;
                                                f3 = y & F3;
                                                fp = ((x == 0) ? FP : 0);
                                                fn = 0;
                                                f5 = (WZ >> 8) & F5;
                                                f3 = (WZ >> 8) & F3;
                                                break;
                                            case 0x45:
                                                // Opcode:    BIT 0,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4|pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1
                                                // Flags:     *Z513*0-
                                                //            * PV as Z
                                                //            * Behaves much like r AND 2^n
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IY+n]&{2^b}
                                                y = PeekByte(WZ);
                                                x = y & 0x01;
                                                fs = 0;
                                                fz = ((x == 0) ? FZ : 0);
                                                f5 = y & F5;
                                                fh = FH;
                                                f3 = y & F3;
                                                fp = ((x == 0) ? FP : 0);
                                                fn = 0;
                                                f5 = (WZ >> 8) & F5;
                                                f3 = (WZ >> 8) & F3;
                                                break;
                                            case 0x46:
                                                // Opcode:    BIT 0,(IY$x) 
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4|pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1
                                                // Flags:     *Z513*0-
                                                //            * PV as Z
                                                //            * Behaves much like r AND 2^n
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IY+n]&{2^b}
                                                y = PeekByte(WZ);
                                                x = y & 0x01;
                                                fs = 0;
                                                fz = ((x == 0) ? FZ : 0);
                                                f5 = y & F5;
                                                fh = FH;
                                                f3 = y & F3;
                                                fp = ((x == 0) ? FP : 0);
                                                fn = 0;
                                                f5 = (WZ >> 8) & F5;
                                                f3 = (WZ >> 8) & F3;
                                                break;
                                            case 0x47:
                                                // Opcode:    BIT 0,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4|pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1
                                                // Flags:     *Z513*0-
                                                //            * PV as Z
                                                //            * Behaves much like r AND 2^n
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IY+n]&{2^b}
                                                y = PeekByte(WZ);
                                                x = y & 0x01;
                                                fs = 0;
                                                fz = ((x == 0) ? FZ : 0);
                                                f5 = y & F5;
                                                fh = FH;
                                                f3 = y & F3;
                                                fp = ((x == 0) ? FP : 0);
                                                fn = 0;
                                                f5 = (WZ >> 8) & F5;
                                                f3 = (WZ >> 8) & F3;
                                                break;
                                            case 0x48:
                                                // Opcode:    BIT 1,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4|pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1
                                                // Flags:     *Z513*0-
                                                //            * PV as Z
                                                //            * Behaves much like r AND 2^n
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IY+n]&{2^b}
                                                y = PeekByte(WZ);
                                                x = y & 0x02;
                                                fs = 0;
                                                fz = ((x == 0) ? FZ : 0);
                                                f5 = y & F5;
                                                fh = FH;
                                                f3 = y & F3;
                                                fp = ((x == 0) ? FP : 0);
                                                fn = 0;
                                                f5 = (WZ >> 8) & F5;
                                                f3 = (WZ >> 8) & F3;
                                                break;
                                            case 0x49:
                                                // Opcode:    BIT 1,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4|pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1
                                                // Flags:     *Z513*0-
                                                //            * PV as Z
                                                //            * Behaves much like r AND 2^n
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IY+n]&{2^b}
                                                y = PeekByte(WZ);
                                                x = y & 0x02;
                                                fs = 0;
                                                fz = ((x == 0) ? FZ : 0);
                                                f5 = y & F5;
                                                fh = FH;
                                                f3 = y & F3;
                                                fp = ((x == 0) ? FP : 0);
                                                fn = 0;
                                                f5 = (WZ >> 8) & F5;
                                                f3 = (WZ >> 8) & F3;
                                                break;
                                            case 0x4A:
                                                // Opcode:    BIT 1,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4|pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1
                                                // Flags:     *Z513*0-
                                                //            * PV as Z
                                                //            * Behaves much like r AND 2^n
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IY+n]&{2^b}
                                                y = PeekByte(WZ);
                                                x = y & 0x02;
                                                fs = 0;
                                                fz = ((x == 0) ? FZ : 0);
                                                f5 = y & F5;
                                                fh = FH;
                                                f3 = y & F3;
                                                fp = ((x == 0) ? FP : 0);
                                                fn = 0;
                                                f5 = (WZ >> 8) & F5;
                                                f3 = (WZ >> 8) & F3;
                                                break;
                                            case 0x4B:
                                                // Opcode:    BIT 1,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4|pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1
                                                // Flags:     *Z513*0-
                                                //            * PV as Z
                                                //            * Behaves much like r AND 2^n
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IY+n]&{2^b}
                                                y = PeekByte(WZ);
                                                x = y & 0x02;
                                                fs = 0;
                                                fz = ((x == 0) ? FZ : 0);
                                                f5 = y & F5;
                                                fh = FH;
                                                f3 = y & F3;
                                                fp = ((x == 0) ? FP : 0);
                                                fn = 0;
                                                f5 = (WZ >> 8) & F5;
                                                f3 = (WZ >> 8) & F3;
                                                break;
                                            case 0x4C:
                                                // Opcode:    BIT 1,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4|pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1
                                                // Flags:     *Z513*0-
                                                //            * PV as Z
                                                //            * Behaves much like r AND 2^n
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IY+n]&{2^b}
                                                y = PeekByte(WZ);
                                                x = y & 0x02;
                                                fs = 0;
                                                fz = ((x == 0) ? FZ : 0);
                                                f5 = y & F5;
                                                fh = FH;
                                                f3 = y & F3;
                                                fp = ((x == 0) ? FP : 0);
                                                fn = 0;
                                                f5 = (WZ >> 8) & F5;
                                                f3 = (WZ >> 8) & F3;
                                                break;
                                            case 0x4D:
                                                // Opcode:    BIT 1,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4|pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1
                                                // Flags:     *Z513*0-
                                                //            * PV as Z
                                                //            * Behaves much like r AND 2^n
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IY+n]&{2^b}
                                                y = PeekByte(WZ);
                                                x = y & 0x02;
                                                fs = 0;
                                                fz = ((x == 0) ? FZ : 0);
                                                f5 = y & F5;
                                                fh = FH;
                                                f3 = y & F3;
                                                fp = ((x == 0) ? FP : 0);
                                                fn = 0;
                                                f5 = (WZ >> 8) & F5;
                                                f3 = (WZ >> 8) & F3;
                                                break;
                                            case 0x4E:
                                                // Opcode:    BIT 1,(IY$x) 
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4|pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1
                                                // Flags:     *Z513*0-
                                                //            * PV as Z
                                                //            * Behaves much like r AND 2^n
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IY+n]&{2^b}
                                                y = PeekByte(WZ);
                                                x = y & 0x02;
                                                fs = 0;
                                                fz = ((x == 0) ? FZ : 0);
                                                f5 = y & F5;
                                                fh = FH;
                                                f3 = y & F3;
                                                fp = ((x == 0) ? FP : 0);
                                                fn = 0;
                                                f5 = (WZ >> 8) & F5;
                                                f3 = (WZ >> 8) & F3;
                                                break;
                                            case 0x4F:
                                                // Opcode:    BIT 1,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4|pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1
                                                // Flags:     *Z513*0-
                                                //            * PV as Z
                                                //            * Behaves much like r AND 2^n
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IY+n]&{2^b}
                                                y = PeekByte(WZ);
                                                x = y & 0x02;
                                                fs = 0;
                                                fz = ((x == 0) ? FZ : 0);
                                                f5 = y & F5;
                                                fh = FH;
                                                f3 = y & F3;
                                                fp = ((x == 0) ? FP : 0);
                                                fn = 0;
                                                f5 = (WZ >> 8) & F5;
                                                f3 = (WZ >> 8) & F3;
                                                break;
                                            case 0x50:
                                                // Opcode:    BIT 2,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4|pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1
                                                // Flags:     *Z513*0-
                                                //            * PV as Z
                                                //            * Behaves much like r AND 2^n
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IY+n]&{2^b}
                                                y = PeekByte(WZ);
                                                x = y & 0x04;
                                                fs = 0;
                                                fz = ((x == 0) ? FZ : 0);
                                                f5 = y & F5;
                                                fh = FH;
                                                f3 = y & F3;
                                                fp = ((x == 0) ? FP : 0);
                                                fn = 0;
                                                f5 = (WZ >> 8) & F5;
                                                f3 = (WZ >> 8) & F3;
                                                break;
                                            case 0x51:
                                                // Opcode:    BIT 2,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4|pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1
                                                // Flags:     *Z513*0-
                                                //            * PV as Z
                                                //            * Behaves much like r AND 2^n
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IY+n]&{2^b}
                                                y = PeekByte(WZ);
                                                x = y & 0x04;
                                                fs = 0;
                                                fz = ((x == 0) ? FZ : 0);
                                                f5 = y & F5;
                                                fh = FH;
                                                f3 = y & F3;
                                                fp = ((x == 0) ? FP : 0);
                                                fn = 0;
                                                f5 = (WZ >> 8) & F5;
                                                f3 = (WZ >> 8) & F3;
                                                break;
                                            case 0x52:
                                                // Opcode:    BIT 2,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4|pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1
                                                // Flags:     *Z513*0-
                                                //            * PV as Z
                                                //            * Behaves much like r AND 2^n
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IY+n]&{2^b}
                                                y = PeekByte(WZ);
                                                x = y & 0x04;
                                                fs = 0;
                                                fz = ((x == 0) ? FZ : 0);
                                                f5 = y & F5;
                                                fh = FH;
                                                f3 = y & F3;
                                                fp = ((x == 0) ? FP : 0);
                                                fn = 0;
                                                f5 = (WZ >> 8) & F5;
                                                f3 = (WZ >> 8) & F3;
                                                break;
                                            case 0x53:
                                                // Opcode:    BIT 2,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4|pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1
                                                // Flags:     *Z513*0-
                                                //            * PV as Z
                                                //            * Behaves much like r AND 2^n
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IY+n]&{2^b}
                                                y = PeekByte(WZ);
                                                x = y & 0x04;
                                                fs = 0;
                                                fz = ((x == 0) ? FZ : 0);
                                                f5 = y & F5;
                                                fh = FH;
                                                f3 = y & F3;
                                                fp = ((x == 0) ? FP : 0);
                                                fn = 0;
                                                f5 = (WZ >> 8) & F5;
                                                f3 = (WZ >> 8) & F3;
                                                break;
                                            case 0x54:
                                                // Opcode:    BIT 2,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4|pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1
                                                // Flags:     *Z513*0-
                                                //            * PV as Z
                                                //            * Behaves much like r AND 2^n
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IY+n]&{2^b}
                                                y = PeekByte(WZ);
                                                x = y & 0x04;
                                                fs = 0;
                                                fz = ((x == 0) ? FZ : 0);
                                                f5 = y & F5;
                                                fh = FH;
                                                f3 = y & F3;
                                                fp = ((x == 0) ? FP : 0);
                                                fn = 0;
                                                f5 = (WZ >> 8) & F5;
                                                f3 = (WZ >> 8) & F3;
                                                break;
                                            case 0x55:
                                                // Opcode:    BIT 2,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4|pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1
                                                // Flags:     *Z513*0-
                                                //            * PV as Z
                                                //            * Behaves much like r AND 2^n
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IY+n]&{2^b}
                                                y = PeekByte(WZ);
                                                x = y & 0x04;
                                                fs = 0;
                                                fz = ((x == 0) ? FZ : 0);
                                                f5 = y & F5;
                                                fh = FH;
                                                f3 = y & F3;
                                                fp = ((x == 0) ? FP : 0);
                                                fn = 0;
                                                f5 = (WZ >> 8) & F5;
                                                f3 = (WZ >> 8) & F3;
                                                break;
                                            case 0x56:
                                                // Opcode:    BIT 2,(IY$x) 
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4|pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1
                                                // Flags:     *Z513*0-
                                                //            * PV as Z
                                                //            * Behaves much like r AND 2^n
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IY+n]&{2^b}
                                                y = PeekByte(WZ);
                                                x = y & 0x04;
                                                fs = 0;
                                                fz = ((x == 0) ? FZ : 0);
                                                f5 = y & F5;
                                                fh = FH;
                                                f3 = y & F3;
                                                fp = ((x == 0) ? FP : 0);
                                                fn = 0;
                                                f5 = (WZ >> 8) & F5;
                                                f3 = (WZ >> 8) & F3;
                                                break;
                                            case 0x57:
                                                // Opcode:    BIT 2,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4|pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1
                                                // Flags:     *Z513*0-
                                                //            * PV as Z
                                                //            * Behaves much like r AND 2^n
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IY+n]&{2^b}
                                                y = PeekByte(WZ);
                                                x = y & 0x04;
                                                fs = 0;
                                                fz = ((x == 0) ? FZ : 0);
                                                f5 = y & F5;
                                                fh = FH;
                                                f3 = y & F3;
                                                fp = ((x == 0) ? FP : 0);
                                                fn = 0;
                                                f5 = (WZ >> 8) & F5;
                                                f3 = (WZ >> 8) & F3;
                                                break;
                                            case 0x58:
                                                // Opcode:    BIT 3,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4|pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1
                                                // Flags:     *Z513*0-
                                                //            * PV as Z
                                                //            * Behaves much like r AND 2^n
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IY+n]&{2^b}
                                                y = PeekByte(WZ);
                                                x = y & 0x08;
                                                fs = 0;
                                                fz = ((x == 0) ? FZ : 0);
                                                f5 = y & F5;
                                                fh = FH;
                                                f3 = y & F3;
                                                fp = ((x == 0) ? FP : 0);
                                                fn = 0;
                                                f5 = (WZ >> 8) & F5;
                                                f3 = (WZ >> 8) & F3;
                                                break;
                                            case 0x59:
                                                // Opcode:    BIT 3,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4|pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1
                                                // Flags:     *Z513*0-
                                                //            * PV as Z
                                                //            * Behaves much like r AND 2^n
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IY+n]&{2^b}
                                                y = PeekByte(WZ);
                                                x = y & 0x08;
                                                fs = 0;
                                                fz = ((x == 0) ? FZ : 0);
                                                f5 = y & F5;
                                                fh = FH;
                                                f3 = y & F3;
                                                fp = ((x == 0) ? FP : 0);
                                                fn = 0;
                                                f5 = (WZ >> 8) & F5;
                                                f3 = (WZ >> 8) & F3;
                                                break;
                                            case 0x5A:
                                                // Opcode:    BIT 3,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4|pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1
                                                // Flags:     *Z513*0-
                                                //            * PV as Z
                                                //            * Behaves much like r AND 2^n
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IY+n]&{2^b}
                                                y = PeekByte(WZ);
                                                x = y & 0x08;
                                                fs = 0;
                                                fz = ((x == 0) ? FZ : 0);
                                                f5 = y & F5;
                                                fh = FH;
                                                f3 = y & F3;
                                                fp = ((x == 0) ? FP : 0);
                                                fn = 0;
                                                f5 = (WZ >> 8) & F5;
                                                f3 = (WZ >> 8) & F3;
                                                break;
                                            case 0x5B:
                                                // Opcode:    BIT 3,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4|pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1
                                                // Flags:     *Z513*0-
                                                //            * PV as Z
                                                //            * Behaves much like r AND 2^n
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IY+n]&{2^b}
                                                y = PeekByte(WZ);
                                                x = y & 0x08;
                                                fs = 0;
                                                fz = ((x == 0) ? FZ : 0);
                                                f5 = y & F5;
                                                fh = FH;
                                                f3 = y & F3;
                                                fp = ((x == 0) ? FP : 0);
                                                fn = 0;
                                                f5 = (WZ >> 8) & F5;
                                                f3 = (WZ >> 8) & F3;
                                                break;
                                            case 0x5C:
                                                // Opcode:    BIT 3,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4|pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1
                                                // Flags:     *Z513*0-
                                                //            * PV as Z
                                                //            * Behaves much like r AND 2^n
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IY+n]&{2^b}
                                                y = PeekByte(WZ);
                                                x = y & 0x08;
                                                fs = 0;
                                                fz = ((x == 0) ? FZ : 0);
                                                f5 = y & F5;
                                                fh = FH;
                                                f3 = y & F3;
                                                fp = ((x == 0) ? FP : 0);
                                                fn = 0;
                                                f5 = (WZ >> 8) & F5;
                                                f3 = (WZ >> 8) & F3;
                                                break;
                                            case 0x5D:
                                                // Opcode:    BIT 3,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4|pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1
                                                // Flags:     *Z513*0-
                                                //            * PV as Z
                                                //            * Behaves much like r AND 2^n
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IY+n]&{2^b}
                                                y = PeekByte(WZ);
                                                x = y & 0x08;
                                                fs = 0;
                                                fz = ((x == 0) ? FZ : 0);
                                                f5 = y & F5;
                                                fh = FH;
                                                f3 = y & F3;
                                                fp = ((x == 0) ? FP : 0);
                                                fn = 0;
                                                f5 = (WZ >> 8) & F5;
                                                f3 = (WZ >> 8) & F3;
                                                break;
                                            case 0x5E:
                                                // Opcode:    BIT 3,(IY$x) 
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4|pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1
                                                // Flags:     *Z513*0-
                                                //            * PV as Z
                                                //            * Behaves much like r AND 2^n
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IY+n]&{2^b}
                                                y = PeekByte(WZ);
                                                x = y & 0x08;
                                                fs = 0;
                                                fz = ((x == 0) ? FZ : 0);
                                                f5 = y & F5;
                                                fh = FH;
                                                f3 = y & F3;
                                                fp = ((x == 0) ? FP : 0);
                                                fn = 0;
                                                f5 = (WZ >> 8) & F5;
                                                f3 = (WZ >> 8) & F3;
                                                break;
                                            case 0x5F:
                                                // Opcode:    BIT 3,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4|pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1
                                                // Flags:     *Z513*0-
                                                //            * PV as Z
                                                //            * Behaves much like r AND 2^n
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IY+n]&{2^b}
                                                y = PeekByte(WZ);
                                                x = y & 0x08;
                                                fs = 0;
                                                fz = ((x == 0) ? FZ : 0);
                                                f5 = y & F5;
                                                fh = FH;
                                                f3 = y & F3;
                                                fp = ((x == 0) ? FP : 0);
                                                fn = 0;
                                                f5 = (WZ >> 8) & F5;
                                                f3 = (WZ >> 8) & F3;
                                                break;
                                            case 0x60:
                                                // Opcode:    BIT 4,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4|pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1
                                                // Flags:     *Z513*0-
                                                //            * PV as Z
                                                //            * Behaves much like r AND 2^n
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IY+n]&{2^b}
                                                y = PeekByte(WZ);
                                                x = y & 0x10;
                                                fs = 0;
                                                fz = ((x == 0) ? FZ : 0);
                                                f5 = y & F5;
                                                fh = FH;
                                                f3 = y & F3;
                                                fp = ((x == 0) ? FP : 0);
                                                fn = 0;
                                                f5 = (WZ >> 8) & F5;
                                                f3 = (WZ >> 8) & F3;
                                                break;
                                            case 0x61:
                                                // Opcode:    BIT 4,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4|pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1
                                                // Flags:     *Z513*0-
                                                //            * PV as Z
                                                //            * Behaves much like r AND 2^n
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IY+n]&{2^b}
                                                y = PeekByte(WZ);
                                                x = y & 0x10;
                                                fs = 0;
                                                fz = ((x == 0) ? FZ : 0);
                                                f5 = y & F5;
                                                fh = FH;
                                                f3 = y & F3;
                                                fp = ((x == 0) ? FP : 0);
                                                fn = 0;
                                                f5 = (WZ >> 8) & F5;
                                                f3 = (WZ >> 8) & F3;
                                                break;
                                            case 0x62:
                                                // Opcode:    BIT 4,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4|pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1
                                                // Flags:     *Z513*0-
                                                //            * PV as Z
                                                //            * Behaves much like r AND 2^n
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IY+n]&{2^b}
                                                y = PeekByte(WZ);
                                                x = y & 0x10;
                                                fs = 0;
                                                fz = ((x == 0) ? FZ : 0);
                                                f5 = y & F5;
                                                fh = FH;
                                                f3 = y & F3;
                                                fp = ((x == 0) ? FP : 0);
                                                fn = 0;
                                                f5 = (WZ >> 8) & F5;
                                                f3 = (WZ >> 8) & F3;
                                                break;
                                            case 0x63:
                                                // Opcode:    BIT 4,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4|pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1
                                                // Flags:     *Z513*0-
                                                //            * PV as Z
                                                //            * Behaves much like r AND 2^n
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IY+n]&{2^b}
                                                y = PeekByte(WZ);
                                                x = y & 0x10;
                                                fs = 0;
                                                fz = ((x == 0) ? FZ : 0);
                                                f5 = y & F5;
                                                fh = FH;
                                                f3 = y & F3;
                                                fp = ((x == 0) ? FP : 0);
                                                fn = 0;
                                                f5 = (WZ >> 8) & F5;
                                                f3 = (WZ >> 8) & F3;
                                                break;
                                            case 0x64:
                                                // Opcode:    BIT 4,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4|pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1
                                                // Flags:     *Z513*0-
                                                //            * PV as Z
                                                //            * Behaves much like r AND 2^n
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IY+n]&{2^b}
                                                y = PeekByte(WZ);
                                                x = y & 0x10;
                                                fs = 0;
                                                fz = ((x == 0) ? FZ : 0);
                                                f5 = y & F5;
                                                fh = FH;
                                                f3 = y & F3;
                                                fp = ((x == 0) ? FP : 0);
                                                fn = 0;
                                                f5 = (WZ >> 8) & F5;
                                                f3 = (WZ >> 8) & F3;
                                                break;
                                            case 0x65:
                                                // Opcode:    BIT 4,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4|pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1
                                                // Flags:     *Z513*0-
                                                //            * PV as Z
                                                //            * Behaves much like r AND 2^n
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IY+n]&{2^b}
                                                y = PeekByte(WZ);
                                                x = y & 0x10;
                                                fs = 0;
                                                fz = ((x == 0) ? FZ : 0);
                                                f5 = y & F5;
                                                fh = FH;
                                                f3 = y & F3;
                                                fp = ((x == 0) ? FP : 0);
                                                fn = 0;
                                                f5 = (WZ >> 8) & F5;
                                                f3 = (WZ >> 8) & F3;
                                                break;
                                            case 0x66:
                                                // Opcode:    BIT 4,(IY$x) 
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4|pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1
                                                // Flags:     *Z513*0-
                                                //            * PV as Z
                                                //            * Behaves much like r AND 2^n
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IY+n]&{2^b}
                                                y = PeekByte(WZ);
                                                x = y & 0x10;
                                                fs = 0;
                                                fz = ((x == 0) ? FZ : 0);
                                                f5 = y & F5;
                                                fh = FH;
                                                f3 = y & F3;
                                                fp = ((x == 0) ? FP : 0);
                                                fn = 0;
                                                f5 = (WZ >> 8) & F5;
                                                f3 = (WZ >> 8) & F3;
                                                break;
                                            case 0x67:
                                                // Opcode:    BIT 4,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4|pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1
                                                // Flags:     *Z513*0-
                                                //            * PV as Z
                                                //            * Behaves much like r AND 2^n
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IY+n]&{2^b}
                                                y = PeekByte(WZ);
                                                x = y & 0x10;
                                                fs = 0;
                                                fz = ((x == 0) ? FZ : 0);
                                                f5 = y & F5;
                                                fh = FH;
                                                f3 = y & F3;
                                                fp = ((x == 0) ? FP : 0);
                                                fn = 0;
                                                f5 = (WZ >> 8) & F5;
                                                f3 = (WZ >> 8) & F3;
                                                break;
                                            case 0x68:
                                                // Opcode:    BIT 5,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4|pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1
                                                // Flags:     *Z513*0-
                                                //            * PV as Z
                                                //            * Behaves much like r AND 2^n
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IY+n]&{2^b}
                                                y = PeekByte(WZ);
                                                x = y & 0x20;
                                                fs = 0;
                                                fz = ((x == 0) ? FZ : 0);
                                                f5 = y & F5;
                                                fh = FH;
                                                f3 = y & F3;
                                                fp = ((x == 0) ? FP : 0);
                                                fn = 0;
                                                f5 = (WZ >> 8) & F5;
                                                f3 = (WZ >> 8) & F3;
                                                break;
                                            case 0x69:
                                                // Opcode:    BIT 5,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4|pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1
                                                // Flags:     *Z513*0-
                                                //            * PV as Z
                                                //            * Behaves much like r AND 2^n
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IY+n]&{2^b}
                                                y = PeekByte(WZ);
                                                x = y & 0x20;
                                                fs = 0;
                                                fz = ((x == 0) ? FZ : 0);
                                                f5 = y & F5;
                                                fh = FH;
                                                f3 = y & F3;
                                                fp = ((x == 0) ? FP : 0);
                                                fn = 0;
                                                f5 = (WZ >> 8) & F5;
                                                f3 = (WZ >> 8) & F3;
                                                break;
                                            case 0x6A:
                                                // Opcode:    BIT 5,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4|pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1
                                                // Flags:     *Z513*0-
                                                //            * PV as Z
                                                //            * Behaves much like r AND 2^n
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IY+n]&{2^b}
                                                y = PeekByte(WZ);
                                                x = y & 0x20;
                                                fs = 0;
                                                fz = ((x == 0) ? FZ : 0);
                                                f5 = y & F5;
                                                fh = FH;
                                                f3 = y & F3;
                                                fp = ((x == 0) ? FP : 0);
                                                fn = 0;
                                                f5 = (WZ >> 8) & F5;
                                                f3 = (WZ >> 8) & F3;
                                                break;
                                            case 0x6B:
                                                // Opcode:    BIT 5,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4|pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1
                                                // Flags:     *Z513*0-
                                                //            * PV as Z
                                                //            * Behaves much like r AND 2^n
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IY+n]&{2^b}
                                                y = PeekByte(WZ);
                                                x = y & 0x20;
                                                fs = 0;
                                                fz = ((x == 0) ? FZ : 0);
                                                f5 = y & F5;
                                                fh = FH;
                                                f3 = y & F3;
                                                fp = ((x == 0) ? FP : 0);
                                                fn = 0;
                                                f5 = (WZ >> 8) & F5;
                                                f3 = (WZ >> 8) & F3;
                                                break;
                                            case 0x6C:
                                                // Opcode:    BIT 5,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4|pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1
                                                // Flags:     *Z513*0-
                                                //            * PV as Z
                                                //            * Behaves much like r AND 2^n
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IY+n]&{2^b}
                                                y = PeekByte(WZ);
                                                x = y & 0x20;
                                                fs = 0;
                                                fz = ((x == 0) ? FZ : 0);
                                                f5 = y & F5;
                                                fh = FH;
                                                f3 = y & F3;
                                                fp = ((x == 0) ? FP : 0);
                                                fn = 0;
                                                f5 = (WZ >> 8) & F5;
                                                f3 = (WZ >> 8) & F3;
                                                break;
                                            case 0x6D:
                                                // Opcode:    BIT 5,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4|pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1
                                                // Flags:     *Z513*0-
                                                //            * PV as Z
                                                //            * Behaves much like r AND 2^n
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IY+n]&{2^b}
                                                y = PeekByte(WZ);
                                                x = y & 0x20;
                                                fs = 0;
                                                fz = ((x == 0) ? FZ : 0);
                                                f5 = y & F5;
                                                fh = FH;
                                                f3 = y & F3;
                                                fp = ((x == 0) ? FP : 0);
                                                fn = 0;
                                                f5 = (WZ >> 8) & F5;
                                                f3 = (WZ >> 8) & F3;
                                                break;
                                            case 0x6E:
                                                // Opcode:    BIT 5,(IY$x) 
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4|pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1
                                                // Flags:     *Z513*0-
                                                //            * PV as Z
                                                //            * Behaves much like r AND 2^n
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IY+n]&{2^b}
                                                y = PeekByte(WZ);
                                                x = y & 0x20;
                                                fs = 0;
                                                fz = ((x == 0) ? FZ : 0);
                                                f5 = y & F5;
                                                fh = FH;
                                                f3 = y & F3;
                                                fp = ((x == 0) ? FP : 0);
                                                fn = 0;
                                                f5 = (WZ >> 8) & F5;
                                                f3 = (WZ >> 8) & F3;
                                                break;
                                            case 0x6F:
                                                // Opcode:    BIT 5,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4|pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1
                                                // Flags:     *Z513*0-
                                                //            * PV as Z
                                                //            * Behaves much like r AND 2^n
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IY+n]&{2^b}
                                                y = PeekByte(WZ);
                                                x = y & 0x20;
                                                fs = 0;
                                                fz = ((x == 0) ? FZ : 0);
                                                f5 = y & F5;
                                                fh = FH;
                                                f3 = y & F3;
                                                fp = ((x == 0) ? FP : 0);
                                                fn = 0;
                                                f5 = (WZ >> 8) & F5;
                                                f3 = (WZ >> 8) & F3;
                                                break;
                                            case 0x70:
                                                // Opcode:    BIT 6,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4|pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1
                                                // Flags:     *Z513*0-
                                                //            * PV as Z
                                                //            * Behaves much like r AND 2^n
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IY+n]&{2^b}
                                                y = PeekByte(WZ);
                                                x = y & 0x40;
                                                fs = 0;
                                                fz = ((x == 0) ? FZ : 0);
                                                f5 = y & F5;
                                                fh = FH;
                                                f3 = y & F3;
                                                fp = ((x == 0) ? FP : 0);
                                                fn = 0;
                                                f5 = (WZ >> 8) & F5;
                                                f3 = (WZ >> 8) & F3;
                                                break;
                                            case 0x71:
                                                // Opcode:    BIT 6,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4|pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1
                                                // Flags:     *Z513*0-
                                                //            * PV as Z
                                                //            * Behaves much like r AND 2^n
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IY+n]&{2^b}
                                                y = PeekByte(WZ);
                                                x = y & 0x40;
                                                fs = 0;
                                                fz = ((x == 0) ? FZ : 0);
                                                f5 = y & F5;
                                                fh = FH;
                                                f3 = y & F3;
                                                fp = ((x == 0) ? FP : 0);
                                                fn = 0;
                                                f5 = (WZ >> 8) & F5;
                                                f3 = (WZ >> 8) & F3;
                                                break;
                                            case 0x72:
                                                // Opcode:    BIT 6,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4|pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1
                                                // Flags:     *Z513*0-
                                                //            * PV as Z
                                                //            * Behaves much like r AND 2^n
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IY+n]&{2^b}
                                                y = PeekByte(WZ);
                                                x = y & 0x40;
                                                fs = 0;
                                                fz = ((x == 0) ? FZ : 0);
                                                f5 = y & F5;
                                                fh = FH;
                                                f3 = y & F3;
                                                fp = ((x == 0) ? FP : 0);
                                                fn = 0;
                                                f5 = (WZ >> 8) & F5;
                                                f3 = (WZ >> 8) & F3;
                                                break;
                                            case 0x73:
                                                // Opcode:    BIT 6,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4|pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1
                                                // Flags:     *Z513*0-
                                                //            * PV as Z
                                                //            * Behaves much like r AND 2^n
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IY+n]&{2^b}
                                                y = PeekByte(WZ);
                                                x = y & 0x40;
                                                fs = 0;
                                                fz = ((x == 0) ? FZ : 0);
                                                f5 = y & F5;
                                                fh = FH;
                                                f3 = y & F3;
                                                fp = ((x == 0) ? FP : 0);
                                                fn = 0;
                                                f5 = (WZ >> 8) & F5;
                                                f3 = (WZ >> 8) & F3;
                                                break;
                                            case 0x74:
                                                // Opcode:    BIT 6,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4|pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1
                                                // Flags:     *Z513*0-
                                                //            * PV as Z
                                                //            * Behaves much like r AND 2^n
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IY+n]&{2^b}
                                                y = PeekByte(WZ);
                                                x = y & 0x40;
                                                fs = 0;
                                                fz = ((x == 0) ? FZ : 0);
                                                f5 = y & F5;
                                                fh = FH;
                                                f3 = y & F3;
                                                fp = ((x == 0) ? FP : 0);
                                                fn = 0;
                                                f5 = (WZ >> 8) & F5;
                                                f3 = (WZ >> 8) & F3;
                                                break;
                                            case 0x75:
                                                // Opcode:    BIT 6,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4|pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1
                                                // Flags:     *Z513*0-
                                                //            * PV as Z
                                                //            * Behaves much like r AND 2^n
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IY+n]&{2^b}
                                                y = PeekByte(WZ);
                                                x = y & 0x40;
                                                fs = 0;
                                                fz = ((x == 0) ? FZ : 0);
                                                f5 = y & F5;
                                                fh = FH;
                                                f3 = y & F3;
                                                fp = ((x == 0) ? FP : 0);
                                                fn = 0;
                                                f5 = (WZ >> 8) & F5;
                                                f3 = (WZ >> 8) & F3;
                                                break;
                                            case 0x76:
                                                // Opcode:    BIT 6,(IY$x) 
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4|pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1
                                                // Flags:     *Z513*0-
                                                //            * PV as Z
                                                //            * Behaves much like r AND 2^n
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IY+n]&{2^b}
                                                y = PeekByte(WZ);
                                                x = y & 0x40;
                                                fs = 0;
                                                fz = ((x == 0) ? FZ : 0);
                                                f5 = y & F5;
                                                fh = FH;
                                                f3 = y & F3;
                                                fp = ((x == 0) ? FP : 0);
                                                fn = 0;
                                                f5 = (WZ >> 8) & F5;
                                                f3 = (WZ >> 8) & F3;
                                                break;
                                            case 0x77:
                                                // Opcode:    BIT 6,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4|pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1
                                                // Flags:     *Z513*0-
                                                //            * PV as Z
                                                //            * Behaves much like r AND 2^n
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IY+n]&{2^b}
                                                y = PeekByte(WZ);
                                                x = y & 0x40;
                                                fs = 0;
                                                fz = ((x == 0) ? FZ : 0);
                                                f5 = y & F5;
                                                fh = FH;
                                                f3 = y & F3;
                                                fp = ((x == 0) ? FP : 0);
                                                fn = 0;
                                                f5 = (WZ >> 8) & F5;
                                                f3 = (WZ >> 8) & F3;
                                                break;
                                            case 0x78:
                                                // Opcode:    BIT 7,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4|pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1
                                                // Flags:     *Z513*0-
                                                //            * PV as Z
                                                //            * S set if b7 of r set
                                                //            * Behaves much like r AND 2^n
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IY+n]&{2^b}
                                                y = PeekByte(WZ);
                                                x = y & 0x80;
                                                fs = (x == 0 ? 0 : FS);
                                                fz = ((x == 0) ? FZ : 0);
                                                f5 = y & F5;
                                                fh = FH;
                                                f3 = y & F3;
                                                fp = ((x == 0) ? FP : 0);
                                                fn = 0;
                                                f5 = (WZ >> 8) & F5;
                                                f3 = (WZ >> 8) & F3;
                                                break;
                                            case 0x79:
                                                // Opcode:    BIT 7,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4|pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1
                                                // Flags:     *Z513*0-
                                                //            * PV as Z
                                                //            * S set if b7 of r set
                                                //            * Behaves much like r AND 2^n
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IY+n]&{2^b}
                                                y = PeekByte(WZ);
                                                x = y & 0x80;
                                                fs = (x == 0 ? 0 : FS);
                                                fz = ((x == 0) ? FZ : 0);
                                                f5 = y & F5;
                                                fh = FH;
                                                f3 = y & F3;
                                                fp = ((x == 0) ? FP : 0);
                                                fn = 0;
                                                f5 = (WZ >> 8) & F5;
                                                f3 = (WZ >> 8) & F3;
                                                break;
                                            case 0x7A:
                                                // Opcode:    BIT 7,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4|pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1
                                                // Flags:     *Z513*0-
                                                //            * PV as Z
                                                //            * S set if b7 of r set
                                                //            * Behaves much like r AND 2^n
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IY+n]&{2^b}
                                                y = PeekByte(WZ);
                                                x = y & 0x80;
                                                fs = (x == 0 ? 0 : FS);
                                                fz = ((x == 0) ? FZ : 0);
                                                f5 = y & F5;
                                                fh = FH;
                                                f3 = y & F3;
                                                fp = ((x == 0) ? FP : 0);
                                                fn = 0;
                                                f5 = (WZ >> 8) & F5;
                                                f3 = (WZ >> 8) & F3;
                                                break;
                                            case 0x7B:
                                                // Opcode:    BIT 7,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4|pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1
                                                // Flags:     *Z513*0-
                                                //            * PV as Z
                                                //            * S set if b7 of r set
                                                //            * Behaves much like r AND 2^n
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IY+n]&{2^b}
                                                y = PeekByte(WZ);
                                                x = y & 0x80;
                                                fs = (x == 0 ? 0 : FS);
                                                fz = ((x == 0) ? FZ : 0);
                                                f5 = y & F5;
                                                fh = FH;
                                                f3 = y & F3;
                                                fp = ((x == 0) ? FP : 0);
                                                fn = 0;
                                                f5 = (WZ >> 8) & F5;
                                                f3 = (WZ >> 8) & F3;
                                                break;
                                            case 0x7C:
                                                // Opcode:    BIT 7,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4|pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1
                                                // Flags:     *Z513*0-
                                                //            * PV as Z
                                                //            * S set if b7 of r set
                                                //            * Behaves much like r AND 2^n
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IY+n]&{2^b}
                                                y = PeekByte(WZ);
                                                x = y & 0x80;
                                                fs = (x == 0 ? 0 : FS);
                                                fz = ((x == 0) ? FZ : 0);
                                                f5 = y & F5;
                                                fh = FH;
                                                f3 = y & F3;
                                                fp = ((x == 0) ? FP : 0);
                                                fn = 0;
                                                f5 = (WZ >> 8) & F5;
                                                f3 = (WZ >> 8) & F3;
                                                break;
                                            case 0x7D:
                                                // Opcode:    BIT 7,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4|pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1
                                                // Flags:     *Z513*0-
                                                //            * PV as Z
                                                //            * S set if b7 of r set
                                                //            * Behaves much like r AND 2^n
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IY+n]&{2^b}
                                                y = PeekByte(WZ);
                                                x = y & 0x80;
                                                fs = (x == 0 ? 0 : FS);
                                                fz = ((x == 0) ? FZ : 0);
                                                f5 = y & F5;
                                                fh = FH;
                                                f3 = y & F3;
                                                fp = ((x == 0) ? FP : 0);
                                                fn = 0;
                                                f5 = (WZ >> 8) & F5;
                                                f3 = (WZ >> 8) & F3;
                                                break;
                                            case 0x7E:
                                                // Opcode:    BIT 7,(IY$x) 
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4|pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1
                                                // Flags:     *Z513*0-
                                                //            * PV as Z
                                                //            * S set if b7 of r set
                                                //            * Behaves much like r AND 2^n
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IY+n]&{2^b}
                                                y = PeekByte(WZ);
                                                x = y & 0x80;
                                                fs = (x == 0 ? 0 : FS);
                                                fz = ((x == 0) ? FZ : 0);
                                                f5 = y & F5;
                                                fh = FH;
                                                f3 = y & F3;
                                                fp = ((x == 0) ? FP : 0);
                                                fn = 0;
                                                f5 = (WZ >> 8) & F5;
                                                f3 = (WZ >> 8) & F3;
                                                break;
                                            case 0x7F:
                                                // Opcode:    BIT 7,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4|pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1
                                                // Flags:     *Z513*0-
                                                //            * PV as Z
                                                //            * S set if b7 of r set
                                                //            * Behaves much like r AND 2^n
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IY+n]&{2^b}
                                                y = PeekByte(WZ);
                                                x = y & 0x80;
                                                fs = (x == 0 ? 0 : FS);
                                                fz = ((x == 0) ? FZ : 0);
                                                f5 = y & F5;
                                                fh = FH;
                                                f3 = y & F3;
                                                fp = ((x == 0) ? FP : 0);
                                                fn = 0;
                                                f5 = (WZ >> 8) & F5;
                                                f3 = (WZ >> 8) & F3;
                                                break;
                                            case 0x80:
                                                // Opcode:    LD B,RES 0,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: B=[IY+n] / [IY+n]=[IY+n]&{~2^b} / [IY+n]=B
                                                B = PeekByte(WZ);
                                                B &= 0xFE;
                                                PokeByte(WZ, B);
                                                break;
                                            case 0x81:
                                                // Opcode:    LD C,RES 0,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: C=[IY+n] / [IY+n]=[IY+n]&{~2^b} / [IY+n]=C
                                                C = PeekByte(WZ);
                                                C &= 0xFE;
                                                PokeByte(WZ, C);
                                                break;
                                            case 0x82:
                                                // Opcode:    LD D,RES 0,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: D=[IY+n] / [IY+n]=[IY+n]&{~2^b} / [IY+n]=D
                                                D = PeekByte(WZ);
                                                D &= 0xFE;
                                                PokeByte(WZ, D);
                                                break;
                                            case 0x83:
                                                // Opcode:    LD E,RES 0,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: E=[IY+n] / [IY+n]=[IY+n]&{~2^b} / [IY+n]=E
                                                E = PeekByte(WZ);
                                                E &= 0xFE;
                                                PokeByte(WZ, E);
                                                break;
                                            case 0x84:
                                                // Opcode:    LD H,RES 0,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: H=[IY+n] / [IY+n]=[IY+n]&{~2^b} / [IY+n]=H
                                                H = PeekByte(WZ);
                                                H &= 0xFE;
                                                PokeByte(WZ, H);
                                                break;
                                            case 0x85:
                                                // Opcode:    LD L,RES 0,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: L=[IY+n] / [IY+n]=[IY+n]&{~2^b} / [IY+n]=L
                                                L = PeekByte(WZ);
                                                L &= 0xFE;
                                                PokeByte(WZ, L);
                                                break;
                                            case 0x86:
                                                // Opcode:    RES 0,(IY$x) 
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IY+n]=[IY+n]&{~2^b}
                                                x = PeekByte(WZ);
                                                x &= 0xFE;
                                                PokeByte(WZ, x);
                                                break;
                                            case 0x87:
                                                // Opcode:    LD A,RES 0,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: A=[IY+n] / [IY+n]=[IY+n]&{~2^b} / [IY+n]=A
                                                A = PeekByte(WZ);
                                                A &= 0xFE;
                                                PokeByte(WZ, A);
                                                break;
                                            case 0x88:
                                                // Opcode:    LD B,RES 1,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: B=[IY+n] / [IY+n]=[IY+n]&{~2^b} / [IY+n]=B
                                                B = PeekByte(WZ);
                                                B &= 0xFD;
                                                PokeByte(WZ, B);
                                                break;
                                            case 0x89:
                                                // Opcode:    LD C,RES 1,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: C=[IY+n] / [IY+n]=[IY+n]&{~2^b} / [IY+n]=C
                                                C = PeekByte(WZ);
                                                C &= 0xFD;
                                                PokeByte(WZ, C);
                                                break;
                                            case 0x8A:
                                                // Opcode:    LD D,RES 1,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: D=[IY+n] / [IY+n]=[IY+n]&{~2^b} / [IY+n]=D
                                                D = PeekByte(WZ);
                                                D &= 0xFD;
                                                PokeByte(WZ, D);
                                                break;
                                            case 0x8B:
                                                // Opcode:    LD E,RES 1,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: E=[IY+n] / [IY+n]=[IY+n]&{~2^b} / [IY+n]=E
                                                E = PeekByte(WZ);
                                                E &= 0xFD;
                                                PokeByte(WZ, E);
                                                break;
                                            case 0x8C:
                                                // Opcode:    LD H,RES 1,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: H=[IY+n] / [IY+n]=[IY+n]&{~2^b} / [IY+n]=H
                                                H = PeekByte(WZ);
                                                H &= 0xFD;
                                                PokeByte(WZ, H);
                                                break;
                                            case 0x8D:
                                                // Opcode:    LD L,RES 1,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: L=[IY+n] / [IY+n]=[IY+n]&{~2^b} / [IY+n]=L
                                                L = PeekByte(WZ);
                                                L &= 0xFD;
                                                PokeByte(WZ, L);
                                                break;
                                            case 0x8E:
                                                // Opcode:    RES 1,(IY$x) 
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IY+n]=[IY+n]&{~2^b}
                                                x = PeekByte(WZ);
                                                x &= 0xFD;
                                                PokeByte(WZ, x);
                                                break;
                                            case 0x8F:
                                                // Opcode:    LD A,RES 1,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: A=[IY+n] / [IY+n]=[IY+n]&{~2^b} / [IY+n]=A
                                                A = PeekByte(WZ);
                                                A &= 0xFD;
                                                PokeByte(WZ, A);
                                                break;
                                            case 0x90:
                                                // Opcode:    LD B,RES 2,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: B=[IY+n] / [IY+n]=[IY+n]&{~2^b} / [IY+n]=B
                                                B = PeekByte(WZ);
                                                B &= 0xFB;
                                                PokeByte(WZ, B);
                                                break;
                                            case 0x91:
                                                // Opcode:    LD C,RES 2,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: C=[IY+n] / [IY+n]=[IY+n]&{~2^b} / [IY+n]=C
                                                C = PeekByte(WZ);
                                                C &= 0xFB;
                                                PokeByte(WZ, C);
                                                break;
                                            case 0x92:
                                                // Opcode:    LD D,RES 2,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: D=[IY+n] / [IY+n]=[IY+n]&{~2^b} / [IY+n]=D
                                                D = PeekByte(WZ);
                                                D &= 0xFB;
                                                PokeByte(WZ, D);
                                                break;
                                            case 0x93:
                                                // Opcode:    LD E,RES 2,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: E=[IY+n] / [IY+n]=[IY+n]&{~2^b} / [IY+n]=E
                                                E = PeekByte(WZ);
                                                E &= 0xFB;
                                                PokeByte(WZ, E);
                                                break;
                                            case 0x94:
                                                // Opcode:    LD H,RES 2,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: H=[IY+n] / [IY+n]=[IY+n]&{~2^b} / [IY+n]=H
                                                H = PeekByte(WZ);
                                                H &= 0xFB;
                                                PokeByte(WZ, H);
                                                break;
                                            case 0x95:
                                                // Opcode:    LD L,RES 2,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: L=[IY+n] / [IY+n]=[IY+n]&{~2^b} / [IY+n]=L
                                                L = PeekByte(WZ);
                                                L &= 0xFB;
                                                PokeByte(WZ, L);
                                                break;
                                            case 0x96:
                                                // Opcode:    RES 2,(IY$x) 
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IY+n]=[IY+n]&{~2^b}
                                                x = PeekByte(WZ);
                                                x &= 0xFB;
                                                PokeByte(WZ, x);
                                                break;
                                            case 0x97:
                                                // Opcode:    LD A,RES 2,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: A=[IY+n] / [IY+n]=[IY+n]&{~2^b} / [IY+n]=A
                                                A = PeekByte(WZ);
                                                A &= 0xFB;
                                                PokeByte(WZ, A);
                                                break;
                                            case 0x98:
                                                // Opcode:    LD B,RES 3,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: B=[IY+n] / [IY+n]=[IY+n]&{~2^b} / [IY+n]=B
                                                B = PeekByte(WZ);
                                                B &= 0xF7;
                                                PokeByte(WZ, B);
                                                break;
                                            case 0x99:
                                                // Opcode:    LD C,RES 3,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: C=[IY+n] / [IY+n]=[IY+n]&{~2^b} / [IY+n]=C
                                                C = PeekByte(WZ);
                                                C &= 0xF7;
                                                PokeByte(WZ, C);
                                                break;
                                            case 0x9A:
                                                // Opcode:    LD D,RES 3,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: D=[IY+n] / [IY+n]=[IY+n]&{~2^b} / [IY+n]=D
                                                D = PeekByte(WZ);
                                                D &= 0xF7;
                                                PokeByte(WZ, D);
                                                break;
                                            case 0x9B:
                                                // Opcode:    LD E,RES 3,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: E=[IY+n] / [IY+n]=[IY+n]&{~2^b} / [IY+n]=E
                                                E = PeekByte(WZ);
                                                E &= 0xF7;
                                                PokeByte(WZ, E);
                                                break;
                                            case 0x9C:
                                                // Opcode:    LD H,RES 3,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: H=[IY+n] / [IY+n]=[IY+n]&{~2^b} / [IY+n]=H
                                                H = PeekByte(WZ);
                                                H &= 0xF7;
                                                PokeByte(WZ, H);
                                                break;
                                            case 0x9D:
                                                // Opcode:    LD L,RES 3,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: L=[IY+n] / [IY+n]=[IY+n]&{~2^b} / [IY+n]=L
                                                L = PeekByte(WZ);
                                                L &= 0xF7;
                                                PokeByte(WZ, L);
                                                break;
                                            case 0x9E:
                                                // Opcode:    RES 3,(IY$x) 
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IY+n]=[IY+n]&{~2^b}
                                                x = PeekByte(WZ);
                                                x &= 0xF7;
                                                PokeByte(WZ, x);
                                                break;
                                            case 0x9F:
                                                // Opcode:    LD A,RES 3,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: A=[IY+n] / [IY+n]=[IY+n]&{~2^b} / [IY+n]=A
                                                A = PeekByte(WZ);
                                                A &= 0xF7;
                                                PokeByte(WZ, A);
                                                break;
                                            case 0xA0:
                                                // Opcode:    LD B,RES 4,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: B=[IY+n] / [IY+n]=[IY+n]&{~2^b} / [IY+n]=B
                                                B = PeekByte(WZ);
                                                B &= 0xEF;
                                                PokeByte(WZ, B);
                                                break;
                                            case 0xA1:
                                                // Opcode:    LD C,RES 4,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: C=[IY+n] / [IY+n]=[IY+n]&{~2^b} / [IY+n]=C
                                                C = PeekByte(WZ);
                                                C &= 0xEF;
                                                PokeByte(WZ, C);
                                                break;
                                            case 0xA2:
                                                // Opcode:    LD D,RES 4,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: D=[IY+n] / [IY+n]=[IY+n]&{~2^b} / [IY+n]=D
                                                D = PeekByte(WZ);
                                                D &= 0xEF;
                                                PokeByte(WZ, D);
                                                break;
                                            case 0xA3:
                                                // Opcode:    LD E,RES 4,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: E=[IY+n] / [IY+n]=[IY+n]&{~2^b} / [IY+n]=E
                                                E = PeekByte(WZ);
                                                E &= 0xEF;
                                                PokeByte(WZ, E);
                                                break;
                                            case 0xA4:
                                                // Opcode:    LD H,RES 4,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: H=[IY+n] / [IY+n]=[IY+n]&{~2^b} / [IY+n]=H
                                                H = PeekByte(WZ);
                                                H &= 0xEF;
                                                PokeByte(WZ, H);
                                                break;
                                            case 0xA5:
                                                // Opcode:    LD L,RES 4,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: L=[IY+n] / [IY+n]=[IY+n]&{~2^b} / [IY+n]=L
                                                L = PeekByte(WZ);
                                                L &= 0xEF;
                                                PokeByte(WZ, L);
                                                break;
                                            case 0xA6:
                                                // Opcode:    RES 4,(IY$x) 
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IY+n]=[IY+n]&{~2^b}
                                                x = PeekByte(WZ);
                                                x &= 0xEF;
                                                PokeByte(WZ, x);
                                                break;
                                            case 0xA7:
                                                // Opcode:    LD A,RES 4,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: A=[IY+n] / [IY+n]=[IY+n]&{~2^b} / [IY+n]=A
                                                A = PeekByte(WZ);
                                                A &= 0xEF;
                                                PokeByte(WZ, A);
                                                break;
                                            case 0xA8:
                                                // Opcode:    LD B,RES 5,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: B=[IY+n] / [IY+n]=[IY+n]&{~2^b} / [IY+n]=B
                                                B = PeekByte(WZ);
                                                B &= 0xDF;
                                                PokeByte(WZ, B);
                                                break;
                                            case 0xA9:
                                                // Opcode:    LD C,RES 5,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: C=[IY+n] / [IY+n]=[IY+n]&{~2^b} / [IY+n]=C
                                                C = PeekByte(WZ);
                                                C &= 0xDF;
                                                PokeByte(WZ, C);
                                                break;
                                            case 0xAA:
                                                // Opcode:    LD D,RES 5,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: D=[IY+n] / [IY+n]=[IY+n]&{~2^b} / [IY+n]=D
                                                D = PeekByte(WZ);
                                                D &= 0xDF;
                                                PokeByte(WZ, D);
                                                break;
                                            case 0xAB:
                                                // Opcode:    LD E,RES 5,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: E=[IY+n] / [IY+n]=[IY+n]&{~2^b} / [IY+n]=E
                                                E = PeekByte(WZ);
                                                E &= 0xDF;
                                                PokeByte(WZ, E);
                                                break;
                                            case 0xAC:
                                                // Opcode:    LD H,RES 5,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: H=[IY+n] / [IY+n]=[IY+n]&{~2^b} / [IY+n]=H
                                                H = PeekByte(WZ);
                                                H &= 0xDF;
                                                PokeByte(WZ, H);
                                                break;
                                            case 0xAD:
                                                // Opcode:    LD L,RES 5,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: L=[IY+n] / [IY+n]=[IY+n]&{~2^b} / [IY+n]=L
                                                L = PeekByte(WZ);
                                                L &= 0xDF;
                                                PokeByte(WZ, L);
                                                break;
                                            case 0xAE:
                                                // Opcode:    RES 5,(IY$x) 
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IY+n]=[IY+n]&{~2^b}
                                                x = PeekByte(WZ);
                                                x &= 0xDF;
                                                PokeByte(WZ, x);
                                                break;
                                            case 0xAF:
                                                // Opcode:    LD A,RES 5,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: A=[IY+n] / [IY+n]=[IY+n]&{~2^b} / [IY+n]=A
                                                A = PeekByte(WZ);
                                                A &= 0xDF;
                                                PokeByte(WZ, A);
                                                break;
                                            case 0xB0:
                                                // Opcode:    LD B,RES 6,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: B=[IY+n] / [IY+n]=[IY+n]&{~2^b} / [IY+n]=B
                                                B = PeekByte(WZ);
                                                B &= 0xBF;
                                                PokeByte(WZ, B);
                                                break;
                                            case 0xB1:
                                                // Opcode:    LD C,RES 6,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: C=[IY+n] / [IY+n]=[IY+n]&{~2^b} / [IY+n]=C
                                                C = PeekByte(WZ);
                                                C &= 0xBF;
                                                PokeByte(WZ, C);
                                                break;
                                            case 0xB2:
                                                // Opcode:    LD D,RES 6,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: D=[IY+n] / [IY+n]=[IY+n]&{~2^b} / [IY+n]=D
                                                D = PeekByte(WZ);
                                                D &= 0xBF;
                                                PokeByte(WZ, D);
                                                break;
                                            case 0xB3:
                                                // Opcode:    LD E,RES 6,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: E=[IY+n] / [IY+n]=[IY+n]&{~2^b} / [IY+n]=E
                                                E = PeekByte(WZ);
                                                E &= 0xBF;
                                                PokeByte(WZ, E);
                                                break;
                                            case 0xB4:
                                                // Opcode:    LD H,RES 6,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: H=[IY+n] / [IY+n]=[IY+n]&{~2^b} / [IY+n]=H
                                                H = PeekByte(WZ);
                                                H &= 0xBF;
                                                PokeByte(WZ, H);
                                                break;
                                            case 0xB5:
                                                // Opcode:    LD L,RES 6,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: L=[IY+n] / [IY+n]=[IY+n]&{~2^b} / [IY+n]=L
                                                L = PeekByte(WZ);
                                                L &= 0xBF;
                                                PokeByte(WZ, L);
                                                break;
                                            case 0xB6:
                                                // Opcode:    RES 6,(IY$x) 
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IY+n]=[IY+n]&{~2^b}
                                                x = PeekByte(WZ);
                                                x &= 0xBF;
                                                PokeByte(WZ, x);
                                                break;
                                            case 0xB7:
                                                // Opcode:    LD A,RES 6,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: A=[IY+n] / [IY+n]=[IY+n]&{~2^b} / [IY+n]=A
                                                A = PeekByte(WZ);
                                                A &= 0xBF;
                                                PokeByte(WZ, A);
                                                break;
                                            case 0xB8:
                                                // Opcode:    LD B,RES 7,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: B=[IY+n] / [IY+n]=[IY+n]&{~2^b} / [IY+n]=B
                                                B = PeekByte(WZ);
                                                B &= 0x7F;
                                                PokeByte(WZ, B);
                                                break;
                                            case 0xB9:
                                                // Opcode:    LD C,RES 7,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: C=[IY+n] / [IY+n]=[IY+n]&{~2^b} / [IY+n]=C
                                                C = PeekByte(WZ);
                                                C &= 0x7F;
                                                PokeByte(WZ, C);
                                                break;
                                            case 0xBA:
                                                // Opcode:    LD D,RES 7,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: D=[IY+n] / [IY+n]=[IY+n]&{~2^b} / [IY+n]=D
                                                D = PeekByte(WZ);
                                                D &= 0x7F;
                                                PokeByte(WZ, D);
                                                break;
                                            case 0xBB:
                                                // Opcode:    LD E,RES 7,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: E=[IY+n] / [IY+n]=[IY+n]&{~2^b} / [IY+n]=E
                                                E = PeekByte(WZ);
                                                E &= 0x7F;
                                                PokeByte(WZ, E);
                                                break;
                                            case 0xBC:
                                                // Opcode:    LD H,RES 7,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: H=[IY+n] / [IY+n]=[IY+n]&{~2^b} / [IY+n]=H
                                                H = PeekByte(WZ);
                                                H &= 0x7F;
                                                PokeByte(WZ, H);
                                                break;
                                            case 0xBD:
                                                // Opcode:    LD L,RES 7,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: L=[IY+n] / [IY+n]=[IY+n]&{~2^b} / [IY+n]=L
                                                L = PeekByte(WZ);
                                                L &= 0x7F;
                                                PokeByte(WZ, L);
                                                break;
                                            case 0xBE:
                                                // Opcode:    RES 7,(IY$x) 
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IY+n]=[IY+n]&{~2^b}
                                                x = PeekByte(WZ);
                                                x &= 0x7F;
                                                PokeByte(WZ, x);
                                                break;
                                            case 0xBF:
                                                // Opcode:    LD A,RES 7,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: A=[IY+n] / [IY+n]=[IY+n]&{~2^b} / [IY+n]=A
                                                A = PeekByte(WZ);
                                                A &= 0x7F;
                                                PokeByte(WZ, A);
                                                break;
                                            case 0xC0:
                                                // Opcode:    LD B,SET 0,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: B=[IY+n] / [IY+n]=[IY+n]v{2^b} / [IY+n]=B
                                                B = PeekByte(WZ);
                                                B |= 0x01;
                                                PokeByte(WZ, B);
                                                break;
                                            case 0xC1:
                                                // Opcode:    LD C,SET 0,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: C=[IY+n] / [IY+n]=[IY+n]v{2^b} / [IY+n]=C
                                                C = PeekByte(WZ);
                                                C |= 0x01;
                                                PokeByte(WZ, C);
                                                break;
                                            case 0xC2:
                                                // Opcode:    LD D,SET 0,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: D=[IY+n] / [IY+n]=[IY+n]v{2^b} / [IY+n]=D
                                                D = PeekByte(WZ);
                                                D |= 0x01;
                                                PokeByte(WZ, D);
                                                break;
                                            case 0xC3:
                                                // Opcode:    LD E,SET 0,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: E=[IY+n] / [IY+n]=[IY+n]v{2^b} / [IY+n]=E
                                                E = PeekByte(WZ);
                                                E |= 0x01;
                                                PokeByte(WZ, E);
                                                break;
                                            case 0xC4:
                                                // Opcode:    LD H,SET 0,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: H=[IY+n] / [IY+n]=[IY+n]v{2^b} / [IY+n]=H
                                                H = PeekByte(WZ);
                                                H |= 0x01;
                                                PokeByte(WZ, H);
                                                break;
                                            case 0xC5:
                                                // Opcode:    LD L,SET 0,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: L=[IY+n] / [IY+n]=[IY+n]v{2^b} / [IY+n]=L
                                                L = PeekByte(WZ);
                                                L |= 0x01;
                                                PokeByte(WZ, L);
                                                break;
                                            case 0xC6:
                                                // Opcode:    SET 0,(IY$x) 
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IY+n]=[IY+n]v{2^b}
                                                x = PeekByte(WZ);
                                                x |= 0x01;
                                                PokeByte(WZ, x);
                                                break;
                                            case 0xC7:
                                                // Opcode:    LD A,SET 0,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: A=[IY+n] / [IY+n]=[IY+n]v{2^b} / [IY+n]=A
                                                A = PeekByte(WZ);
                                                A |= 0x01;
                                                PokeByte(WZ, A);
                                                break;
                                            case 0xC8:
                                                // Opcode:    LD B,SET 1,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: B=[IY+n] / [IY+n]=[IY+n]v{2^b} / [IY+n]=B
                                                B = PeekByte(WZ);
                                                B |= 0x02;
                                                PokeByte(WZ, B);
                                                break;
                                            case 0xC9:
                                                // Opcode:    LD C,SET 1,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: C=[IY+n] / [IY+n]=[IY+n]v{2^b} / [IY+n]=C
                                                C = PeekByte(WZ);
                                                C |= 0x02;
                                                PokeByte(WZ, C);
                                                break;
                                            case 0xCA:
                                                // Opcode:    LD D,SET 1,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: D=[IY+n] / [IY+n]=[IY+n]v{2^b} / [IY+n]=D
                                                D = PeekByte(WZ);
                                                D |= 0x02;
                                                PokeByte(WZ, D);
                                                break;
                                            case 0xCB:
                                                // Opcode:    LD E,SET 1,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: E=[IY+n] / [IY+n]=[IY+n]v{2^b} / [IY+n]=E
                                                E = PeekByte(WZ);
                                                E |= 0x02;
                                                PokeByte(WZ, E);
                                                break;
                                            case 0xCC:
                                                // Opcode:    LD H,SET 1,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: H=[IY+n] / [IY+n]=[IY+n]v{2^b} / [IY+n]=H
                                                H = PeekByte(WZ);
                                                H |= 0x02;
                                                PokeByte(WZ, H);
                                                break;
                                            case 0xCD:
                                                // Opcode:    LD L,SET 1,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: L=[IY+n] / [IY+n]=[IY+n]v{2^b} / [IY+n]=L
                                                L = PeekByte(WZ);
                                                L |= 0x02;
                                                PokeByte(WZ, L);
                                                break;
                                            case 0xCE:
                                                // Opcode:    SET 1,(IY$x) 
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IY+n]=[IY+n]v{2^b}
                                                x = PeekByte(WZ);
                                                x |= 0x02;
                                                PokeByte(WZ, x);
                                                break;
                                            case 0xCF:
                                                // Opcode:    LD A,SET 1,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: A=[IY+n] / [IY+n]=[IY+n]v{2^b} / [IY+n]=A
                                                A = PeekByte(WZ);
                                                A |= 0x02;
                                                PokeByte(WZ, A);
                                                break;
                                            case 0xD0:
                                                // Opcode:    LD B,SET 2,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: B=[IY+n] / [IY+n]=[IY+n]v{2^b} / [IY+n]=B
                                                B = PeekByte(WZ);
                                                B |= 0x04;
                                                PokeByte(WZ, B);
                                                break;
                                            case 0xD1:
                                                // Opcode:    LD C,SET 2,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: C=[IY+n] / [IY+n]=[IY+n]v{2^b} / [IY+n]=C
                                                C = PeekByte(WZ);
                                                C |= 0x04;
                                                PokeByte(WZ, C);
                                                break;
                                            case 0xD2:
                                                // Opcode:    LD D,SET 2,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: D=[IY+n] / [IY+n]=[IY+n]v{2^b} / [IY+n]=D
                                                D = PeekByte(WZ);
                                                D |= 0x04;
                                                PokeByte(WZ, D);
                                                break;
                                            case 0xD3:
                                                // Opcode:    LD E,SET 2,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: E=[IY+n] / [IY+n]=[IY+n]v{2^b} / [IY+n]=E
                                                E = PeekByte(WZ);
                                                E |= 0x04;
                                                PokeByte(WZ, E);
                                                break;
                                            case 0xD4:
                                                // Opcode:    LD H,SET 2,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: H=[IY+n] / [IY+n]=[IY+n]v{2^b} / [IY+n]=H
                                                H = PeekByte(WZ);
                                                H |= 0x04;
                                                PokeByte(WZ, H);
                                                break;
                                            case 0xD5:
                                                // Opcode:    LD L,SET 2,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: L=[IY+n] / [IY+n]=[IY+n]v{2^b} / [IY+n]=L
                                                L = PeekByte(WZ);
                                                L |= 0x04;
                                                PokeByte(WZ, L);
                                                break;
                                            case 0xD6:
                                                // Opcode:    SET 2,(IY$x) 
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IY+n]=[IY+n]v{2^b}
                                                x = PeekByte(WZ);
                                                x |= 0x04;
                                                PokeByte(WZ, x);
                                                break;
                                            case 0xD7:
                                                // Opcode:    LD A,SET 2,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: A=[IY+n] / [IY+n]=[IY+n]v{2^b} / [IY+n]=A
                                                A = PeekByte(WZ);
                                                A |= 0x04;
                                                PokeByte(WZ, A);
                                                break;
                                            case 0xD8:
                                                // Opcode:    LD B,SET 3,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: B=[IY+n] / [IY+n]=[IY+n]v{2^b} / [IY+n]=B
                                                B = PeekByte(WZ);
                                                B |= 0x08;
                                                PokeByte(WZ, B);
                                                break;
                                            case 0xD9:
                                                // Opcode:    LD C,SET 3,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: C=[IY+n] / [IY+n]=[IY+n]v{2^b} / [IY+n]=C
                                                C = PeekByte(WZ);
                                                C |= 0x08;
                                                PokeByte(WZ, C);
                                                break;
                                            case 0xDA:
                                                // Opcode:    LD D,SET 3,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: D=[IY+n] / [IY+n]=[IY+n]v{2^b} / [IY+n]=D
                                                D = PeekByte(WZ);
                                                D |= 0x08;
                                                PokeByte(WZ, D);
                                                break;
                                            case 0xDB:
                                                // Opcode:    LD E,SET 3,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: E=[IY+n] / [IY+n]=[IY+n]v{2^b} / [IY+n]=E
                                                E = PeekByte(WZ);
                                                E |= 0x08;
                                                PokeByte(WZ, E);
                                                break;
                                            case 0xDC:
                                                // Opcode:    LD H,SET 3,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: H=[IY+n] / [IY+n]=[IY+n]v{2^b} / [IY+n]=H
                                                H = PeekByte(WZ);
                                                H |= 0x08;
                                                PokeByte(WZ, H);
                                                break;
                                            case 0xDD:
                                                // Opcode:    LD L,SET 3,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: L=[IY+n] / [IY+n]=[IY+n]v{2^b} / [IY+n]=L
                                                L = PeekByte(WZ);
                                                L |= 0x08;
                                                PokeByte(WZ, L);
                                                break;
                                            case 0xDE:
                                                // Opcode:    SET 3,(IY$x) 
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IY+n]=[IY+n]v{2^b}
                                                x = PeekByte(WZ);
                                                x |= 0x08;
                                                PokeByte(WZ, x);
                                                break;
                                            case 0xDF:
                                                // Opcode:    LD A,SET 3,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: A=[IY+n] / [IY+n]=[IY+n]v{2^b} / [IY+n]=A
                                                A = PeekByte(WZ);
                                                A |= 0x08;
                                                PokeByte(WZ, A);
                                                break;
                                            case 0xE0:
                                                // Opcode:    LD B,SET 4,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: B=[IY+n] / [IY+n]=[IY+n]v{2^b} / [IY+n]=B
                                                B = PeekByte(WZ);
                                                B |= 0x10;
                                                PokeByte(WZ, B);
                                                break;
                                            case 0xE1:
                                                // Opcode:    LD C,SET 4,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: C=[IY+n] / [IY+n]=[IY+n]v{2^b} / [IY+n]=C
                                                C = PeekByte(WZ);
                                                C |= 0x10;
                                                PokeByte(WZ, C);
                                                break;
                                            case 0xE2:
                                                // Opcode:    LD D,SET 4,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: D=[IY+n] / [IY+n]=[IY+n]v{2^b} / [IY+n]=D
                                                D = PeekByte(WZ);
                                                D |= 0x10;
                                                PokeByte(WZ, D);
                                                break;
                                            case 0xE3:
                                                // Opcode:    LD E,SET 4,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: E=[IY+n] / [IY+n]=[IY+n]v{2^b} / [IY+n]=E
                                                E = PeekByte(WZ);
                                                E |= 0x10;
                                                PokeByte(WZ, E);
                                                break;
                                            case 0xE4:
                                                // Opcode:    LD H,SET 4,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: H=[IY+n] / [IY+n]=[IY+n]v{2^b} / [IY+n]=H
                                                H = PeekByte(WZ);
                                                H |= 0x10;
                                                PokeByte(WZ, H);
                                                break;
                                            case 0xE5:
                                                // Opcode:    LD L,SET 4,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: L=[IY+n] / [IY+n]=[IY+n]v{2^b} / [IY+n]=L
                                                L = PeekByte(WZ);
                                                L |= 0x10;
                                                PokeByte(WZ, L);
                                                break;
                                            case 0xE6:
                                                // Opcode:    SET 4,(IY$x) 
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IY+n]=[IY+n]v{2^b}
                                                x = PeekByte(WZ);
                                                x |= 0x10;
                                                PokeByte(WZ, x);
                                                break;
                                            case 0xE7:
                                                // Opcode:    LD A,SET 4,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: A=[IY+n] / [IY+n]=[IY+n]v{2^b} / [IY+n]=A
                                                A = PeekByte(WZ);
                                                A |= 0x10;
                                                PokeByte(WZ, A);
                                                break;
                                            case 0xE8:
                                                // Opcode:    LD B,SET 5,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: B=[IY+n] / [IY+n]=[IY+n]v{2^b} / [IY+n]=B
                                                B = PeekByte(WZ);
                                                B |= 0x20;
                                                PokeByte(WZ, B);
                                                break;
                                            case 0xE9:
                                                // Opcode:    LD C,SET 5,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: C=[IY+n] / [IY+n]=[IY+n]v{2^b} / [IY+n]=C
                                                C = PeekByte(WZ);
                                                C |= 0x20;
                                                PokeByte(WZ, C);
                                                break;
                                            case 0xEA:
                                                // Opcode:    LD D,SET 5,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: D=[IY+n] / [IY+n]=[IY+n]v{2^b} / [IY+n]=D
                                                D = PeekByte(WZ);
                                                D |= 0x20;
                                                PokeByte(WZ, D);
                                                break;
                                            case 0xEB:
                                                // Opcode:    LD E,SET 5,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: E=[IY+n] / [IY+n]=[IY+n]v{2^b} / [IY+n]=E
                                                E = PeekByte(WZ);
                                                E |= 0x20;
                                                PokeByte(WZ, E);
                                                break;
                                            case 0xEC:
                                                // Opcode:    LD H,SET 5,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: H=[IY+n] / [IY+n]=[IY+n]v{2^b} / [IY+n]=H
                                                H = PeekByte(WZ);
                                                H |= 0x20;
                                                PokeByte(WZ, H);
                                                break;
                                            case 0xED:
                                                // Opcode:    LD L,SET 5,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: L=[IY+n] / [IY+n]=[IY+n]v{2^b} / [IY+n]=L
                                                L = PeekByte(WZ);
                                                L |= 0x20;
                                                PokeByte(WZ, L);
                                                break;
                                            case 0xEE:
                                                // Opcode:    SET 5,(IY$x) 
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IY+n]=[IY+n]v{2^b}
                                                x = PeekByte(WZ);
                                                x |= 0x20;
                                                PokeByte(WZ, x);
                                                break;
                                            case 0xEF:
                                                // Opcode:    LD A,SET 5,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: A=[IY+n] / [IY+n]=[IY+n]v{2^b} / [IY+n]=A
                                                A = PeekByte(WZ);
                                                A |= 0x20;
                                                PokeByte(WZ, A);
                                                break;
                                            case 0xF0:
                                                // Opcode:    LD B,SET 6,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: B=[IY+n] / [IY+n]=[IY+n]v{2^b} / [IY+n]=B
                                                B = PeekByte(WZ);
                                                B |= 0x40;
                                                PokeByte(WZ, B);
                                                break;
                                            case 0xF1:
                                                // Opcode:    LD C,SET 6,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: C=[IY+n] / [IY+n]=[IY+n]v{2^b} / [IY+n]=C
                                                C = PeekByte(WZ);
                                                C |= 0x40;
                                                PokeByte(WZ, C);
                                                break;
                                            case 0xF2:
                                                // Opcode:    LD D,SET 6,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: D=[IY+n] / [IY+n]=[IY+n]v{2^b} / [IY+n]=D
                                                D = PeekByte(WZ);
                                                D |= 0x40;
                                                PokeByte(WZ, D);
                                                break;
                                            case 0xF3:
                                                // Opcode:    LD E,SET 6,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: E=[IY+n] / [IY+n]=[IY+n]v{2^b} / [IY+n]=E
                                                E = PeekByte(WZ);
                                                E |= 0x40;
                                                PokeByte(WZ, E);
                                                break;
                                            case 0xF4:
                                                // Opcode:    LD H,SET 6,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: H=[IY+n] / [IY+n]=[IY+n]v{2^b} / [IY+n]=H
                                                H = PeekByte(WZ);
                                                H |= 0x40;
                                                PokeByte(WZ, H);
                                                break;
                                            case 0xF5:
                                                // Opcode:    LD L,SET 6,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: L=[IY+n] / [IY+n]=[IY+n]v{2^b} / [IY+n]=L
                                                L = PeekByte(WZ);
                                                L |= 0x40;
                                                PokeByte(WZ, L);
                                                break;
                                            case 0xF6:
                                                // Opcode:    SET 6,(IY$x) 
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IY+n]=[IY+n]v{2^b}
                                                x = PeekByte(WZ);
                                                x |= 0x40;
                                                PokeByte(WZ, x);
                                                break;
                                            case 0xF7:
                                                // Opcode:    LD A,SET 6,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: A=[IY+n] / [IY+n]=[IY+n]v{2^b} / [IY+n]=A
                                                A = PeekByte(WZ);
                                                A |= 0x40;
                                                PokeByte(WZ, A);
                                                break;
                                            case 0xF8:
                                                // Opcode:    LD B,SET 7,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: B=[IY+n] / [IY+n]=[IY+n]v{2^b} / [IY+n]=B
                                                B = PeekByte(WZ);
                                                B |= 0x80;
                                                PokeByte(WZ, B);
                                                break;
                                            case 0xF9:
                                                // Opcode:    LD C,SET 7,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: C=[IY+n] / [IY+n]=[IY+n]v{2^b} / [IY+n]=C
                                                C = PeekByte(WZ);
                                                C |= 0x80;
                                                PokeByte(WZ, C);
                                                break;
                                            case 0xFA:
                                                // Opcode:    LD D,SET 7,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: D=[IY+n] / [IY+n]=[IY+n]v{2^b} / [IY+n]=D
                                                D = PeekByte(WZ);
                                                D |= 0x80;
                                                PokeByte(WZ, D);
                                                break;
                                            case 0xFB:
                                                // Opcode:    LD E,SET 7,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: E=[IY+n] / [IY+n]=[IY+n]v{2^b} / [IY+n]=E
                                                E = PeekByte(WZ);
                                                E |= 0x80;
                                                PokeByte(WZ, E);
                                                break;
                                            case 0xFC:
                                                // Opcode:    LD H,SET 7,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: H=[IY+n] / [IY+n]=[IY+n]v{2^b} / [IY+n]=H
                                                H = PeekByte(WZ);
                                                H |= 0x80;
                                                PokeByte(WZ, H);
                                                break;
                                            case 0xFD:
                                                // Opcode:    LD L,SET 7,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: L=[IY+n] / [IY+n]=[IY+n]v{2^b} / [IY+n]=L
                                                L = PeekByte(WZ);
                                                L |= 0x80;
                                                PokeByte(WZ, L);
                                                break;
                                            case 0xFE:
                                                // Opcode:    SET 7,(IY$x) 
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: [IY+n]=[IY+n]v{2^b}
                                                x = PeekByte(WZ);
                                                x |= 0x80;
                                                PokeByte(WZ, x);
                                                break;
                                            case 0xFF:
                                                // Opcode:    LD A,SET 7,(IY$x)  (Undocumented)
                                                // Attributes:Indexed
                                                // TStates:   23
                                                // MCycles:   M0, 4 T States - Op Code Fetch
                                                //            M1, 4 T States - Op Code Fetch
                                                //            M2, 3 T States - Operand Data Read
                                                //            M3, 5 T States - Internal CPU Operation
                                                //            M4, 4 T States - Memory Read
                                                //            M5, 3 T States - Memory Write
                                                // MCycles2:  pc:4,pc+1:4,pc+2:3,pc+3:3,pc+3:1 x 2,ii+n:3,ii+n:1,ii+n(write):3
                                                // MemPtr:    MEMPTR = INDEX+d
                                                // Operation: A=[IY+n] / [IY+n]=[IY+n]v{2^b} / [IY+n]=A
                                                A = PeekByte(WZ);
                                                A |= 0x80;
                                                PokeByte(WZ, A);
                                                break;
                                        }
                                    }
                                    break;
                                #endregion  AfterCB
                                case 0xE1:
                                    // Opcode:    POP IY
                                    // TStates:   14
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    //            M2, 3 T States - Stack Read of High Byte
                                    //            M3, 3 T States - Stack Read of Low Byte
                                    // MCycles2:  pc:4,sp:3,sp+1:3
                                    // Operation: IY=[SP,SP+1],SP+,SP+
                                    IY = (PeekByte(SP++) + (PeekByte(SP++) << 8));
                                    break;
                                case 0xE3:
                                    // Opcode:    EX (SP),IY
                                    // TStates:   23
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    //            M2, 3 T States - Stack Read of Low Byte
                                    //            M3, 4 T States - Stack Read of High Byte
                                    //            M4, 3 T States - Stack Write of High Byte
                                    //            M5, 5 T States - Stack Write of Low byte
                                    // MCycles2:  pc:4,pc+1:4,sp:3,sp+1:4,sp(write):3,sp+1(write):5
                                    // Operation: [SP]<->IY
                                    WZ = IY;
                                    IY = (PeekByte(SP++) + (PeekByte(SP) << 8));
                                    AddCycles(SP, 1);
                                    PokeByte((SP--) & 0xffff, WZ >> 8);
                                    PokeByte(SP, WZ & 0xff);
                                    AddCycles(SP, 2);
                                    WZ = IY;
                                    break;
                                case 0xE5:
                                    // Opcode:    PUSH IY
                                    // TStates:   15
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 5 T States - Op Code Fetch
                                    //            M2, 3 T States - Stack Write of High Byte
                                    //            M3, 3 T States - Stack Write of Low byte
                                    // MCycles2:  pc:5,sp-1:3,sp-2:3
                                    // Operation: -SP,-SP,[SP,SP+1]=IY
                                    AddCycles(IR, 1);
                                    PokeByte(--SP, IY >> 8);
                                    PokeByte(--SP, IY & 0xff);
                                    break;
                                case 0xE9:
                                    // Opcode:    JP (IY) 
                                    // Attributes:Branch, Terminal
                                    // TStates:   8
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 4 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1|4
                                    // Operation: PC=IY
                                    PC = IY;
                                    // Pass control to the Virtual function Jump
                                    Jump(Opcode, PreExecutePC);

                                    break;
                                case 0xF9:
                                    // Opcode:    LD SP,IY
                                    // TStates:   10
                                    // MCycles:   M0, 4 T States - Op Code Fetch
                                    //            M1, 6 T States - Op Code Fetch
                                    // MCycles2:  pc:4,pc+1:6
                                    // Operation: SP=IY
                                    AddCycles(IR, 2);
                                    SP = IY;
                                    break;
                                default:
                                    goto Decoder;
                            }
                        }
                        break;
                    #endregion  AfterFD
                    case 0xFE:
                        // Opcode:    CP $b
                        // Attributes:Byte, Direct
                        // TStates:   7
                        // MCycles:   M0, 4 T States - Op Code Fetch
                        //            M1, 3 T States - Operand Data Read
                        // MCycles2:  pc:4,pc+1:3
                        // Flags:     SZ*H*VNC
                        //            * CP is just SUB with the result thrown away
                        //            * F5 and F3 are copied from the operand not the result
                        // Operation: = A - N
                        y = PeekByte(PC++);
                        x = (A - y) & 0xff;
                        fs = x & FS;
                        fz = (x & 0xff) == 0 ? FZ : 0;
                        f5 = y & F5;
                        fh = (((A & 0x0f) - (y & 0x0f)) & 0x10) != 0 ? FH : 0;
                        f3 = y & F3;
                        fp = (((A ^ y) & (A ^ x)) & 0x80) != 0 ? FV : 0;
                        fn = FN;
                        fc = ((A - y) & 0x100) != 0 ? FC : 0;
                        break;
                    case 0xFF:
                        // Opcode:    RST 38H
                        // Attributes:Restart
                        // TStates:   11
                        // MCycles:   M0, 5 T States - Op Code Fetch
                        //            M1, 3 T States - Stack Write of High Byte
                        //            M2, 3 T States - Stack Write of Low byte
                        // MCycles2:  pc:5,sp-1:3,sp-2:3
                        // MemPtr:    MEMPTR = addr
                        // Operation: -SP,-SP,[SP+1,SP] = PC,PC = 38
                        WZ = 0x38;
                        AddCycles(IR, 1);
                        // Pass control to the Virtual function Restart
                        Restart(Opcode, PC);
                        PokeByte(--SP, PC >> 8);
                        PokeByte(--SP, PC & 0xff);
                        PC = WZ;
                        break;

                        #endregion Decoder
                }
                // Post Decode operations
                // Returned from run from assembler
                if (PC == returnFromRunInEmulator)
                {
                    int eCycles = TotalCycles - PreExecuteCycles;
                    RunInEmulatorTSTates += eCycles;
                    RunInIDEStopwatch.Stop();
                    // Restore State
                    AF = af;
                    BC = bc;
                    DE = de;
                    HL = hl;
                    IX = ix;
                    IY = iy;
                    AF_ = af_;
                    BC_ = bc_;
                    DE_ = de_;
                    HL_ = hl_;
                    // Restore PC
                    PC = returnFromRunInEmulator;
                    // Enable Interrupts
                    iff1 = iff2 = 1;
                    EIExecuted = 2;
                    RunInIDEStopwatch.Stop();
                    // Signal done run from assembler
                    returnFromRunInEmulator = -1;
                    ReturnFromRunInIDE?.Invoke(this, EventArgs.Empty);
                    //IDE.Show();
                    //IDE.Focus();
                    //IDE.BringToFront();
                    SendToBack();
                    //Globals.EnsureVisible(IDE.Handle);
                }
                // -- Load/Save ROM routines -----------------------------------------------------------------------------------------------
                // Hook into the ROM Load Routine
                if (PC == 0x56B)
                {
                    if (TAPFileFastLoader())
                        AfterTapeLoad = true;
                }
                // Hook into the ROM Save Routine
                if (PC == 0x04d0)
                    TAPFileSave();
                // -------------------------------------------------------------------------------------------------------------------------
                // Calculate how many Cycles we just executed
                ExecutedCycles = TotalCycles - PreExecuteCycles;
                RunInEmulatorTSTates += ExecutedCycles;
                //if (Logging)
                //Log();
                //else
                //{
                //if (sw != null)
                //{
                //sw.Flush();
                //sw.Close();
                //sw.Dispose();
                //sw = null;
                //}
                //}
                if (TotalCycles < framelength)
                    AfterExecute();
                // Signal stop running if we are single stepping
                if (Stepping) Running = false;
                // Did any of the previous checks determine that we should stop running?
                if (!Running)
                {
                    // We've stopped completely
                    if (Stopped)
                        return;
                    Stopped = true;
                    // Still in the middle of a frame
                    if (TotalCycles < framelength)
                        return;
                }
            }
            TotalCycles -= framelength;
            ProcessInterrupt();
            FrameCount++;
            AfterExecute();
            FrameComplete();
        }
        #region Registers and Variables
        public event EventHandler CallEventHandler;
        public event EventHandler ReturnEventHandler;
        public event EventHandler JumpEventHandler;
        public event EventHandler JumpRelativeEventHandler;
        public event EventHandler DjnzEventHandler;
        public event EventHandler RestartEventHandler;
        public event EventHandler ResetCompleteEventHandler;
        public event EventHandler FrameCompleteEventHandler;

        public event EventHandler Closing;
        public event EventHandler InterruptEventHandler;
        public event EventHandler BeforeExecuteEventHandler;
        public event EventHandler AfterExecuteEventHandler;
        public event EventHandler ResetEventHandler;
        public event EventHandler StartResetEventHandler;
        public event EventHandler EndResetEventHandler;

        public int LastBorder;
        public Brush OSDBrush = Brushes.Black;
        public Stack<int> CallStack;
        public bool PerformingReset = false;
        public bool Logging = false;
        public int PreExecutePC;
        public int FrameCount;
        public bool AfterTapeLoad;
        public int InterruptCount = 0;
        public int ExecutedCycles;
        public int PreExecuteCycles;
        public Font Consolas = new Font("Consolas", 18f);
        public bool Stopped = false;
        public bool Running = false;
        public bool Stepping = false;

        private int iff1, iff2;

        const int FS = 0x80;
        const int FZ = 0x40;
        const int F5 = 0x20;
        const int FH = 0x10;
        const int F3 = 0x08;
        const int FP = 0x04; const int FV = 0x04;
        const int FN = 0x02;
        const int FC = 0x01;

        private int i, r;
        private int im;
        private int sp, pc;


        int wz;
        public int WZ
        {
            get { return wz & 0xffff; }
            set
            {
                wz = value & 0xffff;
            }
        }

        private int r7;
        public int R7
        {
            get { return r7; }
            set { r7 = value & 0x80; R = value; }
        }
        public int I { get { return i & 0xff; } set { i = value & 0xff; } }
        public int R { get { return (r7 | (r & 0x7f)); } set { r = value & 0x7f; } }

        public int IR
        {
            get { return ((i << 8) & 0xff00 | R & 0xff) & 0xffff; }
            set { i = (value >> 8) & 0xff; R = value & 0xff; }
        }

        public int SP { get { return sp & 0xffff; } set { sp = value & 0xffff; } }
        public int PC { get { return pc & 0xffff; } set { pc = value & 0xffff; } }

        public int AF_ { get; set; }
        public int BC_ { get; set; }
        public int DE_ { get; set; }
        public int HL_ { get; set; }

        private int a;
        private int fs, fz, f5, fh, f3, fp, fn, fc;

        public int FlagFS { get { return fs >> 7; } }
        public int FlagFZ { get { return fz >> 6; } }
        public int FlagF5 { get { return f5 >> 5; } }
        public int FlagFH { get { return fh >> 4; } }
        public int FlagF3 { get { return f3 >> 3; } }
        public int FlagFP { get { return fp >> 2; } }
        public int FlagFN { get { return fn >> 1; } }
        public int FlagFC { get { return fc; } }

        public int A { get { return a; } set { a = value & 0xff; } }
        public int F
        {
            get { return (fs | fz | f5 | fh | f3 | fp | fn | fc) & 0xff; }
            set
            {
                fs = value & FS;
                fz = value & FZ;
                f5 = value & F5;
                fh = value & FH;
                f3 = value & F3;
                fp = value & FP;
                fn = value & FN;
                fc = value & FC;
            }
        }
        public int AF
        {
            get
            {
                return (A << 8) | F;
            }
            set
            {
                A = (value & 0xFF00) >> 8;
                F = (value & 0xff);
            }
        }

        int b, c;
        public int B { get { return (b & 0xff); } set { b = (value & 0xff); } }
        public int C { get { return (c & 0xff); } set { c = (value & 0xff); } }
        public int BC { get { return (B << 8) | C; } set { B = (value >> 8); C = value; } }

        int d, e;
        public int D { get { return (d & 0xff); } set { d = (value & 0xff); } }
        public int E { get { return (e & 0xff); } set { e = (value & 0xff); } }
        public int DE { get { return (D << 8) | E; } set { D = (value >> 8); E = value; } }

        int h, l;
        public int H { get { return (h & 0xff); } set { h = (value & 0xff); } }
        public int L { get { return (l & 0xff); } set { l = (value & 0xff); } }
        public int HL { get { return (H << 8) | L; } set { H = (value >> 8); L = value; } }

        int ixh, ixl;
        public int IXH { get { return (ixh & 0xff); } set { ixh = (value & 0xff); } }
        public int IXL { get { return (ixl & 0xff); } set { ixl = (value & 0xff); } }
        public int IX { get { return (IXH << 8) | IXL; } set { IXH = (value >> 8); IXL = value; } }

        int iyh, iyl;
        public int IYH { get { return (iyh & 0xff); } set { iyh = (value & 0xff); } }
        public int IYL { get { return (iyl & 0xff); } set { iyl = (value & 0xff); } }
        public int IY { get { return (IYH << 8) | IYL; } set { IYH = (value >> 8); IYL = value; } }

        public int IM { get { return im; } set { im = value; } }
        public int IFF1 { get { return iff1; } set { iff1 = value; } }
        public int IFF2 { get { return iff2; } set { iff2 = value; } }

        public bool HaltCycle;
        public int Opcode;
        public int TotalCycles { get { return totalCycles; } set { totalCycles = value; } }
        int totalCycles;

        #endregion Registers and Variables
        #region IMemory Implementation
        public byte[] Memory = new byte[0x10000];
        public int this[int index] { get { return Memory[index]; } set { Memory[index] = (byte)value; } }

        public event MemoryChangedEventHandler MemoryChanged;

        public void Load(string filename, int startaddress)
        {
            Load(File.ReadAllBytes(filename), startaddress);
        }

        public void Load(byte[] data, int startaddress)
        {
            for (int i = 0; i < data.Length; i++)
                Memory[startaddress++] = data[i];
        }

        public int Length { get { return Memory.Length; } }
        #endregion IMemory Implementation
        #region Virtual Functions
        public virtual void LoadBlockBegin()
        {
        }
        public virtual void LoadBlockComplete()
        {
        }

        public virtual void Interrupt()
        {
            InterruptEventHandler?.Invoke(this, EventArgs.Empty);

        }
        public virtual void Reset(bool hard)
        {
            PerformingReset = true;
            ResetEventHandler?.Invoke(this, EventArgs.Empty);
        }
        public virtual void ResetComplete()
        {
            PerformingReset = false;
            ResetCompleteEventHandler?.Invoke(this, EventArgs.Empty);
        }
        public virtual void Call(int opcode, int address)
        {
            // Track the return address
            CallStack.Push(address);
        }
        public virtual void Return(int opcode, int address)
        {
            // Remove the return address
            if (CallStack.Count > 0) CallStack.Pop();
        }
        public virtual void Djnz(int opcode, int address)
        {
            DjnzEventHandler?.Invoke(this, EventArgs.Empty);
        }
        public virtual void JumpRelative(int opcode, int address)
        {
            JumpRelativeEventHandler?.Invoke(this, EventArgs.Empty);
        }
        public virtual void Jump(int opcode, int address)
        {
            JumpEventHandler?.Invoke(this, EventArgs.Empty);
        }
        public virtual void Restart(int opcode, int address)
        {
            // Track the return address
            CallStack.Push(address);
        }
        public virtual bool TAPFileFastLoader() { return true; }
        public virtual void TAPFileSave() { }
        public virtual void CheckLoading() { }
        public virtual void FrameComplete()
        {
            FrameCompleteEventHandler?.Invoke(this, EventArgs.Empty);
            CalculateFrameRate();
        }
        public virtual void BeforeExecute()
        {
            BeforeExecuteEventHandler?.Invoke(this, EventArgs.Empty);
        }
        public virtual void AfterExecute()
        {
            AfterExecuteEventHandler?.Invoke(this, EventArgs.Empty);
        }
        public virtual int FetchOpcode()
        {
            TotalCycles += 4;
            PC++;
            R++;
            return Memory[(PC - 1) & 0xffff];
        }
        public virtual void AddCycles(int address, int count)
        {
            totalCycles += count;
        }
        public virtual int PeekByte(int address)
        {
            AddCycles(address, 3);
            return Memory[address];
        }
        public virtual int ReadByte(int address)
        {
            return Memory[address];
        }
        public virtual void PokeByte(int address, int value)
        {
            Memory[address] = (byte)value;
        }
        public virtual void WritePort(int port, int value) { }
        public virtual int ReadPort(int port) { return 0xff; }
        #endregion Virtual Functions

        #region ALU
        int EIExecuted;
        public int GetByteAtIndex(int xx)
        {
            WZ = (xx + (sbyte)PeekByte(PC)) & 0xFFFF;
            AddCycles(PC, 5);
            PC++;
            return PeekByte(WZ);
        }
        #region 8-Bit Arithmetic Group

        public void ADD(int y)
        {
            //  SZ5H3VNC  
            int x = (A + y) & 0xff;

            fs = x & FS;
            fz = (x & 0xff) == 0 ? FZ : 0;
            f5 = x & F5;
            fh = ((((A & 0x0f) + (y & 0x0f))) & 0x10);
            f3 = x & F3;
            fp = (((A ^ ~y) & (A ^ x)) & 0x80) != 0 ? FV : 0;
            fn = 0;
            fc = (A + y) > 0xff ? FC : 0;

            A = x;
        }

        public void SUB(int y)
        {
            //  SZ5H3VNC  
            int x = (A - y) & 0xff;

            fs = x & FS;
            fz = (x & 0xff) == 0 ? FZ : 0;
            f5 = x & F5;
            fh = (((A & 0x0f) - (y & 0x0f)) & 0x10) != 0 ? FH : 0;
            f3 = x & F3;
            fp = (((A ^ y) & (A ^ x)) & 0x80) != 0 ? FV : 0;
            fn = FN;
            fc = ((A - y) & 0x100) != 0 ? FC : 0;

            A = x;
        }

        #endregion 8-Bit Arithmetic Group

        #region Input and Output Group

        public int In(int port)
        {
            return ReadPort(port);
        }

        public int IN()
        {
            int n = In(BC);

            // SZ503P0-	Also true for IN F,(C)

            fs = n & FS;
            fz = n == 0 ? FZ : 0;
            f5 = n & F5;
            fh = 0;
            f3 = n & F3;
            fp = Parity[n];
            fn = 0;
            return n;
        }
        public int BorderColour = 0x07;
        public void Out(int port, int value)
        {
            WritePort(port, value);
        }

        #endregion Input and Output Group

        #region Helper Functions
        public string ToBin(int value)
        {
            return "*S".Substring(value >> 7 & 0x01, 1) +
                "*Z".Substring(value >> 6 & 0x01, 1) +
                "*Y".Substring(value >> 5 & 0x01, 1) +
                "*H".Substring(value >> 4 & 0x01, 1) +
                "*X".Substring(value >> 3 & 0x01, 1) +
                "*P".Substring(value >> 2 & 0x01, 1) +
                "*N".Substring(value >> 1 & 0x01, 1) +
                "*C".Substring(value & 0x01, 1);

        }

        public string Stack(int count)
        {
            System.Text.StringBuilder ss = new System.Text.StringBuilder();
            ushort n = (ushort)(SP);
            for (int i = 0; i < count; i++)
            {
                ss.Append(ToHexWord(n) + " - " + (ToHexByte(ReadByte((ushort)(n + 1)))) + " " + ToHexByte(ReadByte(n)) + Environment.NewLine);
                n += 2;
            }

            return ss.ToString();
        }

        string[] HexWord = new string[65536];
        string[] HexByte = new string[256];

        void GenerateHex()
        {
            for (int i = 0; i < 256; i++)
                HexByte[i] = i.ToString("X2");
            for (int i = 0; i < 65536; i++)
                HexWord[i] = i.ToString("X4");

        }
        /// <summary>
        /// Convert an integer to a string of hexidecimal numbers.
        /// </summary>
        /// <param name="n">The int to convert to Hex representation</param>
        /// <param name="len">number of digits in the hex string. Pads with leading zeros.</param>
        /// <returns></returns>
        public String ToHexWord(int n)
        {
            return HexWord[n];
        }

        public String ToHexByte(int n)
        {
            return HexByte[n];
        }

        /// <summary>
        /// Convert a byte to a hexidecimal char
        /// </summary>
        /// <param name="b"></param>
        /// <returns></returns>
        private char ByteToHexChar(byte b)
        {
            if (b < 0 || b > 15)
                throw new Exception("ByteToHexChar: input out of range for Hex value");
            return b < 10 ? (char)(b + 48) : (char)(b + 55);
        }
        #endregion Helper Functions

        #region Tables
        internal int[] Parity =
        {
            0x04, 0x00, 0x00, 0x04, 0x00, 0x04, 0x04, 0x00, 0x00, 0x04, 0x04, 0x00, 0x04, 0x00, 0x00, 0x04,
            0x00, 0x04, 0x04, 0x00, 0x04, 0x00, 0x00, 0x04, 0x04, 0x00, 0x00, 0x04, 0x00, 0x04, 0x04, 0x00,
            0x00, 0x04, 0x04, 0x00, 0x04, 0x00, 0x00, 0x04, 0x04, 0x00, 0x00, 0x04, 0x00, 0x04, 0x04, 0x00,
            0x04, 0x00, 0x00, 0x04, 0x00, 0x04, 0x04, 0x00, 0x00, 0x04, 0x04, 0x00, 0x04, 0x00, 0x00, 0x04,
            0x00, 0x04, 0x04, 0x00, 0x04, 0x00, 0x00, 0x04, 0x04, 0x00, 0x00, 0x04, 0x00, 0x04, 0x04, 0x00,
            0x04, 0x00, 0x00, 0x04, 0x00, 0x04, 0x04, 0x00, 0x00, 0x04, 0x04, 0x00, 0x04, 0x00, 0x00, 0x04,
            0x04, 0x00, 0x00, 0x04, 0x00, 0x04, 0x04, 0x00, 0x00, 0x04, 0x04, 0x00, 0x04, 0x00, 0x00, 0x04,
            0x00, 0x04, 0x04, 0x00, 0x04, 0x00, 0x00, 0x04, 0x04, 0x00, 0x00, 0x04, 0x00, 0x04, 0x04, 0x00,
            0x00, 0x04, 0x04, 0x00, 0x04, 0x00, 0x00, 0x04, 0x04, 0x00, 0x00, 0x04, 0x00, 0x04, 0x04, 0x00,
            0x04, 0x00, 0x00, 0x04, 0x00, 0x04, 0x04, 0x00, 0x00, 0x04, 0x04, 0x00, 0x04, 0x00, 0x00, 0x04,
            0x04, 0x00, 0x00, 0x04, 0x00, 0x04, 0x04, 0x00, 0x00, 0x04, 0x04, 0x00, 0x04, 0x00, 0x00, 0x04,
            0x00, 0x04, 0x04, 0x00, 0x04, 0x00, 0x00, 0x04, 0x04, 0x00, 0x00, 0x04, 0x00, 0x04, 0x04, 0x00,
            0x04, 0x00, 0x00, 0x04, 0x00, 0x04, 0x04, 0x00, 0x00, 0x04, 0x04, 0x00, 0x04, 0x00, 0x00, 0x04,
            0x00, 0x04, 0x04, 0x00, 0x04, 0x00, 0x00, 0x04, 0x04, 0x00, 0x00, 0x04, 0x00, 0x04, 0x04, 0x00,
            0x00, 0x04, 0x04, 0x00, 0x04, 0x00, 0x00, 0x04, 0x04, 0x00, 0x00, 0x04, 0x00, 0x04, 0x04, 0x00,
            0x04, 0x00, 0x00, 0x04, 0x00, 0x04, 0x04, 0x00, 0x00, 0x04, 0x04, 0x00, 0x04, 0x00, 0x00, 0x04
        };
        #endregion Tables
        #endregion ALU
        public virtual void Reset()
        {
            /*
             AF and SP are always set to FFFFh after a reset, and all other registers are undeﬁned 
             (diﬀerent depending on how long the CPU has been powered oﬀ, diﬀerent for diﬀerent Z80 chips). 
             Of course the PC should be set to 0 after a reset, and so should the IFF1 and IFF2 ﬂags 
             (otherwise strange things could happen). 
             Also since the Z80 is 8080 compatible, interrupt mode is probably 0. 
             Probably the best way to simulate this in an emulator is set PC, IFF1, IFF2, IM to 0 and set all other registers to FFFFh.

             */
            AF = 0xffff;
            SP = 0xffff;

            PC = 0;
            IFF1 = IFF2 = 0;
            IM = 0;

            BC = 0xffff;
            DE = 0xffff;
            HL = 0xffff;
            AF_ = 0xffff;
            BC_ = 0xffff;
            DE_ = 0xffff;
            HL_ = 0xffff;
            IX = 0xffff;
            IY = 0xffff;
            I = 0;
            R7 = 0;
            R = 0;
            InterruptCount = 0;
            Random rnd = new Random();
            for (int i = 0x4000; i < 0x10000; i++) Memory[i] = (byte)rnd.Next(255);
            TotalCycles = 0;
            ExecutedCycles = 0;
            FrameCount = 0;
            Load(Properties.Resources._48, 0);
        }

        public override string ToString()
        {
            string command = "PC  " + ToHexWord(PreExecutePC) + " " + Disassembler.DisassembleLine(Memory, PreExecutePC) + Environment.NewLine; ;
            System.Text.StringBuilder ss = new System.Text.StringBuilder();
            ushort n = (ushort)(SP);
            string title = "";

            for (int i = 0; i < 4; i++)
            {
                ss.Append(title + n.ToString("X4") + " (" + (ReadByte((ushort)(n + 1))).ToString("X2") + ReadByte(n).ToString("X2") + ") " + Environment.NewLine);
                title = "    ";
                n += 2;
            }
            ss.Append(Environment.NewLine);
            return command + Environment.NewLine +
                "AF  " + ToHexByte(A) + " " + ToHexByte(F) + " " + ToBin(F) + " AF_ " + ToHexWord(AF_) + Environment.NewLine + Environment.NewLine +
                "BC  " + ToHexWord(BC) + "           BC_ " + ToHexWord(BC_) + Environment.NewLine +
                "DE  " + ToHexWord(DE) + "           DE_ " + ToHexWord(DE_) + Environment.NewLine +
                "HL  " + ToHexWord(HL) + "           HL_ " + ToHexWord(HL_) + Environment.NewLine + Environment.NewLine +
                "IX  " + ToHexWord(IX) + " " + "IY " + ToHexWord(IY) + Environment.NewLine + Environment.NewLine +
                "SP  " + ss.ToString() +
                "IR    " + ToHexWord(IR) + " " + "IM " + IM.ToString() + Environment.NewLine +
                "IFF1  " + IFF1.ToString() + "    " + "IFF2 " + IFF2.ToString() + Environment.NewLine +
                "WZ    " + ToHexWord(WZ) + Environment.NewLine + Environment.NewLine +
                "Cycles/Last " + RightJust(TotalCycles, 6) + "/" + RightJust(ExecutedCycles, 2) + Environment.NewLine +
                "Frame " + FrameCount.ToString();
            ;
        }

        string RightJust(int value, int length)
        {
            string s = new string(' ', length) + value.ToString();
            return s.Substring(s.Length - length, length);
        }

        public void Status()
        {
            Invalidate();
            Update();
            Globals.DoEvents();
        }
        public bool OSD;
        public bool Turbo;
        public int frameratecounter = 5;

        public Color IdealTextColor(Color bg)
        {
            int nThreshold = 155;
            int bgDelta = Convert.ToInt32((bg.R * 0.299) + (bg.G * 0.587) +
                                          (bg.B * 0.114));

            Color foreColor = (255 - bgDelta < nThreshold) ? Color.Black : Color.White;
            return foreColor;
        }

        public float Multiplier = 1.5f;
        protected override void OnPaint(PaintEventArgs e)
        {
            if (Stepping)
            {
                Consolas = new Font("Consolas", Multiplier * 9);
                OSDBrush = new SolidBrush(IdealTextColor(Color.FromArgb(LastBorder)));
                e.Graphics.DrawString("Monitor Active", Consolas, OSDBrush, new Point(0, 0));
            }
            else
            if (Turbo)
            {
                Consolas = new Font("Consolas", Multiplier * 9);
                OSDBrush = new SolidBrush(IdealTextColor(Color.FromArgb(LastBorder)));
                e.Graphics.DrawString(LastFrameRate.ToString() + "(" + frameratecounter.ToString() + ")", Consolas, OSDBrush, new Point(0, 0));
            }
            else
            {
                Consolas = new Font("Consolas", Multiplier * 9);
                OSDBrush = new SolidBrush(IdealTextColor(Color.FromArgb(LastBorder)));
                e.Graphics.DrawString(LastFrameRate.ToString() + " FPS", Consolas, OSDBrush, new Point(0, 0));
            }
            base.OnPaint(e);
        }



        public bool Debug = true;

        public bool AssemblerEditorVisible;
        public AssemblerEditor AssemblerEditor;
        private void AssemblerEditor_FormClosed(object sender, FormClosedEventArgs e)
        {
            AssemblerEditorVisible = false;
        }

        public bool MonitorVisible;
        public Monitor Monitor;
        private void Monitor_FormClosed(object sender, FormClosedEventArgs e)
        {
            MonitorVisible = false;
        }


        public virtual void Run()
        {
            Run(true);
        }

        public virtual void Run(bool focus)
        {
            if (Parent is Form)
            {
                ((Form)Parent).FormClosing -= Z80_FormClosing;
                ((Form)Parent).FormClosing += Z80_FormClosing;

                ((Form)Parent).Show();

            }
            if (focus)
            {
                Focus();
            }

            Running = true;
            while (true)
            {
                if (Running)
                    ExecuteFrame(69888);
                while (PeekMessage(out MSG msg, IntPtr.Zero, 0, 0, PM_REMOVE))
                {
                    TranslateMessage(ref msg);
                    DispatchMessage(ref msg);
                }
                if (Stopped)
                    break;
            }

        }

        private void Z80_FormClosing1(object sender, FormClosingEventArgs e)
        {
            if (sw != null)
            {
                sw.Flush();
                sw.Close();
                sw.Dispose();
            }
            Stop();
        }

        public void Stop()
        {
            Running = false;
            Stopped = true;
        }

        public void DoRun()
        {
            DoRun(true);
        }
        public void DoRun(bool focus)
        {
            Stopped = false;
            Running = true;
            Stepping = false;
            toolStripButton1.Image = Properties.Resources.PauseHS;
            BringToFront();

            Run(focus);
        }
        public void DoStep()
        {
            Stopped = false;
            Running = true;
            Stepping = true;
            toolStripButton1.Image = Properties.Resources.PlayHS;
            Run(false);
        }
        public void DoPause()
        {
            Stopped = false;
            Running = false;
            Stepping = true;
            toolStripButton1.Image = Properties.Resources.PlayHS;
        }

        public virtual void ProcessInterrupt()
        {
            // Pass control to the Virtual function Interrupt
            Interrupt();
            if (iff1 == 0) return;
            if (HaltCycle)
            {
                HaltCycle = false;
                PC++;
            }
            R++;
            iff1 = iff2 = 0;

            InterruptCount++;
            if (im < 2)
            {
                PokeByte(--SP, PC >> 8);
                PokeByte(--SP, PC & 0xff);
                TotalCycles += 7;
                PC = WZ = 0x38;

            }
            else
            {
                int addr = (I << 8) | 0xff;
                PokeByte(--SP, PC >> 8);
                PokeByte(--SP, PC & 0xff);
                PC = WZ = (PeekByte(addr) + (PeekByte(addr + 1) << 8));
                TotalCycles += 7;

            }
        }

        string logfile = Environment.GetFolderPath(Environment.SpecialFolder.MyDocuments) + @"\" + Path.GetFileNameWithoutExtension(Application.ExecutablePath) + "2.Log";
        StreamWriter sw;
        void Log()
        {
            if (PC < 0x4000) return;
            if (sw == null)
                sw = new StreamWriter(logfile);
            sw.WriteLine(ToString().Replace(Environment.NewLine, "\t"));
        }

        public Stopwatch stopwatch = new Stopwatch();
        public long lastTick;
        public long elapsed;
        public long LastFrameRate;
        public long frameRate;
        public long CurrentFrameRate;
        public long TimerInterval = 20;
        public long frametime;
        public long frame;

        public long CalculateFrameRate()
        {
            elapsed = stopwatch.ElapsedMilliseconds - lastTick;
            if (elapsed >= 1000)
            {
                LastFrameRate = frameRate;
                frameRate = 0;
                lastTick = stopwatch.ElapsedMilliseconds;
            }
            frameRate++;
            return LastFrameRate;
        }

        public virtual void Restart()
        {
            stopwatch.Stop();
            stopwatch.Start();
            Stopped = false;
            Running = true;
        }

        public void SaveState()
        {
            PUSH(PC);
        }

        public void PUSH(int value)
        {
            AddCycles(IR, 1);
            PokeByte(--SP, value >> 8);
            PokeByte(--SP, value & 0xff);

        }

        public int POP()
        {
            return (PeekByte(SP++) + (PeekByte(SP++) << 8));
        }

        [StructLayout(LayoutKind.Sequential)]
        public struct MSG
        {
            public IntPtr hwnd;
            public int message;
            public IntPtr wParam;
            public IntPtr lParam;
            public uint time;
            public int pointX;
            public int pointY;
        }

        public const int PM_REMOVE = 0x01;

        [System.Security.SuppressUnmanagedCodeSecurity]
        [DllImport("User32.dll", CharSet = CharSet.Auto)]
        public static extern bool PeekMessage(out MSG msg, IntPtr hWnd, uint messageFilterMin, uint messageFilterMax, uint flags);

        [DllImport("User32.dll", CharSet = CharSet.Auto)]
        public static extern bool TranslateMessage([In] ref MSG m);

        [DllImport("user32.dll")]
        public static extern bool DispatchMessage([In] ref MSG m);

        protected override void OnKeyDown(KeyEventArgs e)
        {
            contextMenuStrip1.Close();

            if (e.Alt)
                switch (e.KeyCode)
                {
                    case Keys.A:
                        if (AssemblerEditor.Visible) break;

                        AssemblerEditorVisible = true;
                        AssemblerEditor.Show();
                        e.Handled = true;
                        break;
                    case Keys.M:
                        if (Monitor.Visible) break;

                        MonitorVisible = true;
                        Monitor.Show();
                        e.Handled = true;
                        break;
                    case Keys.R:
                        ResetEventHandler(this, EventArgs.Empty);
                        e.Handled = true;
                        break;
                    case Keys.L:
                        OpenFileEvent(this, EventArgs.Empty);
                        break;
                    case Keys.C:
                        ToggleCassettDeckEvent(this, EventArgs.Empty);
                        break;
                }
            base.OnKeyDown(e);
        }

        #region Do Run in emulator
        int returnFromRunInEmulator = -1;
        int _sp, af, bc, de, hl, ix, iy, af_, bc_, de_, hl_;
        public static MicroStopwatch RunInIDEStopwatch = new MicroStopwatch();
        public static long RunInEmulatorTSTates;


        private void AssemblerEditor_LoadInEmulatorHandler(object sender, LoadInEmulatorEventArgs e)
        {
            // Load Assembler Memory
            for (int i = 0; i < 0x10000; i++)
            {
                if (e.Memory[i] != -1)
                {

                    Memory[i] = (byte)e.Memory[i];
                }
            }
        }

        private void AssemblerEditor_RunInEmulatorHandler(object sender, RunInEmulatorEventArgs e)
        {
            Globals.EnsureVisible(Parent.Handle);
            BringToFront();
            Focus();
            // Load Assembler Memory
            for (int i = 0; i < 0x10000; i++)
            {
                if (e.Memory[i] != -1)
                {
                    Memory[i] = (byte)e.Memory[i];
                }
            }
            // Flag return address
            returnFromRunInEmulator = PC;

            // Save State
            af = AF;
            bc = BC;
            de = DE;
            hl = HL;
            ix = IX;
            iy = IY;
            af_ = AF_;
            bc_ = BC_;
            de_ = DE_;
            hl_ = HL_;
            SP -= 2;

            // Push return address
            PokeByte(SP + 1, (PC >> 8) & 0xff);
            PokeByte(SP, PC & 0xff);

            // Disable interrupts
            iff1 = iff2 = 0;

            // Go
            PC = e.StartAddress;
            if (e.Debug)
            {
                Monitor.ListingVisible();
                Monitor.Focus();
                DoPause();
            }
            RunInEmulatorTSTates = 0;
            StartRunInIDE?.Invoke(this, EventArgs.Empty);
            RunInIDEStopwatch.Reset();
            RunInIDEStopwatch.Start();
        }
        #endregion Do Run in emulator

        public static event EventHandler ReturnFromRunInIDE;
        public static event EventHandler StartRunInIDE;

        void StartAssembler()
        {
            if (AssemblerEditor == null)
            {
                AssemblerEditor = new AssemblerEditor();
                AssemblerEditor.RunInEmulatorHandler += AssemblerEditor_RunInEmulatorHandler;
                AssemblerEditor.LoadInEmulatorHandler += AssemblerEditor_LoadInEmulatorHandler;
                AssemblerEditor.FormClosed += AssemblerEditor_FormClosed;
                AssemblerEditorVisible = false;
            }
            if (!AssemblerEditor.Visible)
            {
                AssemblerEditorVisible = true;
                AssemblerEditor.Show();
            }
            else
            {
                AssemblerEditorVisible = false;
                AssemblerEditor.Hide();
            }

        }
        void StartMonitor()
        {
            if (Monitor == null)
            {
                Monitor = new Monitor(this);
                Monitor.FormClosed += Monitor_FormClosed;
                MonitorVisible = false;
            }

            if (!Monitor.Visible)
            {
                MonitorVisible = true;
                Monitor.Show();
                DoStep();
            }
            else
            {
                MonitorVisible = false;
                Monitor.Hide();
                DoRun(true);
            }

        }
        ContextMenuStrip contextMenuStrip1;
        ToolStripMenuItem openFileToolStripMenuItem;
        ToolStripSeparator toolStripSeparator1;
        ToolStripMenuItem assemblerToolStripMenuItem;
        ToolStripMenuItem monitorToolStripMenuItem;
        ToolStripMenuItem cassetteDeckToolStripMenuItem;
        ToolStripSeparator toolStripSeparator2;
        ToolStripMenuItem resetToolStripMenuItem;

        ToolStrip toolStrip1;
        ToolStripButton toolStripButton1;


        protected override void OnMouseUp(MouseEventArgs e)
        {
            if (e.Button == MouseButtons.Right)
                contextMenuStrip1.Show(this, e.Location);
            else
                contextMenuStrip1.Close();
            base.OnMouseUp(e);
        }

        protected override void OnMouseMove(MouseEventArgs e)
        {
            if (e.Y < toolStrip1.Height)
                toolStrip1.Visible = true;
            else
                toolStrip1.Visible = false;
            base.OnMouseMove(e);
        }


        void SetupToolstrip()
        {
            toolStrip1 = new System.Windows.Forms.ToolStrip();
            toolStripButton1 = new System.Windows.Forms.ToolStripButton();
            toolStrip1.SuspendLayout();
            SuspendLayout();
            // 
            // toolStrip1
            // 
            toolStrip1.Items.AddRange(new System.Windows.Forms.ToolStripItem[] {
            toolStripButton1});
            toolStrip1.Location = new System.Drawing.Point(0, 0);
            toolStrip1.Name = "toolStrip1";
            toolStrip1.Size = new System.Drawing.Size(800, 25);
            toolStrip1.TabIndex = 0;
            toolStrip1.Text = "toolStrip1";
            // 
            // toolStripButton1
            // 
            toolStripButton1.DisplayStyle = System.Windows.Forms.ToolStripItemDisplayStyle.Image;
            toolStripButton1.Image = Properties.Resources.PauseHS;
            toolStripButton1.ImageTransparentColor = System.Drawing.Color.Magenta;
            toolStripButton1.Name = "toolStripButton1";
            toolStripButton1.Size = new System.Drawing.Size(23, 22);
            toolStripButton1.Text = "toolStripButton1";
            toolStripButton1.Click += ToolStripButton1_Click;

            Controls.Add(toolStrip1);
            toolStrip1.ResumeLayout(false);
            toolStrip1.PerformLayout();
            toolStrip1.Visible = false;
        }

        private void ToolStripButton1_Click(object sender, EventArgs e)
        {
            StartMonitor();
        }

        void SetupMenu()
        {
            // Setup Context menu
            toolStripSeparator1 = new ToolStripSeparator();
            toolStripSeparator2 = new ToolStripSeparator();
            contextMenuStrip1 = new ContextMenuStrip();
            assemblerToolStripMenuItem = new ToolStripMenuItem();
            monitorToolStripMenuItem = new ToolStripMenuItem();
            openFileToolStripMenuItem = new ToolStripMenuItem();
            cassetteDeckToolStripMenuItem = new ToolStripMenuItem();
            resetToolStripMenuItem = new ToolStripMenuItem();
            // 
            // contextMenuStrip1
            // 
            contextMenuStrip1.Items.AddRange(new ToolStripItem[] {
                openFileToolStripMenuItem,
                toolStripSeparator1,
                assemblerToolStripMenuItem,
                monitorToolStripMenuItem,
                cassetteDeckToolStripMenuItem,
                toolStripSeparator2,
                resetToolStripMenuItem });
            contextMenuStrip1.Size = new Size(181, 48);
            contextMenuStrip1.AutoClose = true;
            // 
            // assemblerToolStripMenuItem
            // 
            assemblerToolStripMenuItem.Image = Properties.Resources.IDE01;
            assemblerToolStripMenuItem.Size = new Size(180, 22);
            assemblerToolStripMenuItem.Text = "Toggle Assembler";
            assemblerToolStripMenuItem.ShortcutKeys = Keys.Alt | Keys.A;
            assemblerToolStripMenuItem.Click += new EventHandler(AssemblerStartEvent);
            // 
            // monitorToolStripMenuItem
            // 
            monitorToolStripMenuItem.Image = Properties.Resources.disassembler;
            monitorToolStripMenuItem.Size = new Size(180, 22);
            monitorToolStripMenuItem.Text = "Toggle Monitor";
            monitorToolStripMenuItem.ShortcutKeys = Keys.Alt | Keys.M;
            monitorToolStripMenuItem.Click += new EventHandler(MonitorStartEvent);
            // 
            // openFileToolStripMenuItem
            // 
            openFileToolStripMenuItem.Image = Properties.Resources.OpenFolder_32x;
            openFileToolStripMenuItem.Size = new Size(180, 22);
            openFileToolStripMenuItem.Text = "Open File";
            openFileToolStripMenuItem.ShortcutKeys = Keys.Alt | Keys.L;
            openFileToolStripMenuItem.Click += new EventHandler(OpenFileEvent);
            // 
            // cassetteDeckToolStripMenuItem
            // 
            cassetteDeckToolStripMenuItem.Image = Properties.Resources._499_512;
            cassetteDeckToolStripMenuItem.Size = new Size(180, 22);
            cassetteDeckToolStripMenuItem.Text = "Toggle Cassette Deck";
            cassetteDeckToolStripMenuItem.ShortcutKeys = Keys.Alt | Keys.C;
            cassetteDeckToolStripMenuItem.Click += new EventHandler(ToggleCassettDeckEvent);
            // 
            // resetToolStripMenuItem 
            // 
            resetToolStripMenuItem.Image = Properties.Resources.Restart1red;
            resetToolStripMenuItem.Size = new Size(180, 22);
            resetToolStripMenuItem.Text = "Reset";
            resetToolStripMenuItem.ShortcutKeys = Keys.Alt | Keys.R;
            resetToolStripMenuItem.Click += new EventHandler(ResetEvent);
        }

        public event EventHandler AssemblerStartEventHandler;
        public event EventHandler MonitorStartEventHandler;
        public event EventHandler OpenFileEventHandler;
        public event EventHandler ToggleCassettDeckEventHandler;

        public void AssemblerStartEvent(object sender, EventArgs e) { StartAssembler(); AssemblerStartEventHandler?.Invoke(this, e); }
        public void MonitorStartEvent(object sender, EventArgs e) { StartMonitor(); MonitorStartEventHandler?.Invoke(this, e); }
        public void OpenFileEvent(object sender, EventArgs e) { OpenFileEventHandler?.Invoke(this, e); }
        public void ToggleCassettDeckEvent(object sender, EventArgs e) { ToggleCassettDeckEventHandler?.Invoke(this, e); }
        public void ResetEvent(object sender, EventArgs e) { Reset(); ResetEventHandler?.Invoke(this, e); }


        // Flag: Has Dispose already been called?
        bool disposed = false;

        // Public implementation of Dispose pattern callable by consumers.
        public new void Dispose()
        {
            Dispose(true);
            base.Dispose(true);
            GC.SuppressFinalize(this);
        }

        // Protected implementation of Dispose pattern.
        protected virtual new void Dispose(bool disposing)
        {
            if (disposed)
                return;

            if (disposing)
            {
                if (Monitor != null) Monitor.Dispose();
                if (AssemblerEditor != null) AssemblerEditor.Dispose();
            }

            disposed = true;
        }

        public Z80()
        {
            Monitor = new Monitor(this);
            Monitor.FormClosed += Monitor_FormClosed;
            MonitorVisible = false;

            AssemblerEditor = new AssemblerEditor();
            AssemblerEditor.RunInEmulatorHandler += AssemblerEditor_RunInEmulatorHandler;
            AssemblerEditor.LoadInEmulatorHandler += AssemblerEditor_LoadInEmulatorHandler;
            AssemblerEditor.FormClosed += AssemblerEditor_FormClosed;
            AssemblerEditorVisible = false;
            DoubleBuffered = true;
            Reset();
            GenerateHex();
            stopwatch.Start();
            CallStack = new Stack<int>();
            SetupMenu();
            SetupToolstrip();

        }

        private void Z80_FormClosing(object sender, FormClosingEventArgs e)
        {
            Stop();
        }

        ~Z80()
        {
            Dispose(false);
        }
    }
}
